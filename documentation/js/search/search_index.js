var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/CustomEventApi.html",[0,0.771,1,1.847]],["body/classes/CustomEventApi.html",[0,1.434,1,2.815,2,2.958,3,0.653,4,0.574,5,0.5,6,0.507,7,2.74,8,2.958,9,0.635,10,1.962,11,3.233,12,1.565,13,4.133,14,1.869,15,0.042,16,1.5,17,5.294,18,1.923,19,3.927,20,2.075,21,0.49,22,4.346,23,2.493,24,0.363,25,0.635,26,3.094,27,4.131,28,1.751,29,3.759,30,1.359,31,2.224,32,3.842,33,3.722,34,1.616,35,4.578,36,1.272,37,1.272,38,0.738,39,3.255,40,2.216,41,3.219,42,3.759,43,0.653,44,2.193,45,3.604,46,3.604,47,0.031,48,0.031]],["title/interfaces/CustomEventProviderFactoryConfigs.html",[49,0.417,50,1.847]],["body/interfaces/CustomEventProviderFactoryConfigs.html",[3,0.777,4,0.683,5,0.594,6,0.432,7,2.333,9,0.594,11,3.172,12,1.495,15,0.041,21,0.494,24,0.432,25,0.707,30,1.307,43,0.777,47,0.035,48,0.035,49,0.594,50,3.131,51,1.362,52,3.011,53,4.869,54,1.618,55,3.579,56,4.18,57,3.952,58,3.457,59,3.952,60,2.13,61,1.1,62,1.679,63,2.634,64,2.634,65,3.011]],["title/injectables/CustomEventWorker.html",[66,0.859,67,1.636]],["body/injectables/CustomEventWorker.html",[0,0.908,1,1.785,3,0.342,4,0.301,5,0.262,6,0.475,7,2.566,9,0.595,10,1.581,11,3.274,12,1.547,14,1.597,15,0.042,18,1.856,20,2.243,21,0.495,24,0.19,25,0.403,26,2.782,28,1.411,29,1.55,30,1.249,31,2.298,32,3.784,33,3.852,34,1.597,36,1.401,37,1.401,38,0.996,39,1.161,40,2.441,41,3.852,42,4.616,43,0.342,44,2.174,47,0.02,48,0.02,58,2.441,61,1.161,62,0.74,63,3.438,64,1.785,65,2.486,66,0.83,67,1.581,68,0.918,69,1.327,70,2.162,71,4.988,72,1.265,73,3.714,74,2.486,75,2.634,76,3.992,77,1.888,78,1.581,79,4.253,80,2.291,81,2.903,82,1.888,83,3.259,84,3.259,85,4.181,86,2.903,87,3.97,88,5.874,89,3.612,90,5.874,91,1.579,92,1.039,93,1.391,94,2.903,95,1.55,96,3.259,97,1.888,98,2.082,99,1.971,100,1.888,101,1.55,102,3.259,103,2.555,104,2.383,105,3.259,106,1.1,107,3.259,108,1.906,109,1.996,110,1.867,111,2.383,112,2.383,113,2.903,114,2.383,115,1.556,116,0.926,117,1.411,118,1.411,119,1.411,120,1.888,121,1.888,122,1.888,123,0.666,124,2.903,125,1.888,126,1.327,127,1.327,128,1.327,129,1.161,130,1.161,131,1.161,132,2.383,133,1.888,134,1.161,135,2.903,136,3.537,137,2.903,138,0.666,139,1.888,140,1.888,141,3.537,142,1.028,143,1.028,144,1.926,145,1.888,146,1.785,147,1.888,148,1.888,149,1.888,150,1.888,151,1.888,152,1.888,153,1.438,154,0.918,155,1.888,156,1.888,157,1.888,158,1.888,159,1.888,160,1.55,161,1.888,162,1.888,163,1.161,164,1.888,165,1.888,166,1.888,167,0.485,168,1.888,169,1.55,170,1.55]],["title/interfaces/HttpSubmitConfig.html",[49,0.417,171,1.847]],["body/interfaces/HttpSubmitConfig.html",[3,0.721,4,0.634,5,0.552,6,0.401,12,1.021,15,0.041,21,0.497,24,0.401,25,0.676,30,1.537,38,1.249,43,0.721,47,0.033,48,0.033,49,0.552,51,1.264,60,2.062,61,1.021,115,2.149,116,0.997,153,1.743,171,2.993,172,2.795,173,3.264,174,4.501,175,3.371,176,5.483,177,5.483,178,5.483,179,5.483,180,5.483,181,5.483,182,4.501,183,2.665,184,5.987,185,3.997,186,3.264,187,2.165]],["title/directives/IntersectionObserverDirective.html",[188,1.636,189,1.847]],["body/directives/IntersectionObserverDirective.html",[0,1.094,3,0.585,4,0.514,5,0.448,6,0.547,9,0.591,12,1.441,13,3.568,14,1.504,15,0.042,16,1.094,21,0.398,24,0.325,25,0.591,26,2.934,28,1.568,34,1.863,36,1.139,37,1.139,38,0.977,43,0.773,44,1.406,47,0.029,48,0.029,54,1.354,61,0.828,62,1.264,72,1.857,80,2.212,92,0.979,93,1.55,167,1.094,188,2.952,189,3.597,190,3.226,191,4.451,192,4.451,193,2.648,194,4.451,195,4.662,196,3.887,197,2.212,198,1.723,199,2.363,200,4.167,201,4.707,202,4.451,203,4.451,204,2.996,205,5.076,206,5.076,207,3.568,208,2.071,209,4.261,210,4.261,211,3.498,212,5.076,213,3.498,214,5.076,215,5.076,216,3.226,217,4.261,218,3.498,219,5.076,220,5.076,221,4.261,222,3.226,223,5.278,224,4.261,225,4.772,226,4.261,227,4.261,228,4.261,229,4.261,230,4.261,231,5.076,232,3.226,233,3.226,234,3.226,235,4.772,236,3.498,237,3.226,238,4.261,239,3.226,240,4.261,241,3.226,242,3.226,243,3.226,244,3.226,245,3.226]],["title/interfaces/PollingConfigs.html",[49,0.417,246,1.46]],["body/interfaces/PollingConfigs.html",[3,0.574,4,0.505,5,0.439,6,0.319,9,0.439,15,0.042,16,0.813,18,1.338,21,0.476,23,1.724,24,0.319,25,0.728,30,0.813,31,1.975,38,1.17,43,0.951,47,0.029,48,0.029,49,0.805,51,1.006,54,1.714,61,1.08,91,1.574,92,1.205,93,1.441,98,2.621,99,1.38,106,1.08,108,1.241,109,2.114,110,1.38,115,1.975,116,1.206,117,2.297,118,2.549,119,2.674,138,1.117,153,1.749,167,1.214,187,1.724,197,1.38,198,1.503,199,1.834,208,2.045,246,2.621,247,1.724,248,2.907,249,2.716,250,2.936,251,2.574,252,2.997,253,2.777,254,2.907,255,2.49,256,2.574,257,2.297,258,2.819,259,3.316,260,2.936,261,2.936,262,2.958,263,2.588,264,2.958,265,2.297,266,1.538,267,2.958,268,1.946,269,2.225,270,2.225,271,2.225,272,2.225,273,2.225,274,1.946,275,1.724,276,2.225,277,2.225,278,2.045,279,1.946,280,1.946,281,1.946,282,1.538,283,1.724,284,1.946,285,2.06,286,1.724,287,2.588,288,2.588,289,2.907,290,2.907,291,2.292,292,1.649,293,2.907,294,1.946]],["title/interfaces/PollingHttpOptions.html",[49,0.417,261,1.636]],["body/interfaces/PollingHttpOptions.html",[3,0.563,4,0.495,5,0.431,6,0.313,9,0.431,15,0.042,16,0.798,18,1.321,21,0.487,23,2.263,24,0.313,25,0.694,30,0.798,31,1.96,38,1.212,43,0.945,47,0.028,48,0.028,49,0.808,51,0.988,54,1.705,61,1.067,91,1.534,92,1.149,93,1.43,98,2.02,99,1.354,106,1.067,108,1.218,109,1.629,110,1.354,115,1.218,116,1.166,117,2.02,118,2.43,119,2.533,138,1.097,153,1.85,167,1.067,187,1.692,197,1.354,198,1.321,199,1.811,208,1.51,246,2.276,247,1.692,248,2.88,249,2.705,250,2.838,251,2.263,252,2.723,253,2.739,254,3.205,255,2.457,256,2.263,257,2.02,258,2.768,259,3.075,260,2.723,261,2.983,262,3.516,263,3.075,264,3.516,265,2.276,266,2.02,267,3.771,268,3.075,269,3.516,270,2.184,271,3.516,272,3.516,273,3.516,274,1.911,275,2.723,276,3.516,277,2.184,278,2.02,279,1.911,280,1.911,281,1.911,282,1.51,283,1.692,284,1.911,285,2.041,286,1.692,287,2.556,288,2.556,289,2.88,290,2.88,291,2.263,292,1.629,293,2.88,294,1.911,295,4.157]],["title/interfaces/PollingManager.html",[49,0.417,285,1.309]],["body/interfaces/PollingManager.html",[3,0.568,4,0.499,5,0.434,6,0.316,9,0.434,15,0.042,16,1.072,18,1.328,21,0.479,23,1.705,24,0.316,25,0.725,30,0.804,31,1.966,38,0.641,43,0.948,47,0.028,48,0.028,49,0.804,51,0.995,54,1.709,61,1.072,91,1.631,92,1.152,93,1.434,98,2.03,99,1.364,106,1.072,108,1.227,109,1.637,110,1.364,115,1.227,116,1.22,117,2.03,118,2.438,119,2.539,138,1.105,153,1.744,167,1.072,187,1.705,197,1.82,198,1.494,199,2.186,208,1.521,246,2.285,247,1.705,248,2.568,249,2.814,250,3.074,251,2.56,252,2.56,253,2.795,254,2.568,255,2.506,256,2.275,257,2.03,258,2.795,259,3.084,260,2.731,261,2.731,262,2.936,263,2.568,264,2.936,265,2.612,266,1.521,267,2.936,268,1.925,269,2.201,270,2.201,271,2.201,272,2.201,273,2.201,274,1.925,275,1.705,276,2.201,277,2.201,278,2.03,279,1.925,280,1.925,281,1.925,282,1.521,283,1.705,284,1.925,285,2.343,286,2.275,287,3.305,288,3.305,289,3.428,290,3.428,291,2.731,292,1.966,293,3.428,294,2.568]],["title/injectables/PollingWorker.html",[66,0.859,296,1.636]],["body/injectables/PollingWorker.html",[0,1.147,3,0.376,4,0.331,5,0.288,6,0.451,9,0.578,10,1.699,14,1.718,15,0.042,16,1.34,19,2.635,20,2.167,21,0.447,24,0.209,25,0.651,26,1.918,28,1.009,30,1.286,31,1.633,34,1.471,36,1.577,37,1.323,38,0.997,40,1.918,43,0.376,44,2.122,47,0.021,48,0.021,54,1.659,60,1.963,61,1.147,62,0.814,66,0.892,68,1.009,70,2.651,72,1.36,78,2.269,80,2.275,91,1.536,92,1.234,98,2.77,99,1.816,109,1.963,110,1.816,116,1.167,117,2.434,118,2.61,119,2.707,123,1.471,138,0.733,144,1.699,154,1.516,167,1.07,183,2.665,187,1.13,197,1.816,198,1.592,199,2.275,207,3.521,208,2.025,246,2.49,249,2.782,250,2.269,251,2.269,252,2.924,253,2.892,254,3.302,255,2.551,256,2.842,257,2.025,258,2.742,263,2.563,266,2.281,274,2.563,283,2.269,285,1.816,291,3.103,292,2.046,296,2.269,297,1.704,298,2.93,299,2.93,300,4.112,301,4.112,302,4.468,303,4.468,304,2.076,305,4.409,306,2.076,307,3.077,308,2.886,309,2.076,310,4.501,311,2.076,312,4.693,313,1.918,314,3.12,315,3.08,316,3.421,317,4.168,318,4.168,319,4.168,320,4.168,321,3.421,322,3.421,323,1.895,324,3.08,325,3.421,326,3.12,327,2.563,328,2.93,329,4.168,330,4.168,331,2.076,332,2.076,333,3.12,334,2.076,335,2.076,336,2.193,337,2.193,338,2.076,339,2.076,340,3.12,341,3.12]],["title/interfaces/ServerSentEvent.html",[49,0.417,342,1.847]],["body/interfaces/ServerSentEvent.html",[3,0.819,4,0.72,5,0.627,6,0.456,9,0.627,12,1.495,15,0.04,18,1.818,21,0.438,24,0.456,25,0.729,43,0.819,47,0.036,48,0.036,49,0.729,51,1.436,52,3.176,323,1.961,342,3.23,343,2.778,344,2.778,345,2.196,346,3.905,347,5.555]],["title/injectables/ServerSentEventWorker.html",[66,0.859,348,1.636]],["body/injectables/ServerSentEventWorker.html",[0,0.44,3,0.311,4,0.273,5,0.238,6,0.547,9,0.568,12,0.691,14,1.994,15,0.042,16,1.052,18,1.54,21,0.434,24,0.173,25,0.374,27,2.73,28,1.309,30,0.854,34,1.899,36,1.605,37,1.33,38,0.931,43,0.311,44,2.111,47,0.018,48,0.018,61,1.116,62,0.672,66,1.078,68,0.833,69,1.205,72,1.895,75,2.518,80,1.895,91,1.634,92,1.348,93,1.622,95,1.407,101,1.407,103,2.615,106,0.968,108,1.605,115,1.704,116,1.015,123,1.33,126,1.205,130,1.054,131,1.054,134,2.045,138,0.605,142,0.933,143,0.933,144,0.933,146,3.362,153,1.497,154,2.21,167,0.968,183,1.99,255,1.174,268,1.656,275,2.367,282,1.309,292,1.055,308,2.317,313,2.896,323,2.107,328,1.893,342,2.796,343,3.337,344,3.337,345,2.886,346,1.893,348,2.052,349,2.693,350,5.748,351,2.317,352,3.569,353,3.569,354,3.569,355,4.082,356,5.426,357,3.326,358,4.347,359,2.673,360,2.73,361,2.73,362,1.893,363,2.73,364,1.714,365,3.484,366,2.564,367,3.866,368,1.714,369,2.693,370,2.211,371,2.211,372,1.656,373,1.174,374,1.893,375,2.693,376,2.693,377,3.094,378,2.693,379,1.714,380,3.094,381,2.693,382,1.714,383,3.733,384,3.611,385,4.277,386,1.714,387,2.693,388,2.693,389,4.217,390,4.069,391,4.347,392,1.407,393,3.094,394,1.714,395,3.769,396,2.211,397,2.693,398,3.769,399,3.094,400,2.211,401,1.893,402,1.407,403,1.714,404,2.693,405,3.094,406,1.714,407,3.094,408,2.693,409,1.714,410,2.693,411,1.714,412,3.203,413,1.714,414,2.693,415,1.714,416,2.693,417,2.73,418,2.693,419,2.693,420,2.693,421,2.693,422,1.714,423,1.407,424,2.518,425,3.569,426,3.326,427,2.649,428,1.714,429,1.714,430,3.326,431,1.714,432,1.714,433,3.326,434,1.407,435,1.714,436,3.326,437,1.205,438,1.205,439,1.205,440,1.714,441,1.714,442,1.054,443,1.407,444,1.714,445,1.714,446,1.714,447,2.693,448,2.211,449,1.054,450,1.054,451,1.714,452,2.693,453,2.693,454,3.326,455,1.714,456,1.407,457,1.714,458,1.714,459,1.714,460,2.693,461,1.714,462,1.714,463,1.714,464,1.714,465,1.714,466,1.714,467,1.714,468,1.714,469,1.407,470,1.205,471,1.407,472,2.211,473,1.407]],["title/injectables/SubscriptionWorker.html",[66,0.859,474,1.636]],["body/injectables/SubscriptionWorker.html",[0,0.923,3,0.351,4,0.309,5,0.269,6,0.551,9,0.697,14,2.066,15,0.042,16,1.113,20,1.791,21,0.459,24,0.195,25,0.411,30,1.259,34,1.91,36,1.731,37,1.731,38,0.824,43,0.351,44,2.19,47,0.02,48,0.02,61,0.923,62,0.76,64,1.192,66,0.847,68,0.942,72,1.992,89,1.192,92,1.36,93,1.614,106,1.173,116,0.397,123,1.613,134,3.452,138,0.684,142,1.055,143,1.055,146,3.09,153,1.142,154,2.311,167,1.358,265,2.933,286,1.613,308,1.821,322,2.431,328,3.213,351,2.474,362,2.082,365,1.362,396,2.431,401,4.085,427,2.527,449,2.21,450,2.21,474,2.191,475,1.591,476,4.842,477,3.213,478,4.582,479,4.755,480,3.594,481,5.289,482,3.594,483,3.594,484,4.024,485,2.961,486,3.594,487,2.961,488,2.961,489,5.888,490,1.938,491,2.961,492,2.961,493,2.961,494,4.335,495,2.961,496,2.961,497,5.853,498,1.938,499,2.431,500,4.026,501,1.938,502,2.961,503,5.026,504,1.938,505,2.961,506,2.961,507,1.938,508,2.961,509,1.938,510,1.938,511,3.594,512,4.571,513,5.289,514,1.938,515,1.938,516,4.026,517,4.024,518,3.303,519,3.594,520,1.938,521,3.594,522,1.938,523,3.594,524,2.431,525,1.938,526,1.938,527,3.594,528,3.594,529,1.938,530,1.938,531,3.594,532,1.938,533,1.938,534,3.594,535,3.594,536,1.938,537,1.591,538,1.938,539,1.938,540,1.938,541,2.961,542,1.938,543,1.938,544,2.961,545,1.938,546,1.938,547,3.594,548,1.938,549,1.938,550,1.938,551,1.192,552,1.938,553,1.938,554,1.938,555,1.938,556,3.904,557,2.961,558,1.938,559,1.938,560,2.961,561,1.938,562,2.961,563,1.938,564,1.938,565,1.938,566,1.938]],["title/interfaces/TimeoutBackoffConfigs.html",[49,0.417,366,1.636]],["body/interfaces/TimeoutBackoffConfigs.html",[3,0.806,4,0.709,5,0.617,6,0.448,9,0.617,15,0.04,21,0.46,24,0.448,25,0.722,38,1.202,43,0.806,47,0.035,48,0.035,49,0.617,51,1.413,60,2.352,366,2.834,372,2.734,373,1.938,567,3.126,568,3.126,569,3.651,570,4.447,571,3.099,572,3.099,573,4.672]],["title/interfaces/WebsocketExponentialBackoffOptions.html",[49,0.417,574,1.636]],["body/interfaces/WebsocketExponentialBackoffOptions.html",[3,0.68,4,0.598,5,0.521,6,0.378,9,0.521,12,1.206,15,0.042,21,0.461,24,0.378,25,0.652,38,1.185,43,0.852,47,0.032,48,0.032,49,0.711,51,1.192,54,1.493,60,2.366,93,1.073,106,0.963,123,1.809,163,2.307,175,2.887,198,1.493,292,1.84,299,3.301,315,2.307,324,3.152,325,4.41,327,2.307,373,2.411,374,3.888,424,2.887,571,3.012,572,3.012,574,2.925,575,2.637,576,4.696,577,3.012,578,2.887,579,4.696,580,3.855,581,4.696,582,5.372,583,4.025,584,3.776,585,3.967,586,3.888,587,3.855,588,4.696,589,5.126,590,4.696,591,3.776,592,3.401,593,3.401,594,2.307,595,3.08,596,5.372,597,3.752,598,2.307,599,2.637,600,3.752,601,2.637,602,2.637]],["title/injectables/WebsocketWorker.html",[66,0.859,603,1.636]],["body/injectables/WebsocketWorker.html",[0,0.765,3,0.264,4,0.232,5,0.202,6,0.539,9,0.561,10,1.285,12,0.765,14,1.988,15,0.042,16,0.765,18,1.589,21,0.459,24,0.147,25,0.328,28,1.147,30,1.093,34,1.87,36,1.566,37,1.331,38,0.939,43,0.264,44,2.054,47,0.016,48,0.016,54,1.684,61,1.139,62,0.57,66,0.675,68,0.706,70,1.285,72,1.029,75,2.728,78,1.285,80,1.029,89,0.894,91,1.643,92,1.289,93,1.515,103,1.667,106,0.765,108,0.57,109,1.584,115,1.584,116,0.61,123,1.052,126,1.022,131,0.894,134,2.32,138,0.513,142,0.791,143,0.791,144,2.677,146,3.196,153,1.353,154,2.665,160,1.193,167,0.881,175,1.451,183,2.343,196,2.411,248,1.832,265,2.526,323,0.833,345,1.147,346,3.856,352,3.317,353,3.317,354,3.317,355,3.997,360,2.446,361,2.446,362,1.659,363,2.446,373,1.029,377,1.938,380,1.938,383,3.764,384,3.118,385,4.311,389,4.036,392,1.193,393,2.816,399,4.825,400,1.938,401,2.652,402,1.193,405,3.495,407,1.938,412,3.229,417,1.193,423,1.193,424,3.663,425,3.317,427,3.223,434,1.193,442,0.894,448,1.938,449,0.894,450,0.894,456,1.193,469,1.938,470,2.095,471,1.193,472,1.938,473,1.193,478,2.446,524,1.193,537,1.193,551,1.832,571,1.285,572,1.285,574,2.054,577,1.285,578,3.699,592,1.451,593,1.451,594,2.819,595,1.193,603,1.868,604,1.193,605,4.041,606,4.041,607,4.041,608,4.916,609,3.317,610,1.453,611,4.449,612,2.816,613,4.502,614,2.816,615,2.816,616,2.36,617,3.456,618,2.36,619,2.36,620,1.453,621,2.36,622,3.43,623,1.453,624,2.36,625,1.453,626,1.453,627,5.073,628,2.36,629,2.36,630,1.453,631,4.436,632,2.36,633,3.43,634,4.041,635,2.36,636,1.453,637,2.36,638,1.453,639,2.36,640,2.36,641,2.36,642,1.453,643,2.36,644,2.36,645,2.36,646,2.36,647,2.36,648,1.453,649,5.198,650,1.453,651,1.453,652,1.453,653,1.453,654,2.98,655,1.453,656,1.453,657,2.98,658,1.453,659,1.453,660,2.98,661,1.453,662,2.36,663,2.98,664,1.453,665,1.453,666,1.453,667,2.98,668,1.453,669,1.453,670,1.022,671,1.022,672,1.022,673,1.022,674,1.453,675,1.453,676,1.453,677,1.453,678,1.451,679,1.193,680,1.453,681,1.453,682,1.453,683,1.453,684,2.98,685,2.98,686,1.453,687,2.36,688,1.453,689,1.453,690,3.43,691,1.453,692,1.193,693,1.453,694,1.193,695,2.36,696,1.453,697,2.36,698,1.453,699,2.36,700,1.453,701,1.453,702,1.453,703,1.453,704,1.453,705,1.453,706,1.453,707,1.453,708,1.453,709,1.453,710,1.453,711,1.453,712,1.453,713,1.453,714,1.453,715,1.453]],["title/coverage.html",[716,3.335]],["body/coverage.html",[0,0.796,1,1.905,5,0.43,6,0.619,7,3.068,8,2.544,15,0.042,16,0.796,21,0.258,47,0.028,48,0.028,49,0.772,50,1.905,52,2.917,66,1.533,67,1.687,69,2.917,74,2.178,116,0.849,127,2.178,128,2.178,129,1.905,130,3.296,171,1.905,172,3.288,173,2.544,188,1.687,189,1.905,191,2.544,192,2.544,193,2.544,246,1.506,247,2.547,261,1.687,285,1.35,296,1.687,297,2.544,323,2.041,336,2.178,337,2.178,342,1.905,343,3.296,344,3.296,348,1.687,359,1.905,366,1.687,437,2.178,438,2.178,439,2.178,474,1.687,475,2.544,567,2.917,568,2.917,569,2.544,574,1.687,575,2.178,603,1.687,604,2.544,670,2.178,671,2.178,672,2.178,673,2.178,678,1.905,716,2.544,717,2.544,718,3.099,719,3.099,720,4.149,721,4.149,722,2.544,723,2.544,724,3.406,725,6.068,726,6.054,727,4.677,728,3.099,729,3.406,730,6.054,731,2.544,732,4.149,733,2.544,734,4.149,735,4.149,736,3.099,737,3.406,738,2.544,739,4.713,740,3.406,741,2.544,742,3.099,743,3.099,744,3.84,745,2.544,746,2.544,747,2.544,748,4.149,749,4.149,750,3.099,751,3.099,752,3.099,753,3.099,754,3.099,755,2.544,756,3.099,757,3.099,758,4.101,759,2.544,760,2.544,761,2.544,762,2.544,763,2.544,764,2.544,765,2.544,766,3.099,767,2.178,768,3.099,769,3.099,770,2.544,771,2.544,772,3.099,773,3.099,774,4.101,775,2.544,776,2.544,777,3.099,778,3.099,779,3.099,780,3.099]],["title/dependencies.html",[781,2.074,782,2.957]],["body/dependencies.html",[15,0.042,47,0.036,48,0.036,62,1.754,138,1.58,142,2.845,143,2.437,442,2.752,782,3.675,783,4.476,784,4.476,785,4.476,786,5.976,787,4.476,788,4.476,789,4.476,790,5.225,791,5.225,792,4.476,793,4.476,794,4.476,795,4.476,796,4.476,797,4.476,798,4.476,799,4.476,800,4.476,801,4.476]],["title/miscellaneous/functions.html",[802,1.228,803,2.957]],["body/miscellaneous/functions.html",[6,0.475,9,0.654,15,0.04,19,2.652,20,1.479,21,0.393,24,0.38,36,1.663,37,1.663,38,1.052,40,2.898,47,0.032,48,0.032,60,2.348,89,2.898,91,1.47,92,1.181,93,1.079,106,1.21,109,2.171,116,1.134,123,1.955,163,3.16,167,0.969,198,1.498,204,2.652,208,2.693,213,3.097,278,1.833,315,3.407,324,3.31,327,2.32,359,2.898,373,2.054,443,3.868,567,2.652,568,2.652,571,2.931,572,2.931,573,3.868,577,2.566,583,4.03,584,3.784,585,4.074,586,2.652,587,3.097,591,3.972,592,2.898,593,2.32,598,2.898,599,3.313,601,2.652,602,2.652,678,2.898,722,3.097,723,3.097,724,4.419,802,1.833,803,3.097,804,3.773,805,3.773,806,3.773,807,3.097,808,3.613,809,4.219,810,3.868,811,4.639,812,3.097,813,3.097,814,3.097,815,3.773,816,4.712,817,4.712,818,3.773,819,4.712,820,3.773,821,3.097,822,3.773,823,3.773,824,3.773]],["title/index.html",[24,0.255,825,2.074,826,2.074]],["body/index.html",[0,1.373,2,2.325,11,1.542,12,1.146,13,1.991,14,2.126,15,0.042,16,1.463,18,1.604,20,1.529,21,0.325,31,2.275,36,1.377,47,0.027,48,0.027,57,1.991,58,3.208,59,3.668,60,1.529,63,3.208,67,2.125,70,1.542,75,2.4,78,2.125,83,2.325,91,1.376,92,1.106,96,3.204,99,1.946,102,2.325,103,1.896,104,2.325,105,4.539,106,1.34,110,1.946,111,3.666,112,3.666,116,1.115,123,1.842,129,1.741,144,1.542,163,2.4,183,1.376,188,1.542,189,2.746,194,3.666,195,3.666,196,1.991,197,1.234,198,1.24,199,1.234,200,2.325,201,3.204,202,2.325,203,2.325,204,2.743,207,1.991,218,2.325,236,2.325,249,1.376,266,1.376,278,2.339,286,2.432,296,2.125,315,3.288,323,0.999,324,2.959,327,1.741,345,1.376,348,2.125,355,1.991,359,1.741,372,1.741,373,1.946,442,1.741,474,2.125,476,2.325,477,1.991,499,2.325,551,3.504,571,2.125,572,2.125,577,2.125,578,1.741,583,3.549,584,2.743,585,3.668,586,2.743,591,3.383,592,1.741,593,2.4,598,2.4,599,2.743,601,1.991,602,1.991,603,1.542,617,2.743,678,2.4,679,2.325,767,2.743,807,3.666,808,2.743,809,3.951,810,3.204,811,3.204,812,3.204,813,2.325,814,3.204,827,2.832,828,4.812,829,2.832,830,2.325,831,4.465,832,2.832,833,2.832,834,2.832,835,2.832,836,2.832,837,2.832,838,5.218,839,2.832,840,2.832,841,2.325,842,2.325,843,2.832,844,2.832,845,2.832,846,2.832,847,2.832,848,2.832,849,2.832,850,4.678,851,5.698,852,5.698,853,3.902,854,1.741,855,3.902,856,2.832,857,2.832,858,2.832,859,4.465,860,2.832,861,4.465,862,3.902,863,2.832,864,2.832,865,4.465,866,2.832,867,2.832,868,2.832,869,3.902,870,2.832,871,2.832,872,2.832,873,2.832,874,2.832,875,2.832,876,3.902,877,2.832,878,3.902,879,2.832,880,2.832,881,2.832,882,2.832,883,2.832,884,2.832,885,3.902,886,2.832]],["title/license.html",[825,2.074,826,2.074,887,1.776]],["body/license.html",[0,0.54,4,0.858,5,0.698,9,0.292,12,0.54,14,1.48,15,0.032,20,1.76,34,0.742,37,1.333,39,1.292,47,0.021,48,0.021,51,0.668,55,1.477,61,0.54,80,2.055,198,1.333,211,1.725,251,2.056,282,2.038,292,0.824,294,1.292,298,1.477,308,1.292,313,1.292,316,1.725,323,0.742,351,1.936,370,3.1,390,2.585,412,1.936,450,2.899,477,2.214,516,1.725,518,2.585,580,3.1,617,3.681,717,3.1,830,1.725,841,1.725,854,1.292,887,4.168,888,3.443,889,3.1,890,3.1,891,2.102,892,2.102,893,2.102,894,5.141,895,5.444,896,4.194,897,4.492,898,2.102,899,5.542,900,5.236,901,2.102,902,2.102,903,2.102,904,2.102,905,5.236,906,5.444,907,4.715,908,5.236,909,3.149,910,2.102,911,4.492,912,2.102,913,2.102,914,2.102,915,4.194,916,2.102,917,5.141,918,2.102,919,4.194,920,3.149,921,3.149,922,2.102,923,3.776,924,3.149,925,3.149,926,2.102,927,2.102,928,5.652,929,3.149,930,2.102,931,3.149,932,2.102,933,2.102,934,2.102,935,2.102,936,2.102,937,2.102,938,2.102,939,2.102,940,3.776,941,2.102,942,3.776,943,3.149,944,5.444,945,2.102,946,2.102,947,4.715,948,5.141,949,4.194,950,3.149,951,3.776,952,3.776,953,2.102,954,2.102,955,2.102,956,2.102,957,2.102,958,3.149,959,2.102,960,2.102,961,2.102,962,5.929,963,3.776,964,3.149,965,2.102,966,2.102,967,5.141,968,2.102,969,3.149,970,2.102,971,5.652,972,5.682,973,1.725,974,2.102,975,2.102,976,2.102,977,2.102,978,2.102,979,2.102,980,3.149,981,3.149,982,2.102,983,2.102,984,2.102,985,2.102,986,4.194,987,4.492,988,2.102,989,3.149,990,4.194,991,3.149,992,1.725,993,4.492,994,3.149,995,2.102,996,2.102,997,2.102,998,2.102,999,2.102,1000,3.149,1001,2.102,1002,2.102,1003,3.776,1004,2.102,1005,2.102,1006,3.776,1007,2.102,1008,2.102,1009,2.102,1010,4.194,1011,5.236,1012,2.102,1013,2.102,1014,3.149,1015,5.028,1016,3.776,1017,3.149,1018,3.149,1019,3.149,1020,3.149,1021,3.776,1022,3.149,1023,3.776,1024,3.149,1025,3.149,1026,3.149,1027,3.149,1028,2.102,1029,3.149,1030,3.149,1031,2.102,1032,4.492,1033,4.889,1034,3.776,1035,3.149,1036,2.102,1037,2.102,1038,3.149,1039,3.149,1040,2.102,1041,2.102,1042,3.776,1043,3.149,1044,2.102,1045,2.102,1046,2.102,1047,3.776,1048,2.102,1049,2.102,1050,2.102,1051,3.149,1052,3.149,1053,2.102,1054,2.102,1055,2.102,1056,2.102,1057,2.102,1058,2.102,1059,2.102,1060,3.149,1061,2.102,1062,2.102,1063,2.102,1064,2.102,1065,2.102,1066,2.102,1067,2.102,1068,4.492,1069,2.102,1070,2.102,1071,2.102,1072,3.776,1073,2.102,1074,2.102,1075,2.102,1076,2.102,1077,5.028,1078,2.102,1079,2.102,1080,2.102,1081,2.102,1082,2.102,1083,4.194,1084,3.149,1085,4.194,1086,2.102,1087,2.102,1088,4.194,1089,2.102,1090,2.102,1091,2.102,1092,2.102,1093,3.776,1094,2.102,1095,2.102,1096,3.149,1097,3.149,1098,2.102,1099,2.102,1100,2.102,1101,2.102,1102,3.149,1103,2.102,1104,2.102,1105,4.492,1106,2.102,1107,2.102,1108,2.102,1109,2.102,1110,2.102,1111,2.102,1112,3.776,1113,4.194,1114,2.102,1115,1.725,1116,2.102,1117,2.102,1118,2.102,1119,2.102,1120,2.102,1121,2.102,1122,2.102,1123,1.725,1124,2.102,1125,3.149,1126,2.102,1127,2.102,1128,3.149,1129,2.102,1130,2.102,1131,3.443,1132,2.102,1133,2.102,1134,2.102,1135,2.102,1136,2.102,1137,2.102,1138,4.194,1139,3.776,1140,3.776,1141,3.776,1142,3.149,1143,3.776,1144,3.149,1145,3.149,1146,3.149,1147,3.149,1148,2.102,1149,2.102,1150,2.102,1151,2.102,1152,2.102,1153,2.102,1154,2.102,1155,2.102,1156,3.149,1157,2.102,1158,2.102,1159,2.102,1160,4.492,1161,2.102,1162,2.102,1163,2.102,1164,2.102,1165,2.102,1166,2.102,1167,2.102,1168,2.102,1169,4.492,1170,2.102,1171,2.102,1172,2.102,1173,2.102,1174,2.102,1175,2.102,1176,2.102,1177,2.102,1178,2.102,1179,2.102,1180,2.102,1181,2.102,1182,2.102,1183,2.102,1184,2.102,1185,2.102,1186,2.102,1187,2.102,1188,2.102,1189,3.776,1190,2.102,1191,2.102,1192,2.102,1193,2.102,1194,2.102,1195,3.149,1196,2.102,1197,2.102,1198,2.102,1199,2.102,1200,2.102,1201,2.102,1202,2.102,1203,2.102,1204,2.102,1205,2.102,1206,2.102,1207,2.102,1208,2.102,1209,2.102,1210,2.102,1211,2.102,1212,2.102,1213,2.102,1214,3.149,1215,3.149,1216,2.102,1217,2.102,1218,2.102,1219,2.102,1220,2.102,1221,2.102,1222,2.102,1223,2.102,1224,2.102,1225,2.102,1226,2.102,1227,2.102,1228,2.102,1229,2.102,1230,2.102,1231,2.102,1232,2.102,1233,2.102,1234,2.102,1235,2.102,1236,2.102,1237,2.102]],["title/modules.html",[1238,3.335]],["body/modules.html",[15,0.037,47,0.037,48,0.037,1238,3.924]],["title/overview.html",[1239,3.335]],["body/overview.html",[0,1.213,15,0.037,47,0.037,48,0.037,51,1.502,68,2.297,188,2.574,854,3.315,1239,3.88,1240,4.726,1241,4.726]],["title/properties.html",[25,0.5,781,2.074]],["body/properties.html",[9,0.636,15,0.041,25,0.636,47,0.036,48,0.036,103,2.228,266,2.84,323,1.618,345,2.228,842,3.764,887,3.223,888,3.764,889,3.764,890,3.764,1242,4.585,1243,4.585,1244,4.585,1245,5.299,1246,4.585,1247,4.585,1248,3.764,1249,4.585,1250,4.585,1251,4.585]],["title/miscellaneous/typealiases.html",[802,1.228,1252,3.602]],["body/miscellaneous/typealiases.html",[6,0.518,15,0.035,21,0.48,24,0.438,47,0.035,48,0.035,54,1.632,91,1.242,92,1.256,106,1.318,108,1.703,116,1.208,117,2.111,118,2.656,119,2.656,153,1.632,167,1.115,247,2.365,253,2.495,255,2.238,256,2.365,257,2.111,258,2.868,259,3.473,260,3.075,278,2.495,279,2.671,280,2.671,281,2.671,282,2.111,283,2.365,284,2.671,575,3.054,594,3.157,802,2.111,1253,4.344,1254,5.134,1255,4.344]],["title/miscellaneous/variables.html",[802,1.228,1256,2.957]],["body/miscellaneous/variables.html",[6,0.507,7,1.583,10,0.763,11,2.696,12,1.414,15,0.042,16,1.433,18,1.656,20,2.095,21,0.452,22,3.039,23,1.248,24,0.141,30,1.249,31,2.095,32,1.611,33,0.985,34,0.495,39,1.409,41,0.985,47,0.016,48,0.016,50,0.862,53,4.661,54,1.699,55,3.729,56,3.716,57,0.985,58,2.276,59,0.985,60,1.139,63,2.69,64,2.443,65,1.611,67,0.763,70,2.382,72,0.611,73,1.881,74,1.611,76,2.386,78,2.163,79,2.386,80,1.613,84,1.151,85,1.151,91,1.654,92,1.096,93,1.199,98,1.931,99,1.613,103,1.631,106,1.51,107,1.151,108,1.774,109,2.061,110,1.613,114,3.262,115,1.714,116,1.077,123,1.97,127,2.043,128,1.611,129,2.064,130,2.69,131,2.276,132,3.039,153,1.656,154,2.634,167,1.076,169,1.151,170,1.151,171,0.862,172,0.985,174,1.151,175,2.064,182,1.151,183,2.2,185,1.881,186,3.716,197,2.312,198,0.446,199,1.267,249,2.126,250,1.248,252,1.583,253,1.931,255,1.463,257,0.681,258,0.681,260,0.763,265,1.931,275,1.248,285,0.611,287,0.862,288,0.862,289,1.409,290,1.409,291,2.382,292,1.451,293,0.862,296,1.248,298,2.043,299,0.985,300,1.151,301,1.151,305,2.756,307,1.151,310,3.994,313,1.409,321,2.756,323,1.856,336,2.043,337,2.36,343,1.409,344,1.409,345,2.365,348,1.583,351,1.787,365,3.758,366,1.828,367,2.756,371,2.386,372,1.787,373,1.463,374,0.985,384,3.891,412,2.783,424,2.443,437,2.043,438,1.611,439,1.611,449,2.443,470,1.611,474,1.248,500,3.823,551,3.091,556,1.151,574,0.763,577,0.763,578,2.578,594,1.409,598,1.409,603,1.583,609,1.881,611,1.881,612,1.881,613,3.262,614,1.881,615,1.881,670,2.043,671,2.36,672,2.043,673,2.36,692,1.881,694,1.151,729,2.386,731,1.881,733,1.881,737,2.386,738,1.881,739,4.182,740,2.756,741,2.386,744,1.151,745,2.386,746,1.151,747,1.881,755,1.881,758,1.151,759,1.881,760,1.881,761,1.881,762,1.151,763,2.386,764,1.151,765,1.881,767,2.947,770,1.151,771,1.881,774,1.151,775,1.151,776,1.881,802,0.681,808,2.36,821,1.881,850,3.823,854,0.862,973,2.756,992,1.151,1115,1.881,1123,2.386,1131,1.881,1248,3.262,1256,1.151,1257,2.907,1258,3.973,1259,3.357,1260,2.291,1261,1.402,1262,3.357,1263,1.402,1264,1.402,1265,1.402,1266,3.357,1267,1.402,1268,4.193,1269,2.907,1270,2.291,1271,2.291,1272,1.402,1273,1.402,1274,1.402,1275,1.402,1276,1.402,1277,1.402,1278,1.402,1279,1.402,1280,1.402,1281,1.402,1282,1.402,1283,1.402,1284,1.402,1285,1.402,1286,1.402,1287,3.973,1288,1.402,1289,3.973,1290,1.402,1291,1.402,1292,2.907,1293,2.291,1294,1.402,1295,1.402,1296,1.402,1297,3.973,1298,1.402,1299,1.402,1300,1.402,1301,1.402,1302,2.291,1303,1.402,1304,2.291,1305,2.291,1306,1.402,1307,1.402,1308,1.402,1309,1.402,1310,1.402,1311,1.402,1312,1.402,1313,1.402,1314,3.973,1315,3.973,1316,3.357,1317,1.402,1318,3.357,1319,3.357,1320,3.357,1321,3.701,1322,5.509,1323,1.402,1324,2.907,1325,1.402,1326,2.291,1327,2.291,1328,3.973,1329,1.402,1330,2.907,1331,2.907,1332,2.907,1333,1.402,1334,2.291,1335,1.402,1336,1.402,1337,1.402,1338,2.291,1339,2.291,1340,1.402,1341,1.402,1342,3.357,1343,3.357,1344,1.402,1345,1.402,1346,1.402,1347,1.402,1348,1.402,1349,1.402,1350,1.402,1351,1.402,1352,1.402,1353,1.402,1354,1.402,1355,1.402,1356,1.402,1357,1.402,1358,1.402,1359,1.402,1360,1.402,1361,1.402,1362,1.402,1363,1.402,1364,1.402,1365,2.907,1366,1.402,1367,2.907,1368,2.907,1369,1.402,1370,1.402,1371,1.402,1372,1.402,1373,1.402,1374,1.402,1375,1.402,1376,3.701,1377,3.701,1378,1.402,1379,1.402,1380,1.402,1381,1.402,1382,1.402,1383,1.402,1384,1.402,1385,1.402,1386,2.291,1387,2.291,1388,2.291,1389,1.402,1390,2.291,1391,1.402]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["0.14.4",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":854,"title":{},"body":{"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1242,"title":{},"body":{"properties.html":{}}}],["1.0.9",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":315,"title":{},"body":{"injectables/PollingWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["1000).pipe",{"_index":868,"title":{},"body":{"index.html":{}}}],["1000);example",{"_index":866,"title":{},"body":{"index.html":{}}}],["1000);service",{"_index":837,"title":{},"body":{"index.html":{}}}],["11",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["13/15",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["17.3.3",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":809,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["2.0",{"_index":890,"title":{},"body":{"license.html":{},"properties.html":{}}}],["2.6.2",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["2004",{"_index":892,"title":{},"body":{"license.html":{}}}],["24vlh/ts",{"_index":142,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"dependencies.html":{}}}],["25",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":808,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["3/3",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["30000",{"_index":600,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{}}}],["33",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":934,"title":{},"body":{"license.html":{}}}],["5000);timeoutbackoff",{"_index":834,"title":{},"body":{"index.html":{}}}],["6",{"_index":1240,"title":{},"body":{"overview.html":{}}}],["6/7",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":810,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["61",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1241,"title":{},"body":{"overview.html":{}}}],["8/13",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":903,"title":{},"body":{"license.html":{}}}],["9/13",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["above",{"_index":1117,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1192,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1189,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":362,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["act",{"_index":1199,"title":{},"body":{"license.html":{}}}],["acting",{"_index":913,"title":{},"body":{"license.html":{}}}],["acts",{"_index":1167,"title":{},"body":{"license.html":{}}}],["add",{"_index":477,"title":{},"body":{"injectables/SubscriptionWorker.html":{},"index.html":{},"license.html":{}}}],["add(...subs",{"_index":488,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["added",{"_index":495,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["addendum",{"_index":1104,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1105,"title":{},"body":{"license.html":{}}}],["additions",{"_index":988,"title":{},"body":{"license.html":{}}}],["adds",{"_index":493,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["advised",{"_index":1187,"title":{},"body":{"license.html":{}}}],["against",{"_index":1052,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1202,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1141,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1122,"title":{},"body":{"license.html":{}}}],["aliases",{"_index":1253,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alleging",{"_index":1057,"title":{},"body":{"license.html":{}}}],["alone",{"_index":1048,"title":{},"body":{"license.html":{}}}],["along",{"_index":1094,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1103,"title":{},"body":{"license.html":{}}}],["already",{"_index":469,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["and/or",{"_index":1196,"title":{},"body":{"license.html":{}}}],["angular",{"_index":266,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"index.html":{},"properties.html":{}}}],["angular's",{"_index":375,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["angular/animations",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":187,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{}}}],["angular/compiler",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":62,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":977,"title":{},"body":{"license.html":{}}}],["apache",{"_index":888,"title":{},"body":{"license.html":{},"properties.html":{}}}],["api",{"_index":13,"title":{},"body":{"classes/CustomEventApi.html":{},"directives/IntersectionObserverDirective.html":{},"index.html":{}}}],["appear",{"_index":1099,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":969,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1139,"title":{},"body":{"license.html":{}}}],["application",{"_index":56,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":317,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["applied",{"_index":204,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["applies",{"_index":1041,"title":{},"body":{"license.html":{}}}],["apply",{"_index":390,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"license.html":{}}}],["appropriate",{"_index":1219,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1155,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1228,"title":{},"body":{"license.html":{}}}],["argument",{"_index":284,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"miscellaneous/typealiases.html":{}}}],["arguments",{"_index":280,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"miscellaneous/typealiases.html":{}}}],["arising",{"_index":1174,"title":{},"body":{"license.html":{}}}],["around",{"_index":227,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["array",{"_index":494,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["array.from(this.mappedsubs.values()).every",{"_index":561,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["assert",{"_index":143,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"dependencies.html":{}}}],["asserted",{"_index":1208,"title":{},"body":{"license.html":{}}}],["associated",{"_index":39,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["assume",{"_index":1157,"title":{},"body":{"license.html":{}}}],["attach",{"_index":1211,"title":{},"body":{"license.html":{}}}],["attached",{"_index":968,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":589,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{}}}],["attempts",{"_index":586,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["attribute",{"_index":829,"title":{},"body":{"index.html":{}}}],["attribution",{"_index":1083,"title":{},"body":{"license.html":{}}}],["author",{"_index":1250,"title":{},"body":{"properties.html":{}}}],["authorized",{"_index":909,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":963,"title":{},"body":{"license.html":{}}}],["available",{"_index":965,"title":{},"body":{"license.html":{}}}],["b",{"_index":1073,"title":{},"body":{"license.html":{}}}],["backoff",{"_index":373,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["backoff.interface.ts",{"_index":569,"title":{},"body":{"interfaces/TimeoutBackoffConfigs.html":{},"coverage.html":{}}}],["backoff.ts",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["backoff/exponentially",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["backoff/timeout",{"_index":568,"title":{},"body":{"interfaces/TimeoutBackoffConfigs.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["based",{"_index":973,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["basis",{"_index":1142,"title":{},"body":{"license.html":{}}}],["before",{"_index":163,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["behalf",{"_index":993,"title":{},"body":{"license.html":{}}}],["below",{"_index":970,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":939,"title":{},"body":{"license.html":{}}}],["best",{"_index":848,"title":{},"body":{"index.html":{}}}],["beta.5",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":584,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["bind",{"_index":830,"title":{},"body":{"index.html":{},"license.html":{}}}],["body",{"_index":270,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{}}}],["boilerplate",{"_index":1212,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":153,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["boolean>(comparercallback",{"_index":168,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["boolean>(filtercallback",{"_index":166,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["bootstrapping",{"_index":847,"title":{},"body":{"index.html":{}}}],["bootstrappollingsession",{"_index":336,"title":{},"body":{"injectables/PollingWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapsession",{"_index":302,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["bootstrapsession(url",{"_index":309,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["brackets",{"_index":1215,"title":{},"body":{"license.html":{}}}],["browser",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["c",{"_index":1080,"title":{},"body":{"license.html":{}}}],["call",{"_index":817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["callback",{"_index":109,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["callback((event",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["called",{"_index":208,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"miscellaneous/functions.html":{}}}],["calling",{"_index":820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["carry",{"_index":1075,"title":{},"body":{"license.html":{}}}],["catch",{"_index":564,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["catches",{"_index":88,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["cause",{"_index":925,"title":{},"body":{"license.html":{}}}],["changed",{"_index":1079,"title":{},"body":{"license.html":{}}}],["changes",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["character",{"_index":1173,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1023,"title":{},"body":{"license.html":{}}}],["check",{"_index":662,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["checked",{"_index":512,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["checks",{"_index":328,"title":{},"body":{"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{}}}],["choose",{"_index":1190,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1054,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1043,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/CustomEventApi.html":{}},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"coverage.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/CustomEventApi.html":{},"index.html":{}}}],["cleanup",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["close",{"_index":619,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["closed",{"_index":470,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["closeevent",{"_index":595,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{}}}],["closeeventobserver",{"_index":615,"title":{},"body":{"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["closeobserver",{"_index":695,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["closeobserver?.next?.(event",{"_index":701,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["code",{"_index":951,"title":{},"body":{"license.html":{}}}],["combination",{"_index":1049,"title":{},"body":{"license.html":{}}}],["comment",{"_index":1220,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1184,"title":{},"body":{"license.html":{}}}],["common",{"_index":918,"title":{},"body":{"license.html":{}}}],["communication",{"_index":580,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"license.html":{}}}],["compare",{"_index":117,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"miscellaneous/typealiases.html":{}}}],["comparer",{"_index":114,"title":{},"body":{"injectables/CustomEventWorker.html":{},"miscellaneous/variables.html":{}}}],["comparercallback",{"_index":98,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"miscellaneous/variables.html":{}}}],["compiled",{"_index":957,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1231,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1110,"title":{},"body":{"license.html":{}}}],["computer",{"_index":1181,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":895,"title":{},"body":{"license.html":{}}}],["configs",{"_index":310,"title":{},"body":{"injectables/PollingWorker.html":{},"miscellaneous/variables.html":{}}}],["configs.filtercallback",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs.options",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs.patchoptions",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs.patchurl",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs.postoptions",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs.posturl",{"_index":1364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs.putoptions",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs.puturl",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs.url",{"_index":1365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs.windowobject",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs.windowobjectinjectiontoken",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs?.comparercallback",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs?.filtercallback",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs?.httpoptions",{"_index":341,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["configuration",{"_index":292,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":570,"title":{},"body":{"interfaces/TimeoutBackoffConfigs.html":{}}}],["configure",{"_index":248,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/WebsocketWorker.html":{}}}],["configures",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connect",{"_index":352,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["connection",{"_index":424,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["connections",{"_index":846,"title":{},"body":{"index.html":{}}}],["connects",{"_index":377,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["consequential",{"_index":1172,"title":{},"body":{"license.html":{}}}],["considered",{"_index":517,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["consistent",{"_index":1198,"title":{},"body":{"license.html":{}}}],["console.error(`failed",{"_index":565,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["console.log(response",{"_index":320,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["console.warn",{"_index":711,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["console.warn('eventsource",{"_index":468,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["console.warn('websocket",{"_index":715,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["conspicuously",{"_index":1007,"title":{},"body":{"license.html":{}}}],["const",{"_index":551,"title":{},"body":{"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":602,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["constitutes",{"_index":1058,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["constructor(el",{"_index":222,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["constructor(http",{"_index":304,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["constructor(private",{"_index":237,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["constructor(public",{"_index":339,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["constructor(type",{"_index":29,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{}}}],["constructor(url",{"_index":364,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["constructor(urlorwebsocketsubjectconfig",{"_index":610,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["constructs",{"_index":369,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["construed",{"_index":1106,"title":{},"body":{"license.html":{}}}],["contained",{"_index":1090,"title":{},"body":{"license.html":{}}}],["contains",{"_index":210,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["content",{"_index":316,"title":{},"body":{"injectables/PollingWorker.html":{},"license.html":{}}}],["contents",{"_index":1100,"title":{},"body":{"license.html":{}}}],["context",{"_index":268,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/ServerSentEventWorker.html":{}}}],["contract",{"_index":929,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":987,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1047,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1112,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1011,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1059,"title":{},"body":{"license.html":{}}}],["control",{"_index":915,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":916,"title":{},"body":{"license.html":{}}}],["controls",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["conversions",{"_index":959,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1066,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1072,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":906,"title":{},"body":{"license.html":{}}}],["count",{"_index":824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["counterclaim",{"_index":1055,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":716,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":78,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/PollingWorker.html":{},"injectables/WebsocketWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":19,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/PollingWorker.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":371,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"miscellaneous/variables.html":{}}}],["cross",{"_index":1053,"title":{},"body":{"license.html":{}}}],["curr",{"_index":110,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["curr.id",{"_index":319,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["curr.key",{"_index":112,"title":{},"body":{"injectables/CustomEventWorker.html":{},"index.html":{}}}],["current",{"_index":119,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"miscellaneous/typealiases.html":{}}}],["custom",{"_index":11,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["custom_event_provider_factory",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["custom_event_provider_factory(workerinjectiontoken",{"_index":853,"title":{},"body":{"index.html":{}}}],["custom_event_stream_replay_subject",{"_index":127,"title":{},"body":{"injectables/CustomEventWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["custom_event_type",{"_index":128,"title":{},"body":{"injectables/CustomEventWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["custom_event_window_object",{"_index":129,"title":{},"body":{"injectables/CustomEventWorker.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["customary",{"_index":1133,"title":{},"body":{"license.html":{}}}],["customeventapi",{"_index":1,"title":{"classes/CustomEventApi.html":{}},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"coverage.html":{}}}],["customeventapi('type",{"_index":17,"title":{},"body":{"classes/CustomEventApi.html":{}}}],["customeventapi(type",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customeventapi).data",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customeventinit",{"_index":33,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"miscellaneous/variables.html":{}}}],["customeventproviderfactoryconfigs",{"_index":50,"title":{"interfaces/CustomEventProviderFactoryConfigs.html":{}},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["customeventstream",{"_index":71,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["customeventworker",{"_index":67,"title":{"injectables/CustomEventWorker.html":{}},"body":{"injectables/CustomEventWorker.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["customeventworker.dispatch(data",{"_index":83,"title":{},"body":{"injectables/CustomEventWorker.html":{},"index.html":{}}}],["customeventworker.dispatch(data);example",{"_index":856,"title":{},"body":{"index.html":{}}}],["customeventworker.dispatchcustomevent(window",{"_index":96,"title":{},"body":{"injectables/CustomEventWorker.html":{},"index.html":{}}}],["customeventworker.listen",{"_index":102,"title":{},"body":{"injectables/CustomEventWorker.html":{},"index.html":{}}}],["customeventworker.listen$((data",{"_index":104,"title":{},"body":{"injectables/CustomEventWorker.html":{},"index.html":{}}}],["customeventworker.listen$().pipe",{"_index":860,"title":{},"body":{"index.html":{}}}],["customeventworker.listen$();example",{"_index":858,"title":{},"body":{"index.html":{}}}],["d",{"_index":1086,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1169,"title":{},"body":{"license.html":{}}}],["data",{"_index":18,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data);example",{"_index":855,"title":{},"body":{"index.html":{}}}],["data.data",{"_index":400,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["data.event.type",{"_index":398,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["data.key",{"_index":105,"title":{},"body":{"injectables/CustomEventWorker.html":{},"index.html":{}}}],["data.type",{"_index":633,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["date",{"_index":1063,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":120,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["default",{"_index":123,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":87,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["defend",{"_index":1204,"title":{},"body":{"license.html":{}}}],["defined",{"_index":34,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":576,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{}}}],["definition",{"_index":920,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":898,"title":{},"body":{"license.html":{}}}],["delay",{"_index":583,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["deliberate",{"_index":1164,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":782,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["derivative",{"_index":971,"title":{},"body":{"license.html":{}}}],["derived",{"_index":974,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1134,"title":{},"body":{"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"license.html":{},"properties.html":{}}}],["designated",{"_index":1009,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1154,"title":{},"body":{"license.html":{}}}],["dictionary",{"_index":42,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{}}}],["different",{"_index":1109,"title":{},"body":{"license.html":{}}}],["direct",{"_index":923,"title":{},"body":{"license.html":{}}}],["direction",{"_index":926,"title":{},"body":{"license.html":{}}}],["directive",{"_index":188,"title":{"directives/IntersectionObserverDirective.html":{}},"body":{"directives/IntersectionObserverDirective.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives",{"_index":190,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["disableanduseconstantdelayof",{"_index":592,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["disables",{"_index":601,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["disclaimer",{"_index":1137,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":353,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["disconnected",{"_index":425,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["disconnects",{"_index":380,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["discussing",{"_index":1004,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":73,"title":{},"body":{"injectables/CustomEventWorker.html":{},"miscellaneous/variables.html":{}}}],["dispatch(data",{"_index":81,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["dispatchcustomevent",{"_index":74,"title":{},"body":{"injectables/CustomEventWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dispatchcustomevent(data",{"_index":94,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["dispatchcustomevent(this.windowobject",{"_index":149,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["dispatched",{"_index":85,"title":{},"body":{"injectables/CustomEventWorker.html":{},"miscellaneous/variables.html":{}}}],["dispatches",{"_index":84,"title":{},"body":{"injectables/CustomEventWorker.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":1030,"title":{},"body":{"license.html":{}}}],["distinctuntilchanged",{"_index":132,"title":{},"body":{"injectables/CustomEventWorker.html":{},"miscellaneous/variables.html":{}}}],["distribute",{"_index":1032,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1093,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":897,"title":{},"body":{"license.html":{}}}],["div",{"_index":205,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["document",{"_index":904,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":717,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["don't",{"_index":1218,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":347,"title":{},"body":{"interfaces/ServerSentEvent.html":{}}}],["each",{"_index":198,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["easier",{"_index":1226,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":975,"title":{},"body":{"license.html":{}}}],["el",{"_index":225,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["elaborations",{"_index":978,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":994,"title":{},"body":{"license.html":{}}}],["element",{"_index":201,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"index.html":{}}}],["elementref",{"_index":223,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["emit",{"_index":257,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["emits",{"_index":197,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["emptystring(configs.url",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emptystring(url",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enclosed",{"_index":1214,"title":{},"body":{"license.html":{}}}],["end",{"_index":1210,"title":{},"body":{"license.html":{}}}],["entities",{"_index":914,"title":{},"body":{"license.html":{}}}],["entity",{"_index":908,"title":{},"body":{"license.html":{}}}],["entries",{"_index":239,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["entries.foreach((entry",{"_index":241,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["entry.isintersecting",{"_index":242,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["equal",{"_index":283,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"miscellaneous/typealiases.html":{}}}],["error",{"_index":89,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{}}}],["error('invalid",{"_index":693,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["error('url",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorcallback",{"_index":816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["established",{"_index":622,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["even",{"_index":1186,"title":{},"body":{"license.html":{}}}],["event",{"_index":12,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["event.api",{"_index":139,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["event.api.ts",{"_index":8,"title":{},"body":{"classes/CustomEventApi.html":{},"coverage.html":{}}}],["event.api.ts:17",{"_index":35,"title":{},"body":{"classes/CustomEventApi.html":{}}}],["event.data",{"_index":158,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["event.helper",{"_index":140,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["event.helper.ts",{"_index":737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event.injection",{"_index":130,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/ServerSentEventWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["event.interface",{"_index":440,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event.interface.ts",{"_index":52,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"interfaces/ServerSentEvent.html":{},"coverage.html":{}}}],["event.provider.ts",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["event.worker.ts",{"_index":69,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/ServerSentEventWorker.html":{},"coverage.html":{}}}],["event.worker.ts:101",{"_index":82,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["event.worker.ts:111",{"_index":435,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:123",{"_index":101,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:152",{"_index":406,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:165",{"_index":379,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:187",{"_index":386,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:207",{"_index":403,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:21",{"_index":411,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:22",{"_index":409,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:227",{"_index":394,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:23",{"_index":413,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:25",{"_index":415,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:27",{"_index":422,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:29",{"_index":125,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["event.worker.ts:30",{"_index":77,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["event.worker.ts:38",{"_index":368,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:47",{"_index":122,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["event.worker.ts:72",{"_index":95,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:87",{"_index":429,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event.worker.ts:99",{"_index":432,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["event/server",{"_index":344,"title":{},"body":{"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":231,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["eventinitdict",{"_index":32,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"miscellaneous/variables.html":{}}}],["eventinitdict);example",{"_index":857,"title":{},"body":{"index.html":{}}}],["events",{"_index":103,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["eventsource",{"_index":356,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["eventsource(this.url",{"_index":457,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["eventsource.closed",{"_index":453,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["eventsourceinit",{"_index":410,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["eventsourceinitdic",{"_index":357,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["eventsubject",{"_index":358,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["example",{"_index":14,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"index.html":{},"license.html":{}}}],["exceeded",{"_index":819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["except",{"_index":1034,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1006,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1022,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1123,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["execution",{"_index":376,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["exercise",{"_index":1159,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":941,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expected",{"_index":694,"title":{},"body":{"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["explicitly",{"_index":1114,"title":{},"body":{"license.html":{}}}],["exponential",{"_index":577,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["exponentialbackoffoptions",{"_index":612,"title":{},"body":{"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["exponentially",{"_index":587,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{}}}],["exponentiallybackoff",{"_index":678,"title":{},"body":{"injectables/WebsocketWorker.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["exponentiallybackoff(10",{"_index":833,"title":{},"body":{"index.html":{}}}],["exponentiallybackoff(maxretryattempts",{"_index":806,"title":{},"body":{"miscellaneous/functions.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{}}}],["express",{"_index":1145,"title":{},"body":{"license.html":{}}}],["extends",{"_index":23,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factoryprovider",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fail",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failed",{"_index":582,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{}}}],["failure",{"_index":1182,"title":{},"body":{"license.html":{}}}],["false",{"_index":449,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["fee",{"_index":1191,"title":{},"body":{"license.html":{}}}],["fields",{"_index":1213,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":932,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":1064,"title":{},"body":{"license.html":{}}}],["files",{"_index":952,"title":{},"body":{"license.html":{}}}],["filter",{"_index":108,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["filter((data",{"_index":861,"title":{},"body":{"index.html":{}}}],["filter(filtercallback",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtercallback",{"_index":115,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["filtercallback(data",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtered",{"_index":391,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["first",{"_index":599,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["fitness",{"_index":1150,"title":{},"body":{"license.html":{}}}],["flow",{"_index":840,"title":{},"body":{"index.html":{}}}],["following",{"_index":251,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"license.html":{}}}],["footprint",{"_index":1244,"title":{},"body":{"properties.html":{}}}],["form",{"_index":944,"title":{},"body":{"license.html":{}}}],["format",{"_index":1222,"title":{},"body":{"license.html":{}}}],["four",{"_index":832,"title":{},"body":{"index.html":{}}}],["free",{"_index":1025,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":133,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["fromevent>(this.windowobject",{"_index":155,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["function",{"_index":116,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":803,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":958,"title":{},"body":{"license.html":{}}}],["generic",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geteventsource",{"_index":428,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["geteventsubject",{"_index":431,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["getin",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getisdisconnected",{"_index":423,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["getmappedsubscriptions",{"_index":529,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["getmessages",{"_index":434,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["getmessagessubject",{"_index":658,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["getsubscriptions",{"_index":525,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["getting",{"_index":825,"title":{"index.html":{},"license.html":{}},"body":{}}],["geturlorwebsocketsubjectconfig",{"_index":665,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["getwebsocketconnection",{"_index":652,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["getwebsocketsubscription",{"_index":655,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["give",{"_index":1070,"title":{},"body":{"license.html":{}}}],["globalthis",{"_index":65,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"miscellaneous/variables.html":{}}}],["goodwill",{"_index":1179,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1236,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1016,"title":{},"body":{"license.html":{}}}],["granted",{"_index":943,"title":{},"body":{"license.html":{}}}],["granting",{"_index":910,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1018,"title":{},"body":{"license.html":{}}}],["grossly",{"_index":1165,"title":{},"body":{"license.html":{}}}],["gt",{"_index":427,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["handle",{"_index":679,"title":{},"body":{"injectables/WebsocketWorker.html":{},"index.html":{}}}],["handling",{"_index":349,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["harmless",{"_index":1206,"title":{},"body":{"license.html":{}}}],["headers",{"_index":254,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{}}}],["hello",{"_index":644,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["helpers",{"_index":442,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"dependencies.html":{},"index.html":{}}}],["helps",{"_index":838,"title":{},"body":{"index.html":{}}}],["here's",{"_index":831,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1017,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1119,"title":{},"body":{"license.html":{}}}],["hold",{"_index":1205,"title":{},"body":{"license.html":{}}}],["host",{"_index":200,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"index.html":{}}}],["http",{"_index":253,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["http.request(req).pipe(retry(configs.retrycount",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http.request(req).pipe(retry(retrycount",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://www.apache.org/licenses",{"_index":893,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1233,"title":{},"body":{"license.html":{}}}],["httpclient",{"_index":305,"title":{},"body":{"injectables/PollingWorker.html":{},"miscellaneous/variables.html":{}}}],["httpcontext",{"_index":262,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{}}}],["httpevent",{"_index":185,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{},"miscellaneous/variables.html":{}}}],["httpgetcall",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpheaders",{"_index":263,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{}}}],["httpoptions",{"_index":252,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":264,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{}}}],["httprequest",{"_index":186,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{},"miscellaneous/variables.html":{}}}],["httprequestfactory",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpresponse",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpsubmitconfig",{"_index":171,"title":{"interfaces/HttpSubmitConfig.html":{}},"body":{"interfaces/HttpSubmitConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpsubmitfactory",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["identical",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identification",{"_index":1227,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1217,"title":{},"body":{"license.html":{}}}],["ii",{"_index":930,"title":{},"body":{"license.html":{}}}],["iii",{"_index":938,"title":{},"body":{"license.html":{}}}],["immutable",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["implement",{"_index":213,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"miscellaneous/functions.html":{}}}],["implements",{"_index":194,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"index.html":{}}}],["implied",{"_index":1146,"title":{},"body":{"license.html":{}}}],["import",{"_index":61,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"license.html":{}}}],["improving",{"_index":1005,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1177,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1171,"title":{},"body":{"license.html":{}}}],["include",{"_index":370,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"license.html":{}}}],["included",{"_index":518,"title":{},"body":{"injectables/SubscriptionWorker.html":{},"license.html":{}}}],["includeheaders",{"_index":277,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{}}}],["includes",{"_index":1087,"title":{},"body":{"license.html":{}}}],["including",{"_index":948,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":991,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1014,"title":{},"body":{"license.html":{}}}],["increases",{"_index":588,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{}}}],["increasing",{"_index":818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["incurred",{"_index":1207,"title":{},"body":{"license.html":{}}}],["indefinitely",{"_index":161,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["indemnify",{"_index":1203,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1194,"title":{},"body":{"license.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":966,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":281,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"miscellaneous/typealiases.html":{}}}],["indirect",{"_index":924,"title":{},"body":{"license.html":{}}}],["individual",{"_index":940,"title":{},"body":{"license.html":{}}}],["infinity",{"_index":597,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{}}}],["information",{"_index":211,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"license.html":{}}}],["informational",{"_index":1101,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1046,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1060,"title":{},"body":{"license.html":{}}}],["initial",{"_index":598,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["initialdelay",{"_index":571,"title":{},"body":{"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["initialization",{"_index":41,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"miscellaneous/variables.html":{}}}],["initialstate",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initiate",{"_index":823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["inject",{"_index":126,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["inject(custom_event_stream_replay_subject",{"_index":147,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["inject(custom_event_stream_replay_subject)@optional",{"_index":121,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["inject(custom_event_type",{"_index":145,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["inject(custom_event_window_object",{"_index":148,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["inject(server_sent_event_timeout_backoff_configs",{"_index":446,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["inject(server_sent_event_url",{"_index":444,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["inject(server_sent_event_with_credentials",{"_index":445,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["inject(websocket_close_handler",{"_index":683,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["inject(websocket_exponential_backoff_options",{"_index":681,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["inject(websocket_open_handler",{"_index":682,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["inject(websocket_url_or_options",{"_index":680,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["injectable",{"_index":66,"title":{"injectables/CustomEventWorker.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{}},"body":{"injectables/CustomEventWorker.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"coverage.html":{}}}],["injectables",{"_index":68,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"overview.html":{}}}],["injection",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":53,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('custom_event_type",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('server_sent_event_url",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('server_sent_event_with_credentials",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('store_worker_initial_state",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('websocket_close_handler",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('websocket_open_handler",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('worker",{"_index":851,"title":{},"body":{"index.html":{}}}],["inside",{"_index":229,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["instance",{"_index":22,"title":{},"body":{"classes/CustomEventApi.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instanceoftype",{"_index":676,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["instanceoftype(this.websocketconnection",{"_index":713,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["instanceoftype(this.websocketsubscription",{"_index":709,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["instead",{"_index":813,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["institute",{"_index":1050,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":989,"title":{},"body":{"license.html":{}}}],["interface",{"_index":49,"title":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"interfaces/HttpSubmitConfig.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"interfaces/ServerSentEvent.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{}},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"interfaces/HttpSubmitConfig.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"interfaces/ServerSentEvent.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":51,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"interfaces/HttpSubmitConfig.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"interfaces/ServerSentEvent.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"license.html":{},"overview.html":{}}}],["intersection",{"_index":195,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"index.html":{}}}],["intersectionobserver",{"_index":235,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["intersectionobserverdirective",{"_index":189,"title":{"directives/IntersectionObserverDirective.html":{}},"body":{"directives/IntersectionObserverDirective.html":{},"coverage.html":{},"index.html":{}}}],["intersectionobserverentry",{"_index":240,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["intersects",{"_index":202,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"index.html":{}}}],["interval",{"_index":291,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"miscellaneous/variables.html":{}}}],["interval).pipe",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intervals",{"_index":301,"title":{},"body":{"injectables/PollingWorker.html":{},"miscellaneous/variables.html":{}}}],["irrevocable",{"_index":1026,"title":{},"body":{"license.html":{}}}],["isdisconnected",{"_index":363,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["issue",{"_index":1001,"title":{},"body":{"license.html":{}}}],["iterableiterator",{"_index":528,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["january",{"_index":891,"title":{},"body":{"license.html":{}}}],["json",{"_index":274,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{}}}],["json.parse(event.data",{"_index":462,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["json.stringify(curr",{"_index":170,"title":{},"body":{"injectables/CustomEventWorker.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(prev",{"_index":169,"title":{},"body":{"injectables/CustomEventWorker.html":{},"miscellaneous/variables.html":{}}}],["k",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keep",{"_index":162,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["key",{"_index":500,"title":{},"body":{"injectables/SubscriptionWorker.html":{},"miscellaneous/variables.html":{}}}],["keyof",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keywords",{"_index":1247,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1144,"title":{},"body":{"license.html":{}}}],["language",{"_index":1235,"title":{},"body":{"license.html":{}}}],["law",{"_index":1140,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1056,"title":{},"body":{"license.html":{}}}],["legal",{"_index":911,"title":{},"body":{"license.html":{}}}],["liability",{"_index":1160,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1168,"title":{},"body":{"license.html":{}}}],["library",{"_index":1245,"title":{},"body":{"properties.html":{}}}],["licensable",{"_index":1044,"title":{},"body":{"license.html":{}}}],["license",{"_index":887,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":1230,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1061,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":905,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1147,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1237,"title":{},"body":{"license.html":{}}}],["limited",{"_index":949,"title":{},"body":{"license.html":{}}}],["link",{"_index":985,"title":{},"body":{"license.html":{}}}],["listen",{"_index":75,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"index.html":{}}}],["listen$(filtercallback",{"_index":97,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["listen$(operators",{"_index":382,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["listen(...operators",{"_index":625,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["listeners",{"_index":86,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["listening",{"_index":629,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["listens",{"_index":387,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["lists",{"_index":999,"title":{},"body":{"license.html":{}}}],["literal",{"_index":295,"title":{},"body":{"interfaces/PollingHttpOptions.html":{}}}],["litigation",{"_index":1051,"title":{},"body":{"license.html":{}}}],["localized",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["locally",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logic",{"_index":814,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["logs",{"_index":90,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["loss",{"_index":1178,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1185,"title":{},"body":{"license.html":{}}}],["m",{"_index":346,"title":{},"body":{"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["made",{"_index":964,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":998,"title":{},"body":{"license.html":{}}}],["make",{"_index":1037,"title":{},"body":{"license.html":{}}}],["making",{"_index":946,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1183,"title":{},"body":{"license.html":{}}}],["manage",{"_index":286,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/SubscriptionWorker.html":{},"index.html":{}}}],["managed",{"_index":516,"title":{},"body":{"injectables/SubscriptionWorker.html":{},"license.html":{}}}],["management",{"_index":927,"title":{},"body":{"license.html":{}}}],["manager",{"_index":321,"title":{},"body":{"injectables/PollingWorker.html":{},"miscellaneous/variables.html":{}}}],["manages",{"_index":322,"title":{},"body":{"injectables/PollingWorker.html":{},"injectables/SubscriptionWorker.html":{}}}],["map",{"_index":134,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["map((event",{"_index":157,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["map(key",{"_index":496,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["map(mapcallback",{"_index":473,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["mapcallback",{"_index":393,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["mapped",{"_index":401,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["mappedsub",{"_index":562,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["mappedsubs",{"_index":479,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["mappedsubscriptions",{"_index":486,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["mapping",{"_index":635,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["maps",{"_index":396,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{}}}],["marked",{"_index":1008,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1129,"title":{},"body":{"license.html":{}}}],["match",{"_index":113,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["matching",{"_index":48,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxdelay",{"_index":572,"title":{},"body":{"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["maximum",{"_index":591,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["maxretries",{"_index":573,"title":{},"body":{"interfaces/TimeoutBackoffConfigs.html":{},"miscellaneous/functions.html":{}}}],["maxretryattempts",{"_index":593,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["mean",{"_index":900,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["means",{"_index":921,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":954,"title":{},"body":{"license.html":{}}}],["media",{"_index":960,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1067,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1069,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1149,"title":{},"body":{"license.html":{}}}],["merely",{"_index":984,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":399,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["messageevent",{"_index":459,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["messages",{"_index":355,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"index.html":{}}}],["messagessubject",{"_index":605,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["metadata",{"_index":216,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["method",{"_index":207,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"injectables/PollingWorker.html":{},"index.html":{}}}],["methods",{"_index":72,"title":{},"body":{"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":324,"title":{},"body":{"injectables/PollingWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["minutes",{"_index":812,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["miscellaneous",{"_index":802,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modifications",{"_index":947,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1074,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1102,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1107,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1238,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monotypeoperatorfunction",{"_index":385,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["more",{"_index":935,"title":{},"body":{"license.html":{}}}],["name",{"_index":37,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["names",{"_index":1128,"title":{},"body":{"license.html":{}}}],["native",{"_index":228,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["necessarily",{"_index":1045,"title":{},"body":{"license.html":{}}}],["negligence",{"_index":1163,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1166,"title":{},"body":{"license.html":{}}}],["network",{"_index":579,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{}}}],["new",{"_index":16,"title":{},"body":{"classes/CustomEventApi.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":699,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["ngondestroy",{"_index":219,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["ngoninit",{"_index":220,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["ngzone",{"_index":367,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"miscellaneous/variables.html":{}}}],["non",{"_index":1021,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1098,"title":{},"body":{"license.html":{}}}],["notemptyarray",{"_index":536,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["notemptyarray(subs",{"_index":543,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["nothing",{"_index":1118,"title":{},"body":{"license.html":{}}}],["notice",{"_index":967,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1077,"title":{},"body":{"license.html":{}}}],["notify",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notinstanceoftype",{"_index":441,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["notinstanceoftype(this.eventsource",{"_index":451,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["notsetvalue",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notwithstanding",{"_index":1116,"title":{},"body":{"license.html":{}}}],["null",{"_index":613,"title":{},"body":{"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":60,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"interfaces/HttpSubmitConfig.html":{},"injectables/PollingWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":80,"title":{},"body":{"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["obligations",{"_index":1195,"title":{},"body":{"license.html":{}}}],["observable",{"_index":91,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["observable.pipe",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable.subscribe",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observables",{"_index":807,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["observe",{"_index":269,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{}}}],["observer",{"_index":196,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"injectables/WebsocketWorker.html":{},"index.html":{}}}],["observer.directive.ts",{"_index":193,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"coverage.html":{}}}],["observer.directive.ts:33",{"_index":232,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["observer.directive.ts:35",{"_index":224,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["observer.directive.ts:42",{"_index":234,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["observer.directive.ts:55",{"_index":233,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["observer/intersection",{"_index":192,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"coverage.html":{}}}],["obtain",{"_index":1232,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1038,"title":{},"body":{"license.html":{}}}],["offunctiontype",{"_index":141,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["offunctiontype(configs?.comparercallback",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offunctiontype>(filtercallback",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ofobjecttype",{"_index":537,"title":{},"body":{"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["ofobjecttype(configs",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ofobjecttype(sub",{"_index":559,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["ofobjecttype(this.urlorwebsocketsubjectconfig",{"_index":691,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["ofstringtype",{"_index":677,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["ofstringtype(this.urlorwebsocketsubjectconfig",{"_index":689,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["ofsubscriptionliketype",{"_index":480,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["oftruetype(configs.onlyhttpresponses",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oftruetype(onlyhttpresponses",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ofundefinedtype(configs.onlyhttpresponses",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ofundefinedtype(onlyhttpresponses",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["omit",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ondestroy",{"_index":215,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["one",{"_index":1091,"title":{},"body":{"license.html":{}}}],["oninit",{"_index":214,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["onintersection",{"_index":206,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["onlyhttpresponses",{"_index":174,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":618,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["opened",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openeventobserver",{"_index":614,"title":{},"body":{"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["openobserver",{"_index":697,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["openobserver?.next?.(event",{"_index":703,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["operation",{"_index":250,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"miscellaneous/variables.html":{}}}],["operations",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operator",{"_index":164,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["operatorfunction",{"_index":383,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["operators",{"_index":389,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["optional",{"_index":38,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":175,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["origin",{"_index":1135,"title":{},"body":{"license.html":{}}}],["original",{"_index":981,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":450,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"license.html":{}}}],["out",{"_index":1176,"title":{},"body":{"license.html":{}}}],["output",{"_index":236,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"index.html":{}}}],["outputs",{"_index":221,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["outstanding",{"_index":936,"title":{},"body":{"license.html":{}}}],["over",{"_index":627,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["overview",{"_index":1239,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":907,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":931,"title":{},"body":{"license.html":{}}}],["package",{"_index":781,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1225,"title":{},"body":{"license.html":{}}}],["param",{"_index":44,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["parameters",{"_index":36,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["params",{"_index":271,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{}}}],["part",{"_index":1085,"title":{},"body":{"license.html":{}}}],["partial",{"_index":184,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{}}}],["particular",{"_index":1151,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["party",{"_index":1097,"title":{},"body":{"license.html":{}}}],["pass",{"_index":107,"title":{},"body":{"injectables/CustomEventWorker.html":{},"miscellaneous/variables.html":{}}}],["passed",{"_index":209,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["patch",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patchobservable",{"_index":1357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patchobservable.pipe",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patchoptions",{"_index":176,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{}}}],["patchsubject",{"_index":1352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patchsubject.asobservable",{"_index":1358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patchsubject.next(data",{"_index":1361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patchurl",{"_index":177,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{}}}],["patent",{"_index":1033,"title":{},"body":{"license.html":{}}}],["path",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pattern",{"_index":843,"title":{},"body":{"index.html":{}}}],["percent",{"_index":933,"title":{},"body":{"license.html":{}}}],["perform",{"_index":298,"title":{},"body":{"injectables/PollingWorker.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":1126,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":942,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1019,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1084,"title":{},"body":{"license.html":{}}}],["pick",{"_index":631,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["pickandmapmessage",{"_index":360,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["pickandmapmessage(filtercallback",{"_index":392,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["picked",{"_index":405,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["picking",{"_index":634,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["pickmessage",{"_index":361,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["pickmessage(filtercallback",{"_index":402,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["picks",{"_index":395,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["pipe",{"_index":160,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["pipe(filter(configs.filtercallback",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["places",{"_index":1092,"title":{},"body":{"license.html":{}}}],["poll",{"_index":303,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["poll$(url",{"_index":331,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["pollfactory",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["polling",{"_index":249,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["polling.helper",{"_index":338,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["polling.type",{"_index":335,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["polling_provider_factory(workerinjectiontoken",{"_index":862,"title":{},"body":{"index.html":{}}}],["polling_window_object",{"_index":863,"title":{},"body":{"index.html":{}}}],["polling_worker_provider_factory",{"_index":747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pollingcomparer",{"_index":259,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"miscellaneous/typealiases.html":{}}}],["pollingconfigs",{"_index":246,"title":{"interfaces/PollingConfigs.html":{}},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"coverage.html":{}}}],["pollingfilter",{"_index":260,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pollinghttpoptions",{"_index":261,"title":{"interfaces/PollingHttpOptions.html":{}},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"coverage.html":{}}}],["pollingmanager",{"_index":285,"title":{"interfaces/PollingManager.html":{}},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pollingobservable",{"_index":287,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"miscellaneous/variables.html":{}}}],["pollingsubscription",{"_index":288,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"miscellaneous/variables.html":{}}}],["pollingworker",{"_index":296,"title":{"injectables/PollingWorker.html":{}},"body":{"injectables/PollingWorker.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pollingworker(http",{"_index":307,"title":{},"body":{"injectables/PollingWorker.html":{},"miscellaneous/variables.html":{}}}],["pollingworker.bootstrapsession('https://api.example.com/data",{"_index":314,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["pollingworker.poll$('https://api.example.com/data",{"_index":333,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["pollingworker.startpolling",{"_index":867,"title":{},"body":{"index.html":{}}}],["pollingworker.startpolling(url",{"_index":865,"title":{},"body":{"index.html":{}}}],["pollingworker.startpolling(url);example",{"_index":864,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1188,"title":{},"body":{"license.html":{}}}],["post",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postobservable",{"_index":1353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postobservable.pipe",{"_index":1363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postoptions",{"_index":178,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{}}}],["postsubject",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postsubject.asobservable",{"_index":1354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postsubject.next(data",{"_index":1359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["posturl",{"_index":179,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{}}}],["power",{"_index":922,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":945,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":1028,"title":{},"body":{"license.html":{}}}],["prev",{"_index":99,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prev.id",{"_index":318,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["prev.key",{"_index":111,"title":{},"body":{"injectables/CustomEventWorker.html":{},"index.html":{}}}],["previous",{"_index":118,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"miscellaneous/typealiases.html":{}}}],["printed",{"_index":1224,"title":{},"body":{"license.html":{}}}],["private",{"_index":146,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["product",{"_index":1130,"title":{},"body":{"license.html":{}}}],["projects",{"_index":1246,"title":{},"body":{"properties.html":{}}}],["projects/.../custom",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../exponentially",{"_index":804,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../http",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../polling.helper.ts",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../polling.provider.ts",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../polling.type.ts",{"_index":1254,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../server",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../store.helper.ts",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../store.injection",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../store.provider.ts",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../subscription.provider.ts",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../timeout",{"_index":805,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../websocket.injection",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../websocket.provider.ts",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../websocket.type.ts",{"_index":1255,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":1076,"title":{},"body":{"license.html":{}}}],["properties",{"_index":25,"title":{"properties.html":{}},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"properties.html":{}}}],["property",{"_index":325,"title":{},"body":{"injectables/PollingWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{}}}],["provide",{"_index":55,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":20,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"injectables/PollingWorker.html":{},"injectables/SubscriptionWorker.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider_factory",{"_index":849,"title":{},"body":{"index.html":{}}}],["providers",{"_index":852,"title":{},"body":{"index.html":{}}}],["provides",{"_index":351,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":26,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"injectables/PollingWorker.html":{}}}],["publicly",{"_index":1029,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1003,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":919,"title":{},"body":{"license.html":{}}}],["put",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putobservable",{"_index":1355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putobservable.pipe",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putoptions",{"_index":180,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{}}}],["putsubject",{"_index":1351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putsubject.asobservable",{"_index":1356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putsubject.next(data",{"_index":1360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["puturl",{"_index":181,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{}}}],["r",{"_index":384,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["race",{"_index":135,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["re",{"_index":640,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["readable",{"_index":1089,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":27,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/ServerSentEventWorker.html":{}}}],["reason",{"_index":1209,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1132,"title":{},"body":{"license.html":{}}}],["received",{"_index":1012,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1071,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":1223,"title":{},"body":{"license.html":{}}}],["reconnect",{"_index":354,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["reconnects",{"_index":407,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["record",{"_index":267,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{}}}],["redistributing",{"_index":1156,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1065,"title":{},"body":{"license.html":{}}}],["redux",{"_index":842,"title":{},"body":{"index.html":{},"properties.html":{}}}],["regarding",{"_index":1124,"title":{},"body":{"license.html":{}}}],["registers",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registertocustomevent",{"_index":738,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["regular",{"_index":300,"title":{},"body":{"injectables/PollingWorker.html":{},"miscellaneous/variables.html":{}}}],["remain",{"_index":982,"title":{},"body":{"license.html":{}}}],["repeat",{"_index":136,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["replaced",{"_index":1216,"title":{},"body":{"license.html":{}}}],["replaysubject",{"_index":76,"title":{},"body":{"injectables/CustomEventWorker.html":{},"miscellaneous/variables.html":{}}}],["replaysubject(configs.replysubjectbuffersize",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replysubjectbuffersize",{"_index":57,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["reportprogress",{"_index":272,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{}}}],["represent",{"_index":979,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":997,"title":{},"body":{"license.html":{}}}],["representing",{"_index":10,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"injectables/PollingWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["reproduce",{"_index":1027,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1136,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":896,"title":{},"body":{"license.html":{}}}],["req",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":255,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":299,"title":{},"body":{"injectables/PollingWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":1131,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":443,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"miscellaneous/functions.html":{}}}],["response",{"_index":258,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["responses",{"_index":256,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"miscellaneous/typealiases.html":{}}}],["responses.the",{"_index":326,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["responsetype",{"_index":273,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{}}}],["responsibility",{"_index":1201,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1153,"title":{},"body":{"license.html":{}}}],["restart",{"_index":293,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"miscellaneous/variables.html":{}}}],["result",{"_index":1175,"title":{},"body":{"license.html":{}}}],["resulting",{"_index":953,"title":{},"body":{"license.html":{}}}],["results",{"_index":47,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":290,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1081,"title":{},"body":{"license.html":{}}}],["retries",{"_index":811,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["retrieved",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retrieves",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retry",{"_index":585,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["retrycallback",{"_index":822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["retrycount",{"_index":182,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{},"miscellaneous/variables.html":{}}}],["retrying",{"_index":581,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{}}}],["return",{"_index":154,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":821,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":92,"title":{},"body":{"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["revisions",{"_index":976,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1197,"title":{},"body":{"license.html":{}}}],["risks",{"_index":1158,"title":{},"body":{"license.html":{}}}],["royalty",{"_index":1024,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":138,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"dependencies.html":{}}}],["rxjs/internal/observable/dom/websocketsubject",{"_index":668,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["rxjs/websocket",{"_index":675,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["same",{"_index":294,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"license.html":{}}}],["searchkeypath",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["section",{"_index":1036,"title":{},"body":{"license.html":{}}}],["sections",{"_index":901,"title":{},"body":{"license.html":{}}}],["see",{"_index":1234,"title":{},"body":{"license.html":{}}}],["select",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectin",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":217,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["sell",{"_index":1039,"title":{},"body":{"license.html":{}}}],["send",{"_index":608,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["send(data",{"_index":641,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["send/read",{"_index":844,"title":{},"body":{"index.html":{}}}],["sends",{"_index":646,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["sent",{"_index":323,"title":{},"body":{"injectables/PollingWorker.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"coverage.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["separable",{"_index":983,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1121,"title":{},"body":{"license.html":{}}}],["server",{"_index":345,"title":{},"body":{"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["server_event_sent_provider_factory",{"_index":755,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server_sent_event_provider_factory(workerinjectiontoken",{"_index":869,"title":{},"body":{"index.html":{}}}],["server_sent_event_timeout_backoff_configs",{"_index":437,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server_sent_event_url",{"_index":438,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server_sent_event_window_object",{"_index":870,"title":{},"body":{"index.html":{}}}],["server_sent_event_with_credentials",{"_index":439,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serversentevent",{"_index":342,"title":{"interfaces/ServerSentEvent.html":{}},"body":{"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"coverage.html":{}}}],["serversenteventworker",{"_index":348,"title":{"injectables/ServerSentEventWorker.html":{}},"body":{"injectables/ServerSentEventWorker.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serversenteventworker.connect();example",{"_index":871,"title":{},"body":{"index.html":{}}}],["serversenteventworker.listen",{"_index":874,"title":{},"body":{"index.html":{}}}],["serversenteventworker.listen$((data",{"_index":873,"title":{},"body":{"index.html":{}}}],["serversenteventworker.listen$().pipe",{"_index":875,"title":{},"body":{"index.html":{}}}],["serversenteventworker.listen$();example",{"_index":872,"title":{},"body":{"index.html":{}}}],["service",{"_index":308,"title":{},"body":{"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"license.html":{}}}],["session",{"_index":312,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["set",{"_index":513,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["sets",{"_index":535,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["setsink(sub",{"_index":532,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["shall",{"_index":899,"title":{},"body":{"license.html":{}}}],["shares",{"_index":937,"title":{},"body":{"license.html":{}}}],["sink",{"_index":487,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["sink(sub",{"_index":540,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["small",{"_index":1243,"title":{},"body":{"properties.html":{}}}],["software",{"_index":950,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1200,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1152,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"license.html":{}}}],["special",{"_index":1170,"title":{},"body":{"license.html":{}}}],["specific",{"_index":313,"title":{},"body":{"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["specified",{"_index":596,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{}}}],["sse",{"_index":350,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["sse.connect",{"_index":378,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["sse.disconnect",{"_index":381,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["sse.eventsource",{"_index":430,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["sse.eventsubject",{"_index":433,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["sse.isdisconnected",{"_index":426,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["sse.listen",{"_index":388,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["sse.messages",{"_index":436,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["sse.pickandmapmessage((data",{"_index":397,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["sse.pickmessage((data",{"_index":404,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["sse.reconnect",{"_index":408,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["standalone",{"_index":212,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["started",{"_index":826,"title":{"index.html":{},"license.html":{}},"body":{}}],["startpolling",{"_index":337,"title":{},"body":{"injectables/PollingWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["startpolling(httpgetcall",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state",{"_index":1115,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["stated",{"_index":1035,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1108,"title":{},"body":{"license.html":{}}}],["statements",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["stating",{"_index":1078,"title":{},"body":{"license.html":{}}}],["stop",{"_index":289,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"miscellaneous/variables.html":{}}}],["stoppage",{"_index":1180,"title":{},"body":{"license.html":{}}}],["store",{"_index":1248,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["store_provider_factory",{"_index":765,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["store_provider_factory(workerinjectiontoken",{"_index":876,"title":{},"body":{"index.html":{}}}],["store_window_object",{"_index":877,"title":{},"body":{"index.html":{}}}],["store_worker_initial_state",{"_index":763,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["storeinstance",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeinstance.get(key",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeinstance.getin(searchkeypath",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeinstance.select$(key",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeinstance.selectin",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storeworker",{"_index":767,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["storeworker(initialstate",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":374,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/variables.html":{}}}],["stream",{"_index":79,"title":{},"body":{"injectables/CustomEventWorker.html":{},"miscellaneous/variables.html":{}}}],["streams",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":30,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["string(error",{"_index":566,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["stringified",{"_index":329,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["sub",{"_index":497,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["sub.unsubscribe",{"_index":560,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["sub2",{"_index":492,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subject",{"_index":412,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["subject.asobservable",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subject.next(data",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sublicense",{"_index":1031,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1111,"title":{},"body":{"license.html":{}}}],["submit",{"_index":992,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["submit.interface.ts",{"_index":173,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{},"coverage.html":{}}}],["submit.ts",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["submitted",{"_index":990,"title":{},"body":{"license.html":{}}}],["subs",{"_index":481,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subs.filter((sub",{"_index":545,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subscribe((data",{"_index":707,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["subscribed",{"_index":712,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["subscription",{"_index":265,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["subscription.closed",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subscription.unsubscribe",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subscription_provider_factory(workerinjectiontoken",{"_index":878,"title":{},"body":{"index.html":{}}}],["subscription_window_object",{"_index":879,"title":{},"body":{"index.html":{}}}],["subscription_worker_provider",{"_index":771,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriptionlike",{"_index":489,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subscriptionlike);example",{"_index":882,"title":{},"body":{"index.html":{}}}],["subscriptions",{"_index":476,"title":{},"body":{"injectables/SubscriptionWorker.html":{},"index.html":{}}}],["subscriptionworker",{"_index":474,"title":{"injectables/SubscriptionWorker.html":{}},"body":{"injectables/SubscriptionWorker.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["subscriptionworker.add(sub1",{"_index":491,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subscriptionworker.add(subscriptionlike);example",{"_index":880,"title":{},"body":{"index.html":{}}}],["subscriptionworker.map('key",{"_index":499,"title":{},"body":{"injectables/SubscriptionWorker.html":{},"index.html":{}}}],["subscriptionworker.mappedsubscriptions",{"_index":531,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subscriptionworker.ofsubscriptionliketype(sub",{"_index":511,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subscriptionworker.sink",{"_index":534,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subscriptionworker.subscriptions",{"_index":527,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subscriptionworker.unmanagedsubscription(sub",{"_index":519,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subscriptionworker.unmappedsubscription(sub",{"_index":521,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subscriptionworker.unsubscribe",{"_index":502,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subscriptionworker.unsubscribe();example",{"_index":881,"title":{},"body":{"index.html":{}}}],["subscriptionworker.unsubscribeallmapped",{"_index":505,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subscriptionworker.unsubscribeallmapped();websocketworker",{"_index":884,"title":{},"body":{"index.html":{}}}],["subscriptionworker.unsubscribemapped('key",{"_index":508,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subscriptionworker.unsubscribemapped('key');example",{"_index":883,"title":{},"body":{"index.html":{}}}],["subscriptionworkerunsubscribe(sub",{"_index":523,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["subsequently",{"_index":1013,"title":{},"body":{"license.html":{}}}],["such",{"_index":928,"title":{},"body":{"license.html":{}}}],["super(type",{"_index":45,"title":{},"body":{"classes/CustomEventApi.html":{}}}],["supersede",{"_index":1120,"title":{},"body":{"license.html":{}}}],["support",{"_index":1193,"title":{},"body":{"license.html":{}}}],["switchmap",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switchmap((data",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["syntax",{"_index":1221,"title":{},"body":{"license.html":{}}}],["systems",{"_index":1000,"title":{},"body":{"license.html":{}}}],["t",{"_index":31,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["t,curr",{"_index":100,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["table",{"_index":780,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":137,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["take(1",{"_index":165,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["takes",{"_index":278,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["tap(configs?.callback",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tasks",{"_index":839,"title":{},"body":{"index.html":{}}}],["template",{"_index":144,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"index.html":{}}}],["terminate",{"_index":1062,"title":{},"body":{"license.html":{}}}],["terms",{"_index":894,"title":{},"body":{"license.html":{}}}],["text",{"_index":1088,"title":{},"body":{"license.html":{}}}],["theory",{"_index":1161,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":986,"title":{},"body":{"license.html":{}}}],["third",{"_index":1096,"title":{},"body":{"license.html":{}}}],["this.closeeventobserver?.(event",{"_index":700,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["this.connect",{"_index":448,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["this.customeventstream",{"_index":159,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["this.customeventstream.asobservable",{"_index":124,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["this.customeventstream.next(data",{"_index":151,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["this.data",{"_index":46,"title":{},"body":{"classes/CustomEventApi.html":{}}}],["this.disconnect",{"_index":417,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["this.dispatchcustomevent(data",{"_index":152,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["this.eventsource",{"_index":454,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.eventsource.close",{"_index":467,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.eventsource.onerror",{"_index":463,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.eventsource.onmessage",{"_index":458,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.eventsource.onopen",{"_index":465,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.eventsource.readystate",{"_index":452,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.eventsourceinitdic",{"_index":447,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.eventsubject",{"_index":455,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.eventsubject.asobservable",{"_index":414,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.eventsubject.complete",{"_index":418,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.eventsubject.next",{"_index":461,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.exponentialbackoffoptions",{"_index":705,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["this.http.get(url",{"_index":340,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["this.intersection.emit(entry",{"_index":243,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["this.mappedsubs",{"_index":539,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.mappedsubs.clear",{"_index":555,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.mappedsubs.delete(key",{"_index":553,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.mappedsubs.foreach((sub",{"_index":554,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.mappedsubs.get(key",{"_index":552,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.mappedsubs.set(key",{"_index":550,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.messages",{"_index":456,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["this.messages$.pipe(...(operators",{"_index":471,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["this.messages$.pipe(filter(filtercallback",{"_index":472,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["this.messagessubject",{"_index":686,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["this.messagessubject.asobservable",{"_index":647,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["this.messagessubject.next(data",{"_index":708,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["this.ngzone.run",{"_index":460,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.observer",{"_index":238,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["this.observer.disconnect",{"_index":245,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["this.observer.observe(this.el.nativeelement",{"_index":244,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["this.ofsubscriptionliketype(sub",{"_index":557,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.openeventobserver?.(event",{"_index":702,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["this.reconnect",{"_index":416,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.resume",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.stop",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.subs",{"_index":544,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.subs.add(sub",{"_index":542,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.subs.clear",{"_index":548,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.subs.foreach((sub",{"_index":546,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.subs.has(sub",{"_index":558,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.subs.values",{"_index":538,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.timeoutbackoff",{"_index":464,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.timeoutbackoff(true",{"_index":466,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.timeoutbackoffconfigs.initialdelay",{"_index":420,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.timeoutbackoffconfigs.maxdelay",{"_index":421,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.timeoutbackoffconfigs.maxretries",{"_index":419,"title":{},"body":{"injectables/ServerSentEventWorker.html":{}}}],["this.type",{"_index":150,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["this.type).pipe",{"_index":156,"title":{},"body":{"injectables/CustomEventWorker.html":{}}}],["this.unmanagedsubscription(sub",{"_index":541,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.unmappedsubscription(sub",{"_index":549,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.unsubscribe(sub",{"_index":547,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["this.urlorwebsocketsubjectconfig",{"_index":690,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["this.urlorwebsocketsubjectconfig.closeobserver",{"_index":696,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["this.urlorwebsocketsubjectconfig.openobserver",{"_index":698,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["this.websocketconnection",{"_index":684,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["this.websocketconnection.closed",{"_index":687,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["this.websocketconnection.next(data",{"_index":704,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["this.websocketconnection.unsubscribe",{"_index":714,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["this.websocketsubscription",{"_index":685,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["this.websocketsubscription.unsubscribe",{"_index":710,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["those",{"_index":1042,"title":{},"body":{"license.html":{}}}],["three",{"_index":835,"title":{},"body":{"index.html":{}}}],["through",{"_index":902,"title":{},"body":{"license.html":{}}}],["throw",{"_index":692,"title":{},"body":{"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["throws",{"_index":688,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["time",{"_index":199,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["timeout",{"_index":372,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["timeoutbackoff",{"_index":359,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["timeoutbackoff(10",{"_index":836,"title":{},"body":{"index.html":{}}}],["timeoutbackoff(retrycallback",{"_index":815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timeoutbackoffconfigs",{"_index":366,"title":{"interfaces/TimeoutBackoffConfigs.html":{}},"body":{"injectables/ServerSentEventWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timer(0",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":1148,"title":{},"body":{"license.html":{}}}],["to/from",{"_index":845,"title":{},"body":{"index.html":{}}}],["token",{"_index":131,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["token.ts",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tools",{"_index":827,"title":{},"body":{"index.html":{}}}],["tools/src/lib/directives/intersection",{"_index":191,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"coverage.html":{}}}],["tools/src/lib/helpers/exponentially",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tools/src/lib/helpers/http/http",{"_index":172,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tools/src/lib/helpers/timeout",{"_index":567,"title":{},"body":{"interfaces/TimeoutBackoffConfigs.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tools/src/lib/workers/event/custom",{"_index":7,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tools/src/lib/workers/polling/polling.helper.ts",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tools/src/lib/workers/polling/polling.provider.ts",{"_index":746,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tools/src/lib/workers/polling/polling.type.ts",{"_index":247,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tools/src/lib/workers/polling/polling.worker.ts",{"_index":297,"title":{},"body":{"injectables/PollingWorker.html":{},"coverage.html":{}}}],["tools/src/lib/workers/polling/polling.worker.ts:12",{"_index":306,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["tools/src/lib/workers/polling/polling.worker.ts:21",{"_index":334,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["tools/src/lib/workers/polling/polling.worker.ts:54",{"_index":332,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["tools/src/lib/workers/polling/polling.worker.ts:97",{"_index":311,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["tools/src/lib/workers/server",{"_index":343,"title":{},"body":{"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tools/src/lib/workers/store/store.helper.ts",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tools/src/lib/workers/store/store.injection",{"_index":762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tools/src/lib/workers/store/store.provider.ts",{"_index":764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tools/src/lib/workers/store/store.worker.ts",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["tools/src/lib/workers/subscription/subscription.provider.ts",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts",{"_index":475,"title":{},"body":{"injectables/SubscriptionWorker.html":{},"coverage.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts:101",{"_index":498,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts:116",{"_index":507,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts:12",{"_index":514,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts:13",{"_index":509,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts:132",{"_index":504,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts:149",{"_index":515,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts:162",{"_index":510,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts:179",{"_index":520,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts:199",{"_index":522,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts:26",{"_index":526,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts:38",{"_index":530,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts:50",{"_index":533,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts:65",{"_index":490,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tools/src/lib/workers/subscription/subscription.worker.ts:84",{"_index":501,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.injection",{"_index":774,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tools/src/lib/workers/websocket/websocket.provider.ts",{"_index":775,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tools/src/lib/workers/websocket/websocket.type.ts",{"_index":575,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts",{"_index":604,"title":{},"body":{"injectables/WebsocketWorker.html":{},"coverage.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:102",{"_index":659,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:114",{"_index":661,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:124",{"_index":664,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:139",{"_index":666,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:182",{"_index":642,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:198",{"_index":626,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:221",{"_index":636,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:245",{"_index":630,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:261",{"_index":620,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:295",{"_index":623,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:324",{"_index":638,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:36",{"_index":650,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:37",{"_index":651,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:38",{"_index":648,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:39",{"_index":616,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:75",{"_index":653,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tools/src/lib/workers/websocket/websocket.worker.ts:88",{"_index":656,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["tort",{"_index":1162,"title":{},"body":{"license.html":{}}}],["tracking",{"_index":1002,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1127,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1082,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1125,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1040,"title":{},"body":{"license.html":{}}}],["transfercache",{"_index":276,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{}}}],["transformation",{"_index":955,"title":{},"body":{"license.html":{}}}],["translation",{"_index":956,"title":{},"body":{"license.html":{}}}],["true",{"_index":167,"title":{},"body":{"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":563,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["tslib",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":279,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":21,"title":{},"body":{"classes/CustomEventApi.html":{},"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"interfaces/HttpSubmitConfig.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"interfaces/ServerSentEvent.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/TimeoutBackoffConfigs.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type/value",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1252,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeof",{"_index":64,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":961,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":365,"title":{},"body":{"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":917,"title":{},"body":{"license.html":{}}}],["union",{"_index":912,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":556,"title":{},"body":{"injectables/SubscriptionWorker.html":{},"miscellaneous/variables.html":{}}}],["unless",{"_index":1113,"title":{},"body":{"license.html":{}}}],["unmanagedsubscription",{"_index":482,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["unmappedsubscription",{"_index":483,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["unsubscribe",{"_index":478,"title":{},"body":{"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["unsubscribeallmapped",{"_index":484,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["unsubscribed",{"_index":524,"title":{},"body":{"injectables/SubscriptionWorker.html":{},"injectables/WebsocketWorker.html":{}}}],["unsubscribemapped",{"_index":485,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["unsubscribemapped(key",{"_index":506,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["unsubscribes",{"_index":503,"title":{},"body":{"injectables/SubscriptionWorker.html":{}}}],["up",{"_index":590,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{}}}],["url",{"_index":183,"title":{},"body":{"interfaces/HttpSubmitConfig.html":{},"injectables/PollingWorker.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/WebsocketWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["urlorwebsocketsubjectconfig",{"_index":609,"title":{},"body":{"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["usage",{"_index":828,"title":{},"body":{"index.html":{}}}],["use",{"_index":617,"title":{},"body":{"injectables/WebsocketWorker.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":54,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/PollingWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uses",{"_index":327,"title":{},"body":{"injectables/PollingWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["usevalue",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":841,"title":{},"body":{"index.html":{},"license.html":{}}}],["value",{"_index":106,"title":{},"body":{"injectables/CustomEventWorker.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value');example",{"_index":859,"title":{},"body":{"index.html":{}}}],["values",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1256,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":995,"title":{},"body":{"license.html":{}}}],["version",{"_index":889,"title":{},"body":{"license.html":{},"properties.html":{}}}],["versions",{"_index":330,"title":{},"body":{"injectables/PollingWorker.html":{}}}],["view",{"_index":230,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["viewport",{"_index":203,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"index.html":{}}}],["vlah.io",{"_index":1251,"title":{},"body":{"properties.html":{}}}],["vlhintersectionobserver",{"_index":218,"title":{},"body":{"directives/IntersectionObserverDirective.html":{},"index.html":{}}}],["void",{"_index":93,"title":{},"body":{"injectables/CustomEventWorker.html":{},"directives/IntersectionObserverDirective.html":{},"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/ServerSentEventWorker.html":{},"injectables/SubscriptionWorker.html":{},"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":1143,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1138,"title":{},"body":{"license.html":{}}}],["websocket",{"_index":578,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["websocket(this.urlorwebsocketsubjectconfig",{"_index":706,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocket.injection",{"_index":674,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocket.type",{"_index":669,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocket_close_handler",{"_index":670,"title":{},"body":{"injectables/WebsocketWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["websocket_exponential_backoff_options",{"_index":671,"title":{},"body":{"injectables/WebsocketWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["websocket_open_handler",{"_index":672,"title":{},"body":{"injectables/WebsocketWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["websocket_provider_factory",{"_index":776,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["websocket_provider_factory(workerinjectiontoken",{"_index":885,"title":{},"body":{"index.html":{}}}],["websocket_url_or_options",{"_index":673,"title":{},"body":{"injectables/WebsocketWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["websocket_window_object",{"_index":886,"title":{},"body":{"index.html":{}}}],["websocketconnection",{"_index":606,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocketeventobserver",{"_index":594,"title":{},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["websocketexponentialbackoffoptions",{"_index":574,"title":{"interfaces/WebsocketExponentialBackoffOptions.html":{}},"body":{"interfaces/WebsocketExponentialBackoffOptions.html":{},"injectables/WebsocketWorker.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["websockets",{"_index":1249,"title":{},"body":{"properties.html":{}}}],["websocketsubject",{"_index":649,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocketsubjectconfig",{"_index":611,"title":{},"body":{"injectables/WebsocketWorker.html":{},"miscellaneous/variables.html":{}}}],["websocketsubscription",{"_index":607,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocketworker",{"_index":603,"title":{"injectables/WebsocketWorker.html":{}},"body":{"injectables/WebsocketWorker.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["websocketworker.connect",{"_index":621,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocketworker.disconnect",{"_index":624,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocketworker.isdisconnected",{"_index":663,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocketworker.listen",{"_index":628,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocketworker.messagessubject",{"_index":660,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocketworker.pickandmapmessage((data",{"_index":632,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocketworker.pickmessage((data",{"_index":637,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocketworker.reconnect",{"_index":639,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocketworker.send",{"_index":643,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocketworker.urlorwebsocketsubjectconfig",{"_index":667,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocketworker.websocketconnection",{"_index":654,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["websocketworker.websocketsubscription",{"_index":657,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["whenever",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wherever",{"_index":1095,"title":{},"body":{"license.html":{}}}],["whether",{"_index":282,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/ServerSentEventWorker.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["whole",{"_index":980,"title":{},"body":{"license.html":{}}}],["window",{"_index":63,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["windowobject",{"_index":58,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"injectables/CustomEventWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["windowobject.addeventlistener(type",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["windowobject.dispatchevent(new",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["windowobjectinjectiontoken",{"_index":59,"title":{},"body":{"interfaces/CustomEventProviderFactoryConfigs.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["withcredentials",{"_index":275,"title":{},"body":{"interfaces/PollingConfigs.html":{},"interfaces/PollingHttpOptions.html":{},"interfaces/PollingManager.html":{},"injectables/ServerSentEventWorker.html":{},"miscellaneous/variables.html":{}}}],["within",{"_index":1015,"title":{},"body":{"license.html":{}}}],["without",{"_index":1068,"title":{},"body":{"license.html":{}}}],["work",{"_index":962,"title":{},"body":{"license.html":{}}}],["worker",{"_index":70,"title":{},"body":{"injectables/CustomEventWorker.html":{},"injectables/PollingWorker.html":{},"injectables/WebsocketWorker.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["workerinjectiontoken",{"_index":850,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["workerinjectiontoken.tostring",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":972,"title":{},"body":{"license.html":{}}}],["world",{"_index":645,"title":{},"body":{"injectables/WebsocketWorker.html":{}}}],["worldwide",{"_index":1020,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":226,"title":{},"body":{"directives/IntersectionObserverDirective.html":{}}}],["writing",{"_index":1010,"title":{},"body":{"license.html":{}}}],["written",{"_index":996,"title":{},"body":{"license.html":{}}}],["yes",{"_index":40,"title":{},"body":{"classes/CustomEventApi.html":{},"injectables/CustomEventWorker.html":{},"injectables/PollingWorker.html":{},"miscellaneous/functions.html":{}}}],["yyyy",{"_index":1229,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":800,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/CustomEventApi.html":{"url":"classes/CustomEventApi.html","title":"class - CustomEventApi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomEventApi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/workers/event/custom-event.api.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing a custom event API.\nExample : new CustomEventApi('type', data);\n // => Creates a new custom event API with the provided type and data.\n // => The custom event API is an instance of the Event class.\n            \n\n            \n                Extends\n            \n            \n                        Event\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, data: T, eventInitDict?: CustomEventInit)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-tools/src/lib/workers/event/custom-event.api.ts:17\n                            \n                        \n\n                \n                    \n                            Creates a new custom event API.\nExample : new CustomEventApi('type', data);\n // => Creates a new custom event API with the provided type and data.\n // => The custom event API is an instance of the Event class.\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe type of the event.\n\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe data associated with the event.\n\n\n                                                        \n                                                \n                                                \n                                                        eventInitDict\n                                                  \n                                                        \n                                                                    CustomEventInit\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                \nThe custom event initialization dictionary.\n\n\n                                                        \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                             new CustomEventApi('type', data);\n // => Creates a new custom event API with the provided type and data.\n // => The custom event API is an instance of the Event class.\n\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/event/custom-event.api.ts:17\n                        \n                    \n\n            \n                \n                    The data associated with the event.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CustomEventApi extends Event {\n  /**\n   * The data associated with the event.\n   *\n   * @type {T}\n   */\n  public readonly data: T;\n\n  /**\n   * Creates a new custom event API.\n   *\n   * @param {string} type - The type of the event.\n   * @param {T} data - The data associated with the event.\n   * @param {CustomEventInit} [eventInitDict] - The custom event initialization dictionary.\n   * @example\n   *  new CustomEventApi('type', data);\n   *  // => Creates a new custom event API with the provided type and data.\n   *  // => The custom event API is an instance of the Event class.\n   */\n  constructor(type: string, data: T, eventInitDict?: CustomEventInit) {\n    super(type, eventInitDict);\n    this.data = data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomEventProviderFactoryConfigs.html":{"url":"interfaces/CustomEventProviderFactoryConfigs.html","title":"interface - CustomEventProviderFactoryConfigs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomEventProviderFactoryConfigs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/workers/event/custom-event.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                InjectionToken for the type of custom event.\nThis InjectionToken is used to provide the type of custom event in the application.\nThe type of the custom event is a string.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            replySubjectBufferSize\n                                        \n                                \n                                \n                                        \n                                            windowObject\n                                        \n                                \n                                \n                                        \n                                            windowObjectInjectionToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        replySubjectBufferSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replySubjectBufferSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        windowObject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        windowObject:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        windowObjectInjectionToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        windowObjectInjectionToken:     InjectionToken<>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InjectionToken<>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * InjectionToken for the type of custom event.\n * This InjectionToken is used to provide the type of custom event in the application.\n * The type of the custom event is a string.\n */\nexport interface CustomEventProviderFactoryConfigs {\n  replySubjectBufferSize: number;\n  windowObjectInjectionToken: InjectionToken;\n  windowObject: Window & typeof globalThis;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomEventWorker.html":{"url":"injectables/CustomEventWorker.html","title":"injectable - CustomEventWorker","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomEventWorker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/workers/event/custom-event.worker.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing a custom event worker.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                customEventStream\n                            \n                            \n                                    Public\n                                customEventStream$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatch\n                            \n                            \n                                DispatchCustomEvent\n                            \n                            \n                                listen$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, customEventStream: ReplaySubject, windowObject)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-tools/src/lib/workers/event/custom-event.worker.ts:30\n                            \n                        \n\n                \n                    \n                            Create a custom event worker.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe type of the custom event.\n\n\n                                                        \n                                                \n                                                \n                                                        customEventStream\n                                                  \n                                                        \n                                                                    ReplaySubject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe custom event stream.\n\n\n                                                        \n                                                \n                                                \n                                                        windowObject\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe window object.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dispatch\n                        \n                    \n                \n            \n            \n                \ndispatch(data: T, eventInitDict?: CustomEventInit)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/event/custom-event.worker.ts:101\n                        \n                    \n\n\n            \n                \n                        Dispatch a custom event.\nExample : customEventWorker.dispatch(data);\n customEventWorker.dispatch(data, eventInitDict);\n // => Dispatches a custom event with the provided data and event initialization dictionary.\n // => The event is dispatched to the window object.\n // => The event is also dispatched to the custom event stream.\n // => The event is dispatched to the custom event listeners.\n // => If the event initialization dictionary is not provided, it defaults to the CustomEventInit dictionary.\n // => If the event initialization dictionary is not of type CustomEventInit, it catches the error and logs it.\n // => If the data is not provided, it catches the error and logs it.\n // => If the data is not of type T, it catches the error and logs it.\n // => If the type is not provided, it catches the error and logs it.\n // => If the type is not of type string, it catches the error and logs it.\n // => If the window object is not provided, it catches the error and logs it.\n // => If the window object is not of type Window, it catches the error and logs it.\n // => If the custom event stream is not provided, it catches the error and logs it.\n // => If the custom event stream is not of type ReplaySubject, it catches the error and logs it.\n // => If the custom event stream observable is not provided, it catches the error and logs it.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to be dispatched with the custom event.\n\n\n                                            \n                                        \n                                        \n                                                eventInitDict\n                                            \n                                                        CustomEventInit\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe custom event initialization dictionary.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DispatchCustomEvent\n                        \n                    \n                \n            \n            \n                \nDispatchCustomEvent(data: T, eventInitDict?: CustomEventInit)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/event/custom-event.worker.ts:72\n                        \n                    \n\n\n            \n                \n                        Dispatch a custom event.\nExample : customEventWorker.DispatchCustomEvent(window, 'type', data);\n customEventWorker.DispatchCustomEvent(window, 'type', data, eventInitDict);\n // => Dispatches a custom event with the provided data and event initialization dictionary.\n // => If the event initialization dictionary is not provided, it defaults to the CustomEventInit dictionary.\n // => If the event initialization dictionary is not of type CustomEventInit, it catches the error and logs it.\n // => If the data is not provided, it catches the error and logs it.\n // => If the data is not of type T, it catches the error and logs it.\n // => If the type is not provided, it catches the error and logs it.\n // => If the type is not of type string, it catches the error and logs it.\n // => If the window object is not provided, it catches the error and logs it.\n // => If the window object is not of type Window, it catches the error and logs it.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to be dispatched with the custom event.\n\n\n                                            \n                                        \n                                        \n                                                eventInitDict\n                                            \n                                                        CustomEventInit\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nThe custom event initialization dictionary.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen$\n                        \n                    \n                \n            \n            \n                \nlisten$(filterCallback?: (data?: T) => void, comparerCallback?: (prev?: T,curr?: T) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/event/custom-event.worker.ts:123\n                        \n                    \n\n\n            \n                \n                        Listen for a custom event.\nExample : customEventWorker.listen$();\n // => An observable of the custom events.\n customEventWorker.listen$((data: T) => data.key === 'value');\n // => An observable of the custom events that pass the filter callback.\n customEventWorker.listen$(\n  (data: T) => data.key === 'value',\n  (prev: T, curr: T) => prev.key === curr.key\n );\n // => An observable of the custom events that pass the filter callback and do not match the comparer callback.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filterCallback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nA callback function to filter the custom events.\n\n\n                                            \n                                        \n                                        \n                                                comparerCallback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nA callback function to compare the previous and current custom events.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable of the custom events.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        customEventStream\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ReplaySubject\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(CUSTOM_EVENT_STREAM_REPLAY_SUBJECT)@Optional()\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/event/custom-event.worker.ts:47\n                        \n                    \n\n            \n                \n                    - The custom event stream.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        customEventStream$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.customEventStream.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/event/custom-event.worker.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  CUSTOM_EVENT_STREAM_REPLAY_SUBJECT,\n  CUSTOM_EVENT_TYPE,\n  CUSTOM_EVENT_WINDOW_OBJECT\n} from './custom-event.injection-token';\nimport {\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  Observable,\n  race,\n  repeat,\n  ReplaySubject,\n  take\n} from 'rxjs';\nimport { CustomEventApi } from './custom-event.api';\nimport { DispatchCustomEvent } from './custom-event.helper';\nimport { OfFunctionType } from '@24vlh/ts-assert';\n\n/**\n * Class representing a custom event worker.\n *\n * @template T - The type of the data associated with the custom event.\n */\n@Injectable()\nexport class CustomEventWorker {\n  public customEventStream$: Observable =\n    this.customEventStream.asObservable();\n\n  /**\n   * Create a custom event worker.\n   *\n   * @template T\n   * @template globalThis\n   * @param {string} type - The type of the custom event.\n   * @param {ReplaySubject} customEventStream - The custom event stream.\n   * @param {Window & typeof globalThis} windowObject - The window object.\n   */\n  constructor(\n    @Inject(CUSTOM_EVENT_TYPE)\n    @Optional()\n    private type: string,\n    @Inject(CUSTOM_EVENT_STREAM_REPLAY_SUBJECT)\n    @Optional()\n    public customEventStream: ReplaySubject,\n    @Inject(CUSTOM_EVENT_WINDOW_OBJECT)\n    @Optional()\n    private windowObject: Window & typeof globalThis = window\n  ) {}\n\n  /**\n   * Dispatch a custom event.\n   *\n   * @param {T} data - The data to be dispatched with the custom event.\n   * @param {CustomEventInit} eventInitDict - The custom event initialization dictionary.\n   * @returns {void}\n   * @example\n   *  customEventWorker.DispatchCustomEvent(window, 'type', data);\n   *  customEventWorker.DispatchCustomEvent(window, 'type', data, eventInitDict);\n   *  // => Dispatches a custom event with the provided data and event initialization dictionary.\n   *  // => If the event initialization dictionary is not provided, it defaults to the CustomEventInit dictionary.\n   *  // => If the event initialization dictionary is not of type CustomEventInit, it catches the error and logs it.\n   *  // => If the data is not provided, it catches the error and logs it.\n   *  // => If the data is not of type T, it catches the error and logs it.\n   *  // => If the type is not provided, it catches the error and logs it.\n   *  // => If the type is not of type string, it catches the error and logs it.\n   *  // => If the window object is not provided, it catches the error and logs it.\n   *  // => If the window object is not of type Window, it catches the error and logs it.\n   */\n  DispatchCustomEvent(data: T, eventInitDict?: CustomEventInit): void {\n    DispatchCustomEvent(this.windowObject, this.type, data, eventInitDict);\n  }\n\n  /**\n   * Dispatch a custom event.\n   *\n   * @param {T} data - The data to be dispatched with the custom event.\n   * @param {CustomEventInit} eventInitDict - The custom event initialization dictionary.\n   * @returns {void}\n   * @example\n   *  customEventWorker.dispatch(data);\n   *  customEventWorker.dispatch(data, eventInitDict);\n   *  // => Dispatches a custom event with the provided data and event initialization dictionary.\n   *  // => The event is dispatched to the window object.\n   *  // => The event is also dispatched to the custom event stream.\n   *  // => The event is dispatched to the custom event listeners.\n   *  // => If the event initialization dictionary is not provided, it defaults to the CustomEventInit dictionary.\n   *  // => If the event initialization dictionary is not of type CustomEventInit, it catches the error and logs it.\n   *  // => If the data is not provided, it catches the error and logs it.\n   *  // => If the data is not of type T, it catches the error and logs it.\n   *  // => If the type is not provided, it catches the error and logs it.\n   *  // => If the type is not of type string, it catches the error and logs it.\n   *  // => If the window object is not provided, it catches the error and logs it.\n   *  // => If the window object is not of type Window, it catches the error and logs it.\n   *  // => If the custom event stream is not provided, it catches the error and logs it.\n   *  // => If the custom event stream is not of type ReplaySubject, it catches the error and logs it.\n   *  // => If the custom event stream observable is not provided, it catches the error and logs it.\n   */\n  dispatch(data: T, eventInitDict?: CustomEventInit): void {\n    this.customEventStream.next(data);\n    this.DispatchCustomEvent(data, eventInitDict);\n  }\n\n  /**\n   * Listen for a custom event.\n   *\n   * @param {(data: T) => boolean} filterCallback - A callback function to filter the custom events.\n   * @param {(prev: T, curr: T) => boolean} comparerCallback - A callback function to compare the previous and current custom events.\n   * @returns {Observable} An observable of the custom events.\n   * @example\n   *  customEventWorker.listen$();\n   *  // => An observable of the custom events.\n   *  customEventWorker.listen$((data: T) => data.key === 'value');\n   *  // => An observable of the custom events that pass the filter callback.\n   *  customEventWorker.listen$(\n   *   (data: T) => data.key === 'value',\n   *   (prev: T, curr: T) => prev.key === curr.key\n   *  );\n   *  // => An observable of the custom events that pass the filter callback and do not match the comparer callback.\n   */\n  listen$(\n    filterCallback?: (data: T) => boolean,\n    comparerCallback?: (prev: T, curr: T) => boolean\n  ): Observable {\n    return race(\n      fromEvent>(this.windowObject, this.type).pipe(\n        map((event: CustomEventApi): T => event.data)\n      ),\n      this.customEventStream$\n    ).pipe(\n      repeat(), // Repeat the observable indefinitely. Keep this before the take operator.\n      take(1),\n      filter(\n        OfFunctionType boolean>(filterCallback)\n          ? filterCallback\n          : (): boolean => true\n      ),\n      distinctUntilChanged(\n        OfFunctionType boolean>(comparerCallback)\n          ? comparerCallback\n          : (prev: T, curr: T): boolean =>\n              JSON.stringify(prev) === JSON.stringify(curr)\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpSubmitConfig.html":{"url":"interfaces/HttpSubmitConfig.html","title":"interface - HttpSubmitConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HttpSubmitConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/helpers/http/http-submit.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            filterCallback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            onlyHttpResponses\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            patchOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            patchUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            postOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            postUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            putOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            putUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            retryCount\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filterCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterCallback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onlyHttpResponses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onlyHttpResponses:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patchOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        patchOptions:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        patchUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        patchUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postOptions:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        putOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        putOptions:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        putUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        putUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        retryCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        retryCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpEvent, HttpRequest } from '@angular/common/http';\n\nexport interface HttpSubmitConfig {\n  url: string;\n  onlyHttpResponses?: boolean;\n  filterCallback?: (event: HttpEvent) => boolean;\n  options?: Partial>;\n  retryCount?: number;\n  postUrl?: string;\n  postOptions?: Partial>;\n  putUrl?: string;\n  putOptions?: Partial>;\n  patchUrl?: string;\n  patchOptions?: Partial>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/IntersectionObserverDirective.html":{"url":"directives/IntersectionObserverDirective.html","title":"directive - IntersectionObserverDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  IntersectionObserverDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/directives/intersection-observer/intersection-observer.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                IntersectionObserverDirective is a directive that implements the Intersection Observer API.\nIt emits an event each time the host element intersects with the viewport.\nExample : \n // => The IntersectionObserverDirective is applied to the div element.\n // => The onIntersection method is called each time the div element intersects with the viewport.\n // => The event object is passed to the onIntersection method.\n // => The event object contains information about the intersection.\n // => The IntersectionObserverDirective is a standalone directive.\n // => The IntersectionObserverDirective is used to implement the Intersection Observer API.\n // => The IntersectionObserverDirective emits an event each time the host element intersects with the viewport.\n            \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [vlhIntersectionObserver]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                observer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                intersection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-tools/src/lib/directives/intersection-observer/intersection-observer.directive.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA wrapper around a native element inside a View.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        intersection\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/angular-tools/src/lib/directives/intersection-observer/intersection-observer.directive.ts:33\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/directives/intersection-observer/intersection-observer.directive.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/directives/intersection-observer/intersection-observer.directive.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        observer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IntersectionObserver\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/directives/intersection-observer/intersection-observer.directive.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output\n} from '@angular/core';\n\n/**\n * `IntersectionObserverDirective` is a directive that implements the Intersection Observer API.\n * It emits an event each time the host element intersects with the viewport.\n *\n * @export\n * @class IntersectionObserverDirective\n * @implements {OnInit}\n * @implements {OnDestroy}\n * @example\n *  \n *  // => The IntersectionObserverDirective is applied to the div element.\n *  // => The onIntersection method is called each time the div element intersects with the viewport.\n *  // => The event object is passed to the onIntersection method.\n *  // => The event object contains information about the intersection.\n *  // => The IntersectionObserverDirective is a standalone directive.\n *  // => The IntersectionObserverDirective is used to implement the Intersection Observer API.\n *  // => The IntersectionObserverDirective emits an event each time the host element intersects with the viewport.\n */\n@Directive({\n  selector: '[vlhIntersectionObserver]',\n  standalone: true\n})\nexport class IntersectionObserverDirective implements OnInit, OnDestroy {\n  @Output() intersection: EventEmitter =\n    new EventEmitter();\n  public observer?: IntersectionObserver;\n\n  /**\n   * @param {ElementRef} el - A wrapper around a native element inside a View.\n   */\n  constructor(private el: ElementRef) {}\n\n  ngOnInit(): void {\n    this.observer = new IntersectionObserver(\n      (entries: IntersectionObserverEntry[]): void => {\n        entries.forEach((entry: IntersectionObserverEntry): void => {\n          if (entry.isIntersecting) {\n            this.intersection.emit(entry);\n          }\n        });\n      }\n    );\n    this.observer.observe(this.el.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PollingConfigs.html":{"url":"interfaces/PollingConfigs.html","title":"interface - PollingConfigs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PollingConfigs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/workers/polling/polling.type.ts\n        \n\n\n            \n                Description\n            \n            \n                The PollingConfigs interface is used to configure the polling operation.\nThe PollingConfigs interface has the following properties:\n\nhttpOptions: The optional HTTP headers for the GET request.\ncomparerCallback: A function to compare the current and previous responses. If this function returns true, the Observable will not emit the current response.\ncallback: A function that is called with the response of each HTTP GET request.\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            callback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comparerCallback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filterCallback\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            httpOptions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comparerCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comparerCallback:         PollingComparer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PollingComparer\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterCallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterCallback:         PollingFilter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PollingFilter\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        httpOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        httpOptions:         PollingHttpOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PollingHttpOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpContext, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, Subscription } from 'rxjs';\n\n/**\n * The `PollingHttpOptions` interface is used to configure the HTTP GET request for polling.\n * The `PollingHttpOptions` interface extends the Angular `HttpOptions` interface.\n */\nexport interface PollingHttpOptions {\n  headers?: HttpHeaders | Record;\n  context?: HttpContext;\n  observe?: 'body';\n  params?:\n    | HttpParams\n    | Record;\n  reportProgress?: boolean;\n  responseType?: 'json';\n  withCredentials?: boolean;\n  transferCache?:\n    | {\n        includeHeaders?: string[];\n      }\n    | boolean;\n}\n\n/**\n * The `PollingComparer` type is used to compare the current and previous responses.\n * The `PollingComparer` type is a function that takes two arguments: the previous response and the current response.\n * The function returns a boolean value indicating whether the current response is equal to the previous response.\n */\nexport type PollingComparer = (prev: T, curr: T) => boolean;\n\n/**\n * The `PollingFilter` type is used to filter the response of the HTTP GET request.\n * The `PollingFilter` type is a function that takes the response of the HTTP GET request as an argument and returns a boolean value.\n * If the function returns `true`, the Observable will emit the response.\n */\nexport type PollingFilter = (data: T) => boolean;\n\n/**\n * The `PollingConfigs` interface is used to configure the polling operation.\n *\n * The `PollingConfigs` interface has the following properties:\n * - `httpOptions`: The optional HTTP headers for the GET request.\n * - `comparerCallback`: A function to compare the current and previous responses. If this function returns `true`, the Observable will not emit the current response.\n * - `callback`: A function that is called with the response of each HTTP GET request.\n */\nexport interface PollingConfigs {\n  httpOptions?: PollingHttpOptions;\n  filterCallback?: PollingFilter;\n  comparerCallback?: PollingComparer;\n  callback?: (data: T) => void;\n}\n\n/**\n * The `PollingManager` interface is used to manage the polling operation.\n *\n * The `PollingManager` interface has the following properties:\n * - `pollingObservable$`: An Observable that emits the response of each HTTP GET request.\n * - `pollingSubscription`: The subscription to the polling Observable.\n * - `stop`: A function to stop the polling operation.\n * - `resume`: A function to resume the polling operation with a new HTTP GET request, time interval, and configuration.\n * - `restart`: A function to restart the polling operation with the same HTTP GET request, time interval, and configuration.\n */\nexport interface PollingManager {\n  pollingObservable$: Observable;\n  pollingSubscription: Subscription;\n  stop: () => void;\n  resume: () => void;\n  restart: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PollingHttpOptions.html":{"url":"interfaces/PollingHttpOptions.html","title":"interface - PollingHttpOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PollingHttpOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/workers/polling/polling.type.ts\n        \n\n\n            \n                Description\n            \n            \n                The PollingHttpOptions interface is used to configure the HTTP GET request for polling.\nThe PollingHttpOptions interface extends the Angular HttpOptions interface.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            context\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            observe\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            params\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            reportProgress\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            responseType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transferCache\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            withCredentials\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:     HttpContext\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpContext\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     HttpHeaders | Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpHeaders | Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        observe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        observe:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:     HttpParams | Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpParams | Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportProgress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reportProgress:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responseType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responseType:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transferCache\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transferCache:     literal type | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type | boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpContext, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, Subscription } from 'rxjs';\n\n/**\n * The `PollingHttpOptions` interface is used to configure the HTTP GET request for polling.\n * The `PollingHttpOptions` interface extends the Angular `HttpOptions` interface.\n */\nexport interface PollingHttpOptions {\n  headers?: HttpHeaders | Record;\n  context?: HttpContext;\n  observe?: 'body';\n  params?:\n    | HttpParams\n    | Record;\n  reportProgress?: boolean;\n  responseType?: 'json';\n  withCredentials?: boolean;\n  transferCache?:\n    | {\n        includeHeaders?: string[];\n      }\n    | boolean;\n}\n\n/**\n * The `PollingComparer` type is used to compare the current and previous responses.\n * The `PollingComparer` type is a function that takes two arguments: the previous response and the current response.\n * The function returns a boolean value indicating whether the current response is equal to the previous response.\n */\nexport type PollingComparer = (prev: T, curr: T) => boolean;\n\n/**\n * The `PollingFilter` type is used to filter the response of the HTTP GET request.\n * The `PollingFilter` type is a function that takes the response of the HTTP GET request as an argument and returns a boolean value.\n * If the function returns `true`, the Observable will emit the response.\n */\nexport type PollingFilter = (data: T) => boolean;\n\n/**\n * The `PollingConfigs` interface is used to configure the polling operation.\n *\n * The `PollingConfigs` interface has the following properties:\n * - `httpOptions`: The optional HTTP headers for the GET request.\n * - `comparerCallback`: A function to compare the current and previous responses. If this function returns `true`, the Observable will not emit the current response.\n * - `callback`: A function that is called with the response of each HTTP GET request.\n */\nexport interface PollingConfigs {\n  httpOptions?: PollingHttpOptions;\n  filterCallback?: PollingFilter;\n  comparerCallback?: PollingComparer;\n  callback?: (data: T) => void;\n}\n\n/**\n * The `PollingManager` interface is used to manage the polling operation.\n *\n * The `PollingManager` interface has the following properties:\n * - `pollingObservable$`: An Observable that emits the response of each HTTP GET request.\n * - `pollingSubscription`: The subscription to the polling Observable.\n * - `stop`: A function to stop the polling operation.\n * - `resume`: A function to resume the polling operation with a new HTTP GET request, time interval, and configuration.\n * - `restart`: A function to restart the polling operation with the same HTTP GET request, time interval, and configuration.\n */\nexport interface PollingManager {\n  pollingObservable$: Observable;\n  pollingSubscription: Subscription;\n  stop: () => void;\n  resume: () => void;\n  restart: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PollingManager.html":{"url":"interfaces/PollingManager.html","title":"interface - PollingManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PollingManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/workers/polling/polling.type.ts\n        \n\n\n            \n                Description\n            \n            \n                The PollingManager interface is used to manage the polling operation.\nThe PollingManager interface has the following properties:\n\npollingObservable$: An Observable that emits the response of each HTTP GET request.\npollingSubscription: The subscription to the polling Observable.\nstop: A function to stop the polling operation.\nresume: A function to resume the polling operation with a new HTTP GET request, time interval, and configuration.\nrestart: A function to restart the polling operation with the same HTTP GET request, time interval, and configuration.\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            pollingObservable$\n                                        \n                                \n                                \n                                        \n                                            pollingSubscription\n                                        \n                                \n                                \n                                        \n                                            restart\n                                        \n                                \n                                \n                                        \n                                            resume\n                                        \n                                \n                                \n                                        \n                                            stop\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pollingObservable$\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pollingObservable$:     Observable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Observable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pollingSubscription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pollingSubscription:     Subscription\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subscription\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        restart\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        restart:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resume\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resume:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpContext, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, Subscription } from 'rxjs';\n\n/**\n * The `PollingHttpOptions` interface is used to configure the HTTP GET request for polling.\n * The `PollingHttpOptions` interface extends the Angular `HttpOptions` interface.\n */\nexport interface PollingHttpOptions {\n  headers?: HttpHeaders | Record;\n  context?: HttpContext;\n  observe?: 'body';\n  params?:\n    | HttpParams\n    | Record;\n  reportProgress?: boolean;\n  responseType?: 'json';\n  withCredentials?: boolean;\n  transferCache?:\n    | {\n        includeHeaders?: string[];\n      }\n    | boolean;\n}\n\n/**\n * The `PollingComparer` type is used to compare the current and previous responses.\n * The `PollingComparer` type is a function that takes two arguments: the previous response and the current response.\n * The function returns a boolean value indicating whether the current response is equal to the previous response.\n */\nexport type PollingComparer = (prev: T, curr: T) => boolean;\n\n/**\n * The `PollingFilter` type is used to filter the response of the HTTP GET request.\n * The `PollingFilter` type is a function that takes the response of the HTTP GET request as an argument and returns a boolean value.\n * If the function returns `true`, the Observable will emit the response.\n */\nexport type PollingFilter = (data: T) => boolean;\n\n/**\n * The `PollingConfigs` interface is used to configure the polling operation.\n *\n * The `PollingConfigs` interface has the following properties:\n * - `httpOptions`: The optional HTTP headers for the GET request.\n * - `comparerCallback`: A function to compare the current and previous responses. If this function returns `true`, the Observable will not emit the current response.\n * - `callback`: A function that is called with the response of each HTTP GET request.\n */\nexport interface PollingConfigs {\n  httpOptions?: PollingHttpOptions;\n  filterCallback?: PollingFilter;\n  comparerCallback?: PollingComparer;\n  callback?: (data: T) => void;\n}\n\n/**\n * The `PollingManager` interface is used to manage the polling operation.\n *\n * The `PollingManager` interface has the following properties:\n * - `pollingObservable$`: An Observable that emits the response of each HTTP GET request.\n * - `pollingSubscription`: The subscription to the polling Observable.\n * - `stop`: A function to stop the polling operation.\n * - `resume`: A function to resume the polling operation with a new HTTP GET request, time interval, and configuration.\n * - `restart`: A function to restart the polling operation with the same HTTP GET request, time interval, and configuration.\n */\nexport interface PollingManager {\n  pollingObservable$: Observable;\n  pollingSubscription: Subscription;\n  stop: () => void;\n  resume: () => void;\n  restart: () => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PollingWorker.html":{"url":"injectables/PollingWorker.html","title":"injectable - PollingWorker","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PollingWorker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/workers/polling/polling.worker.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing a polling worker.\nThe PollingWorker class is used to perform HTTP GET requests at regular intervals.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                bootstrapSession\n                            \n                            \n                                poll$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-tools/src/lib/workers/polling/polling.worker.ts:12\n                            \n                        \n\n                \n                    \n                            Create a polling worker.\nExample : new PollingWorker(http);\n // => Creates a new polling worker with the provided Angular HttpClient service.\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular HttpClient service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                             new PollingWorker(http);\n // => Creates a new polling worker with the provided Angular HttpClient service.\n\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        bootstrapSession\n                        \n                    \n                \n            \n            \n                \nbootstrapSession(url: string, interval: number, configs?: PollingConfigs)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/polling/polling.worker.ts:97\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        The bootstrapSession method is used to create a polling session with a specific time interval and configuration.\nExample : pollingWorker.bootstrapSession('https://api.example.com/data', 1000, {\n  httpOptions: {\n   headers: new HttpHeaders({\n   'Content-Type': 'application/json'\n   })\n  },\n  comparerCallback: (prev, curr) => prev.id === curr.id,\n  callback: (response) => console.log(response)\n });\n // => Returns a polling manager that manages the polling session.\n // => The HTTP GET request is sent to the provided URL at regular intervals.\n // => The time interval is 1000 milliseconds.\n // => The HTTP headers for the GET request are provided in the httpOptions property.\n // => The comparerCallback function is used to compare the current and previous responses.The configuration object (configs) has the following properties:\n\nhttpOptions: The optional HTTP headers for the GET request.\ncomparerCallback: A function to compare the current and previous responses. If this function returns true, the Observable will not emit the current response.\ncallback: A function that is called with the response of each HTTP GET request.\n\nIf the comparerCallback function is not provided, the method uses a default comparerCallback that checks if the JSON stringified versions of the current and previous responses are equal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The URL to which the HTTP GET request will be sent.\n\n                                            \n                                        \n                                        \n                                                interval\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The time interval (in milliseconds) at which the HTTP GET request will be sent.\n\n                                            \n                                        \n                                        \n                                                configs\n                                            \n                                                            PollingConfigs\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    The configuration object for the polling operation.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PollingManager\n\n                        \n                            \n                                A polling manager that manages the polling session.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        poll$\n                        \n                    \n                \n            \n            \n                \npoll$(url: string, interval: number, configs?: PollingConfigs)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/polling/polling.worker.ts:54\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        The poll$ method is used to perform HTTP GET requests at regular intervals.\nExample : pollingWorker.poll$('https://api.example.com/data', 1000, {\n  httpOptions: {\n   headers: new HttpHeaders({\n   'Content-Type': 'application/json'\n   })\n  },\n  comparerCallback: (prev, curr) => prev.id === curr.id,\n  callback: (response) => console.log(response)\n });\n // => Returns an Observable that emits the response of each HTTP GET request.\n // => The HTTP GET request is sent to the provided URL at regular intervals.\n // => The time interval is 1000 milliseconds.\n // => The HTTP headers for the GET request are provided in the httpOptions property.\n // => The comparerCallback function is used to compare the current and previous responses.The configuration object (configs) has the following properties:\n\nhttpOptions: The optional HTTP headers for the GET request.\ncomparerCallback: A function to compare the current and previous responses. If this function returns true, the Observable will not emit the current response.\ncallback: A function that is called with the response of each HTTP GET request.\n\nIf the comparerCallback function is not provided, the method uses a default comparerCallback that checks if the JSON stringified versions of the current and previous responses are equal.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The URL to which the HTTP GET request will be sent.\n\n                                            \n                                        \n                                        \n                                                interval\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The time interval (in milliseconds) at which the HTTP GET request will be sent.\n\n                                            \n                                        \n                                        \n                                                configs\n                                            \n                                                            PollingConfigs\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    The configuration object for the polling operation.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits the response of each HTTP GET request.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/polling/polling.worker.ts:21\n                        \n                    \n\n            \n                \n                    - The Angular HttpClient service.\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { PollingConfigs, PollingManager } from './polling.type';\nimport { Observable } from 'rxjs';\nimport { BootstrapPollingSession, StartPolling } from './polling.helper';\nimport { Injectable } from '@angular/core';\n\n/**\n * Class representing a polling worker.\n * The `PollingWorker` class is used to perform HTTP GET requests at regular intervals.\n */\n@Injectable()\nexport class PollingWorker {\n  /**\n   * Create a polling worker.\n   *\n   * @param {HttpClient} http - The Angular HttpClient service.\n   * @example\n   *  new PollingWorker(http);\n   *  // => Creates a new polling worker with the provided Angular HttpClient service.\n   */\n  constructor(public http: HttpClient) {}\n\n  /**\n   * The `poll$` method is used to perform HTTP GET requests at regular intervals.\n   *\n   * @template T The type of the response object.\n   * @param {string} url The URL to which the HTTP GET request will be sent.\n   * @param {number} interval The time interval (in milliseconds) at which the HTTP GET request will be sent.\n   * @param {PollingConfigs} configs The configuration object for the polling operation.\n   * @returns {Observable} An Observable that emits the response of each HTTP GET request.\n   * @example\n   *  pollingWorker.poll$('https://api.example.com/data', 1000, {\n   *   httpOptions: {\n   *    headers: new HttpHeaders({\n   *    'Content-Type': 'application/json'\n   *    })\n   *   },\n   *   comparerCallback: (prev, curr) => prev.id === curr.id,\n   *   callback: (response) => console.log(response)\n   *  });\n   *  // => Returns an Observable that emits the response of each HTTP GET request.\n   *  // => The HTTP GET request is sent to the provided URL at regular intervals.\n   *  // => The time interval is 1000 milliseconds.\n   *  // => The HTTP headers for the GET request are provided in the httpOptions property.\n   *  // => The comparerCallback function is used to compare the current and previous responses.\n   *\n   * The configuration object (`configs`) has the following properties:\n   * - `httpOptions`: The optional HTTP headers for the GET request.\n   * - `comparerCallback`: A function to compare the current and previous responses. If this function returns `true`, the Observable will not emit the current response.\n   * - `callback`: A function that is called with the response of each HTTP GET request.\n   *\n   * If the `comparerCallback` function is not provided, the method uses a default comparerCallback that checks if the JSON stringified versions of the current and previous responses are equal.\n   */\n  poll$(\n    url: string,\n    interval: number,\n    configs?: PollingConfigs\n  ): Observable {\n    return StartPolling(\n      this.http.get(url, configs?.httpOptions),\n      interval,\n      configs\n    );\n  }\n\n  /**\n   * The `bootstrapSession` method is used to create a polling session with a specific time interval and configuration.\n   *\n   * @template T The type of the response object.\n   * @param {string} url The URL to which the HTTP GET request will be sent.\n   * @param {number} interval The time interval (in milliseconds) at which the HTTP GET request will be sent.\n   * @param {PollingConfigs} configs The configuration object for the polling operation.\n   * @returns {PollingManager} A polling manager that manages the polling session.\n   * @example\n   *  pollingWorker.bootstrapSession('https://api.example.com/data', 1000, {\n   *   httpOptions: {\n   *    headers: new HttpHeaders({\n   *    'Content-Type': 'application/json'\n   *    })\n   *   },\n   *   comparerCallback: (prev, curr) => prev.id === curr.id,\n   *   callback: (response) => console.log(response)\n   *  });\n   *  // => Returns a polling manager that manages the polling session.\n   *  // => The HTTP GET request is sent to the provided URL at regular intervals.\n   *  // => The time interval is 1000 milliseconds.\n   *  // => The HTTP headers for the GET request are provided in the httpOptions property.\n   *  // => The comparerCallback function is used to compare the current and previous responses.\n   *\n   * The configuration object (`configs`) has the following properties:\n   * - `httpOptions`: The optional HTTP headers for the GET request.\n   * - `comparerCallback`: A function to compare the current and previous responses. If this function returns `true`, the Observable will not emit the current response.\n   * - `callback`: A function that is called with the response of each HTTP GET request.\n   *\n   * If the `comparerCallback` function is not provided, the method uses a default comparerCallback that checks if the JSON stringified versions of the current and previous responses are equal.\n   */\n  bootstrapSession(\n    url: string,\n    interval: number,\n    configs?: PollingConfigs\n  ): PollingManager {\n    return BootstrapPollingSession(\n      this.http.get(url, configs?.httpOptions),\n      interval,\n      configs\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServerSentEvent.html":{"url":"interfaces/ServerSentEvent.html","title":"interface - ServerSentEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServerSentEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Server Sent Event interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            event\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     M\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     M\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        event:     E\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     E\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ServerSentEvent {\n  event: E;\n  data: M;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerSentEventWorker.html":{"url":"injectables/ServerSentEventWorker.html","title":"injectable - ServerSentEventWorker","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ServerSentEventWorker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable service for handling Server-Sent Events (SSE).\nThis service provides methods to connect, disconnect, and reconnect to the SSE server.\nIt also provides methods to listen to specific messages from the server.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                eventSource\n                            \n                            \n                                    Private\n                                    Readonly\n                                eventSourceInitDic\n                            \n                            \n                                    Private\n                                eventSubject\n                            \n                            \n                                    Private\n                                messages$\n                            \n                            \n                                    Private\n                                timeoutBackoff\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                listen$\n                            \n                            \n                                pickAndMapMessage\n                            \n                            \n                                pickMessage\n                            \n                            \n                                reconnect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDisconnected\n                                \n                                \n                                    EventSource\n                                \n                                \n                                    EventSubject\n                                \n                                \n                                    Messages$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, withCredentials: boolean | undefined, timeoutBackoffConfigs: TimeoutBackoffConfigs, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:38\n                            \n                        \n\n                \n                    \n                            Constructs a new ServerSentEventWorker.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe URL of the SSE server.\n\n\n                                                        \n                                                \n                                                \n                                                        withCredentials\n                                                  \n                                                        \n                                                                    boolean | undefined\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nWhether to include credentials in the request.\n\n\n                                                        \n                                                \n                                                \n                                                        timeoutBackoffConfigs\n                                                  \n                                                        \n                                                                        TimeoutBackoffConfigs\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nConfiguration for the timeout backoff strategy.\n\n\n                                                        \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular's execution context.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:123\n                        \n                    \n\n\n            \n                \n                        Connects to the SSE server.\nExample : sse.connect();\n // => Connects to the SSE server.\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:165\n                        \n                    \n\n\n            \n                \n                        Disconnects from the SSE server.\nExample : sse.disconnect();\n // => Disconnects from the SSE server.\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen$\n                        \n                    \n                \n            \n            \n                \nlisten$(operators: (OperatorFunction> | R> | MonoTypeOperatorFunction>> | MonoTypeOperatorFunction)[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:187\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    R\n                            \n                        \n                    \n\n            \n                \n                        Listens to specific messages from the SSE server.\nExample : sse.listen$();\n // => An Observable of the server-sent events.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operators\n                                            \n                                                            (OperatorFunction> | R> | MonoTypeOperatorFunction>> | MonoTypeOperatorFunction)[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe operators to apply to the messages.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                an Observable of the filtered messages.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pickAndMapMessage\n                        \n                    \n                \n            \n            \n                \npickAndMapMessage(filterCallback: (data: ServerSentEvent>) => void, mapCallback: (data: ServerSentEvent>) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:227\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    R\n                            \n                        \n                    \n\n            \n                \n                        Picks and maps specific messages from the SSE server.\nExample : sse.pickAndMapMessage((data) => data.event.type === 'message', (data) => data.data);\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filterCallback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe filter function to apply to the messages.\n\n\n                                            \n                                        \n                                        \n                                                mapCallback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe map function to apply to the filtered messages.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                an Observable of the mapped messages.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pickMessage\n                        \n                    \n                \n            \n            \n                \npickMessage(filterCallback: (data: ServerSentEvent>) => void, operators: (OperatorFunction> | R> | MonoTypeOperatorFunction>> | MonoTypeOperatorFunction)[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:207\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    R\n                            \n                        \n                    \n\n            \n                \n                        Picks specific messages from the SSE server.\nExample : sse.pickMessage((data) => data.event.type === 'message');\n // => An Observable of the picked messages.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filterCallback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe filter function to apply to the messages.\n\n\n                                            \n                                        \n                                        \n                                                operators\n                                            \n                                                            (OperatorFunction> | R> | MonoTypeOperatorFunction>> | MonoTypeOperatorFunction)[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe operators to apply to the filtered messages.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                an Observable of the picked messages.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reconnect\n                        \n                    \n                \n            \n            \n                \nreconnect()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:152\n                        \n                    \n\n\n            \n                \n                        Reconnects to the SSE server.\nExample : sse.reconnect();\n // => Reconnects to the SSE server.\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eventSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventSource\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        eventSourceInitDic\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventSourceInit | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        eventSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Subject>>\n\n                    \n                \n                \n                    \n                        Default value : new Subject>>()\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messages$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable>>\n\n                    \n                \n                \n                    \n                        Default value : this.eventSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        timeoutBackoff\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : TimeoutBackoff(\n    (): void => {\n      this.reconnect();\n    },\n    (): void => {\n      this.disconnect();\n      this.eventSubject.complete();\n    },\n    this.timeoutBackoffConfigs.maxRetries,\n    this.timeoutBackoffConfigs.initialDelay,\n    this.timeoutBackoffConfigs.maxDelay\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isDisconnected\n                    \n                \n\n                \n                    \n                        getisDisconnected()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:72\n                                \n                            \n                    \n                        \n                                Checks if the connection to the SSE server is disconnected.\nExample : sse.isDisconnected;\n // => Returns true if the connection to the SSE server is disconnected.\n\n                                \n                                        Example :\n                                            \n                                                 sse.isDisconnected;\n // =&gt; Returns true if the connection to the SSE server is disconnected.\n                                            \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        EventSource\n                    \n                \n\n                \n                    \n                        getEventSource()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:87\n                                \n                            \n                    \n                        \n                                Returns the EventSource object.\nExample : sse.EventSource;\n // => Returns the EventSource object.\n\n                                \n                                        Example :\n                                            \n                                                 sse.EventSource;\n // =&gt; Returns the EventSource object.\n                                            \n                                \n                                \n                                    Returns :     EventSource | undefined\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        EventSubject\n                    \n                \n\n                \n                    \n                        getEventSubject()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:99\n                                \n                            \n                    \n                        \n                                Returns the Subject for the server-sent events.\nExample : sse.EventSubject;\n // => Returns the Subject for the server-sent events.\n\n                                \n                                        Example :\n                                            \n                                                 sse.EventSubject;\n // =&gt; Returns the Subject for the server-sent events.\n                                            \n                                \n                                \n                                    Returns :         Subject>>\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Messages$\n                    \n                \n\n                \n                    \n                        getMessages$()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts:111\n                                \n                            \n                    \n                        \n                                Returns the Observable for the server-sent events.\nExample : sse.Messages$;\n // => Returns the Observable for the server-sent events.\n\n                                \n                                        Example :\n                                            \n                                                 sse.Messages$;\n // =&gt; Returns the Observable for the server-sent events.\n                                            \n                                \n                                \n                                    Returns :         Observable>>\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { filter, map, MonoTypeOperatorFunction, Observable, OperatorFunction, Subject } from 'rxjs';\nimport { Inject, Injectable, NgZone, Optional } from '@angular/core';\nimport {\n  SERVER_SENT_EVENT_TIMEOUT_BACKOFF_CONFIGS,\n  SERVER_SENT_EVENT_URL,\n  SERVER_SENT_EVENT_WITH_CREDENTIALS\n} from './server-sent-event.injection-token';\nimport { ServerSentEvent } from './server-sent-event.interface';\nimport { NotInstanceOfType } from '@24vlh/ts-assert';\nimport { TimeoutBackoff, TimeoutBackoffConfigs } from '../../helpers';\n\n/**\n * Injectable service for handling Server-Sent Events (SSE).\n * This service provides methods to connect, disconnect, and reconnect to the SSE server.\n * It also provides methods to listen to specific messages from the server.\n *\n * @template M - The type of the messages.\n */\n@Injectable()\nexport class ServerSentEventWorker {\n  private readonly eventSourceInitDic: EventSourceInit | undefined = undefined;\n  private eventSource!: EventSource;\n  private eventSubject: Subject>> =\n    new Subject>>();\n  private messages$: Observable>> =\n    this.eventSubject.asObservable();\n  private timeoutBackoff: (reset?: boolean) => void = TimeoutBackoff(\n    (): void => {\n      this.reconnect();\n    },\n    (): void => {\n      this.disconnect();\n      this.eventSubject.complete();\n    },\n    this.timeoutBackoffConfigs.maxRetries,\n    this.timeoutBackoffConfigs.initialDelay,\n    this.timeoutBackoffConfigs.maxDelay\n  );\n\n  /**\n   * Constructs a new ServerSentEventWorker.\n   *\n   * @param url - The URL of the SSE server.\n   * @param withCredentials - Whether to include credentials in the request.\n   * @param timeoutBackoffConfigs - Configuration for the timeout backoff strategy.\n   * @param ngZone - Angular's execution context.\n   */\n  constructor(\n    @Inject(SERVER_SENT_EVENT_URL) private url: string,\n    @Inject(SERVER_SENT_EVENT_WITH_CREDENTIALS)\n    @Optional()\n    withCredentials: boolean | undefined = undefined,\n    @Inject(SERVER_SENT_EVENT_TIMEOUT_BACKOFF_CONFIGS)\n    @Optional()\n    private timeoutBackoffConfigs: TimeoutBackoffConfigs = {},\n    private ngZone: NgZone\n  ) {\n    if (withCredentials) {\n      this.eventSourceInitDic = { withCredentials };\n    }\n    this.connect();\n  }\n\n  /**\n   * Checks if the connection to the SSE server is disconnected.\n   *\n   * @returns true if disconnected, false otherwise.\n   * @example\n   *  sse.isDisconnected;\n   *  // => Returns true if the connection to the SSE server is disconnected.\n   */\n  get isDisconnected(): boolean {\n    return (\n      NotInstanceOfType(this.eventSource, EventSource) ||\n      this.eventSource.readyState === EventSource.CLOSED\n    );\n  }\n\n  /**\n   * Returns the EventSource object.\n   *\n   * @returns the EventSource object.\n   * @example\n   *  sse.EventSource;\n   *  // => Returns the EventSource object.\n   */\n  get EventSource(): EventSource | undefined {\n    return this.eventSource;\n  }\n\n  /**\n   * Returns the Subject for the server-sent events.\n   *\n   * @returns the Subject for the server-sent events.\n   * @example\n   *  sse.EventSubject;\n   *  // => Returns the Subject for the server-sent events.\n   */\n  get EventSubject(): Subject>> {\n    return this.eventSubject;\n  }\n\n  /**\n   * Returns the Observable for the server-sent events.\n   *\n   * @returns the Observable for the server-sent events.\n   * @example\n   *  sse.Messages$;\n   *  // => Returns the Observable for the server-sent events.\n   */\n  get Messages$(): Observable>> {\n    return this.messages$;\n  }\n\n  /**\n   * Connects to the SSE server.\n   *\n   * @returns void\n   * @example\n   *  sse.connect();\n   *  // => Connects to the SSE server.\n   */\n  connect(): void {\n    this.eventSource = new EventSource(this.url, this.eventSourceInitDic);\n\n    this.eventSource.onmessage = (event: MessageEvent): void => {\n      this.ngZone.run((): void => {\n        this.eventSubject.next({\n          event,\n          data: JSON.parse(event.data) as M\n        });\n      });\n    };\n\n    this.eventSource.onerror = (): void => {\n      this.timeoutBackoff();\n    };\n\n    this.eventSource.onopen = (): void => {\n      this.timeoutBackoff(true);\n    };\n  }\n\n  /**\n   * Reconnects to the SSE server.\n   *\n   * @returns void\n   * @example\n   *  sse.reconnect();\n   *  // => Reconnects to the SSE server.\n   */\n  reconnect(): void {\n    this.disconnect();\n    this.connect();\n  }\n\n  /**\n   * Disconnects from the SSE server.\n   *\n   * @returns void\n   * @example\n   *  sse.disconnect();\n   *  // => Disconnects from the SSE server.\n   */\n  disconnect(): void {\n    this.ngZone.run((): void => {\n      if (\n        this.eventSource &&\n        this.eventSource.readyState !== EventSource.CLOSED\n      ) {\n        this.eventSource.close();\n      } else {\n        console.warn('EventSource is already closed.');\n      }\n    });\n  }\n\n  /**\n   * Listens to specific messages from the SSE server.\n   *\n   * @param operators - The operators to apply to the messages.\n   * @returns an Observable of the filtered messages.\n   * @example\n   *  sse.listen$();\n   *  // => An Observable of the server-sent events.\n   */\n  listen$(\n    ...operators: (\n      | OperatorFunction>, R>\n      | MonoTypeOperatorFunction>>\n      | MonoTypeOperatorFunction\n    )[]\n  ): Observable> | R> {\n    return this.Messages$.pipe(...(operators as []));\n  }\n\n  /**\n   * Picks specific messages from the SSE server.\n   *\n   * @param filterCallback - The filter function to apply to the messages.\n   * @param operators - The operators to apply to the filtered messages.\n   * @returns an Observable of the picked messages.\n   * @example\n   *  sse.pickMessage((data) => data.event.type === 'message');\n   *  // => An Observable of the picked messages.\n   */\n  pickMessage(\n    filterCallback: (data: ServerSentEvent>) => boolean,\n    ...operators: (\n      | OperatorFunction>, R>\n      | MonoTypeOperatorFunction>>\n      | MonoTypeOperatorFunction\n    )[]\n  ): Observable> | R> {\n    return this.Messages$.pipe(filter(filterCallback), ...(operators as []));\n  }\n\n  /**\n   * Picks and maps specific messages from the SSE server.\n   *\n   * @param filterCallback - The filter function to apply to the messages.\n   * @param mapCallback - The map function to apply to the filtered messages.\n   * @returns an Observable of the mapped messages.\n   * @example\n   *  sse.pickAndMapMessage((data) => data.event.type === 'message', (data) => data.data);\n   */\n  pickAndMapMessage(\n    filterCallback: (data: ServerSentEvent>) => boolean,\n    mapCallback: (data: ServerSentEvent>) => R\n  ): Observable {\n    return this.Messages$.pipe(filter(filterCallback), map(mapCallback));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscriptionWorker.html":{"url":"injectables/SubscriptionWorker.html","title":"injectable - SubscriptionWorker","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscriptionWorker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts\n        \n\n\n            \n                Description\n            \n            \n                SubscriptionWorker is a service class that manages subscriptions.\nIt provides methods to add, map, and unsubscribe from subscriptions.\nIt also provides methods to manage mapped subscriptions.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mappedSubs\n                            \n                            \n                                OfSubscriptionLikeType\n                            \n                            \n                                    Private\n                                subs\n                            \n                            \n                                UnmanagedSubscription\n                            \n                            \n                                UnmappedSubscription\n                            \n                            \n                                    Private\n                                Unsubscribe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                map\n                            \n                            \n                                unsubscribe\n                            \n                            \n                                unsubscribeAllMapped\n                            \n                            \n                                unsubscribeMapped\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    subscriptions\n                                \n                                \n                                    mappedSubscriptions\n                                \n                                \n                                    sink\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(...subs: SubscriptionLike[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts:65\n                        \n                    \n\n\n            \n                \n                        Add subscriptions.\nExample : subscriptionWorker.add(sub1, sub2);\n // => Adds the subscriptions to the subs array.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                subs\n                                            \n                                                        SubscriptionLike[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe subscriptions to be added.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        map\n                        \n                    \n                \n            \n            \n                \nmap(key: string, sub: SubscriptionLike)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts:101\n                        \n                    \n\n\n            \n                \n                        Map a subscription.\nExample : subscriptionWorker.map('key', sub);\n // => Maps the subscription to the mappedSubs map.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key to map the subscription.\n\n\n                                            \n                                        \n                                        \n                                                sub\n                                            \n                                                        SubscriptionLike\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe subscription to be mapped.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts:84\n                        \n                    \n\n\n            \n                \n                        Unsubscribe from all subscriptions.\nExample : subscriptionWorker.unsubscribe();\n // => Unsubscribes from all subscriptions.\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribeAllMapped\n                        \n                    \n                \n            \n            \n                \nunsubscribeAllMapped()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts:132\n                        \n                    \n\n\n            \n                \n                        Unsubscribe from all mapped subscriptions.\nExample : subscriptionWorker.unsubscribeAllMapped();\n // => Unsubscribes from all mapped subscriptions.\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribeMapped\n                        \n                    \n                \n            \n            \n                \nunsubscribeMapped(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts:116\n                        \n                    \n\n\n            \n                \n                        Unsubscribe from a mapped subscription.\nExample : subscriptionWorker.unsubscribeMapped('key');\n // => Unsubscribes from the mapped subscription.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key of the mapped subscription.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mappedSubs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OfSubscriptionLikeType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts:162\n                        \n                    \n\n            \n                \n                    Checks if the provided subscription is of type SubscriptionLike.\nExample : subscriptionWorker.OfSubscriptionLikeType(sub);\n // => Returns true if the subscription is of type SubscriptionLike.\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    sub\n                                                    \n                                                            \nThe subscription to be checked.\n\n\n                                                    \n                                            \n                                    \n                                \n                                Example :\n                                    \n                                         subscriptionWorker.OfSubscriptionLikeType(sub);\n // => Returns true if the subscription is of type SubscriptionLike.\n\n                                    \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UnmanagedSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts:149\n                        \n                    \n\n            \n                \n                    Checks if the provided subscription is not managed.\nA subscription is considered not managed if it is of type SubscriptionLike and is not included in the subs set.\nExample : subscriptionWorker.UnmanagedSubscription(sub);\n // => Returns true if the subscription is not managed.\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    sub\n                                                    \n                                                            \nThe subscription to be checked.\n\n\n                                                    \n                                            \n                                    \n                                \n                                Example :\n                                    \n                                         subscriptionWorker.UnmanagedSubscription(sub);\n // => Returns true if the subscription is not managed.\n\n                                    \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UnmappedSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts:179\n                        \n                    \n\n            \n                \n                    Checks if the provided subscription is not mapped.\nA subscription is considered not mapped if it is of type SubscriptionLike and is not included in the mappedSubs map.\nExample : subscriptionWorker.UnmappedSubscription(sub);\n // => Returns true if the subscription is not mapped.\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    sub\n                                                    \n                                                            \nThe subscription to be checked.\n\n\n                                                    \n                                            \n                                    \n                                \n                                Example :\n                                    \n                                         subscriptionWorker.UnmappedSubscription(sub);\n // => Returns true if the subscription is not mapped.\n\n                                    \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        Unsubscribe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts:199\n                        \n                    \n\n            \n                \n                    Unsubscribe from a subscription.\nExample : subscriptionWorkerUnsubscribe(sub);\n // => Unsubscribes from the subscription.\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    sub\n                                                    \n                                                            \nThe subscription to be unsubscribed.\n\n\n                                                    \n                                            \n                                    \n                                \n                                Example :\n                                    \n                                         subscriptionWorkerUnsubscribe(sub);\n // => Unsubscribes from the subscription.\n\n                                    \n                        \n                    \n                \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        subscriptions\n                    \n                \n\n                \n                    \n                        getsubscriptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts:26\n                                \n                            \n                    \n                        \n                                Get subscriptions.\nExample : subscriptionWorker.subscriptions;\n // => Returns the subscriptions.\n\n                                \n                                        Example :\n                                            \n                                                 subscriptionWorker.subscriptions;\n // =&gt; Returns the subscriptions.\n                                            \n                                \n                                \n                                    Returns :     IterableIterator\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mappedSubscriptions\n                    \n                \n\n                \n                    \n                        getmappedSubscriptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts:38\n                                \n                            \n                    \n                        \n                                Get mapped subscriptions.\nExample : subscriptionWorker.mappedSubscriptions;\n // => Returns the mapped subscriptions.\n\n                                \n                                        Example :\n                                            \n                                                 subscriptionWorker.mappedSubscriptions;\n // =&gt; Returns the mapped subscriptions.\n                                            \n                                \n                                \n                                    Returns :     Map\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sink\n                    \n                \n\n\n                \n                    \n                        setsink(sub: SubscriptionLike)\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts:50\n                                \n                            \n                    \n                        \n                                Set a subscription.\nExample : subscriptionWorker.sink = sub;\n // => Sets the subscription to the subs array.\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            sub\n                                                    \n                                                            \n                                                                        SubscriptionLike\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe subscription to be set.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                        Example :\n                                            \n                                                 subscriptionWorker.sink = sub;\n // =&gt; Sets the subscription to the subs array.\n                                            \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { SubscriptionLike } from 'rxjs';\nimport { NotEmptyArray, OfObjectType } from '@24vlh/ts-assert';\nimport { Injectable } from '@angular/core';\n\n/**\n * `SubscriptionWorker` is a service class that manages subscriptions.\n * It provides methods to add, map, and unsubscribe from subscriptions.\n * It also provides methods to manage mapped subscriptions.\n */\n@Injectable()\nexport class SubscriptionWorker {\n  private subs: Set = new Set();\n  private mappedSubs: Map = new Map();\n\n  /**\n   * Get subscriptions.\n   *\n   * @returns {IterableIterator} - The subscriptions.\n   * @example\n   *  subscriptionWorker.subscriptions;\n   *  // => Returns the subscriptions.\n   */\n  get subscriptions(): IterableIterator {\n    return this.subs.values();\n  }\n\n  /**\n   * Get mapped subscriptions.\n   *\n   * @returns {Map} - The mapped subscriptions.\n   * @example\n   *  subscriptionWorker.mappedSubscriptions;\n   *  // => Returns the mapped subscriptions.\n   */\n  get mappedSubscriptions(): Map {\n    return this.mappedSubs;\n  }\n\n  /**\n   * Set a subscription.\n   *\n   * @param {SubscriptionLike} sub - The subscription to be set.\n   * @example\n   *  subscriptionWorker.sink = sub;\n   *  // => Sets the subscription to the subs array.\n   */\n  set sink(sub: SubscriptionLike) {\n    if (this.UnmanagedSubscription(sub)) {\n      this.subs.add(sub);\n    }\n  }\n\n  /**\n   * Add subscriptions.\n   *\n   * @param {...SubscriptionLike[]} subs - The subscriptions to be added.\n   * @returns {void}\n   * @example\n   *  subscriptionWorker.add(sub1, sub2);\n   *  // => Adds the subscriptions to the subs array.\n   */\n  add(...subs: SubscriptionLike[]): void {\n    if (NotEmptyArray(subs)) {\n      this.subs = new Set([\n        ...this.subs,\n        ...subs.filter((sub: SubscriptionLike) => {\n          return this.UnmanagedSubscription(sub);\n        })\n      ]);\n    }\n  }\n\n  /**\n   * Unsubscribe from all subscriptions.\n   *\n   * @returns {void}\n   * @example\n   *  subscriptionWorker.unsubscribe();\n   *  // => Unsubscribes from all subscriptions.\n   */\n  unsubscribe(): void {\n    this.subs.forEach((sub: SubscriptionLike): void => {\n      this.Unsubscribe(sub);\n    });\n    this.subs.clear();\n  }\n\n  /**\n   * Map a subscription.\n   *\n   * @param {string} key - The key to map the subscription.\n   * @param {SubscriptionLike} sub - The subscription to be mapped.\n   * @returns {void}\n   * @example\n   *  subscriptionWorker.map('key', sub);\n   *  // => Maps the subscription to the mappedSubs map.\n   */\n  map(key: string, sub: SubscriptionLike): void {\n    if (this.UnmappedSubscription(sub)) {\n      this.mappedSubs.set(key, sub);\n    }\n  }\n\n  /**\n   * Unsubscribe from a mapped subscription.\n   *\n   * @param {string} key - The key of the mapped subscription.\n   * @returns {void}\n   * @example\n   *  subscriptionWorker.unsubscribeMapped('key');\n   *  // => Unsubscribes from the mapped subscription.\n   */\n  unsubscribeMapped(key: string): void {\n    const sub: SubscriptionLike | undefined = this.mappedSubs.get(key);\n    if (sub) {\n      this.Unsubscribe(sub);\n      this.mappedSubs.delete(key);\n    }\n  }\n\n  /**\n   * Unsubscribe from all mapped subscriptions.\n   *\n   * @returns {void}\n   * @example\n   *  subscriptionWorker.unsubscribeAllMapped();\n   *  // => Unsubscribes from all mapped subscriptions.\n   */\n  unsubscribeAllMapped(): void {\n    this.mappedSubs.forEach((sub: SubscriptionLike): void => {\n      this.Unsubscribe(sub);\n    });\n    this.mappedSubs.clear();\n  }\n\n  /**\n   * Checks if the provided subscription is not managed.\n   * A subscription is considered not managed if it is of type SubscriptionLike and is not included in the subs set.\n   *\n   * @param {unknown} sub - The subscription to be checked.\n   * @returns {sub is SubscriptionLike} - Returns true if the subscription is not managed, false otherwise.\n   * @example\n   *  subscriptionWorker.UnmanagedSubscription(sub);\n   *  // => Returns true if the subscription is not managed.\n   */\n  UnmanagedSubscription = (sub: unknown): sub is SubscriptionLike => {\n    return this.OfSubscriptionLikeType(sub) && !this.subs.has(sub);\n  };\n\n  /**\n   * Checks if the provided subscription is of type SubscriptionLike.\n   *\n   * @param {unknown} sub - The subscription to be checked.\n   * @returns {sub is SubscriptionLike} - Returns true if the subscription is of type SubscriptionLike, false otherwise.\n   * @example\n   *  subscriptionWorker.OfSubscriptionLikeType(sub);\n   *  // => Returns true if the subscription is of type SubscriptionLike.\n   */\n  OfSubscriptionLikeType = (sub: unknown): sub is SubscriptionLike => {\n    return (\n      OfObjectType(sub) &&\n      typeof sub.unsubscribe === 'function'\n    );\n  };\n\n  /**\n   * Checks if the provided subscription is not mapped.\n   * A subscription is considered not mapped if it is of type SubscriptionLike and is not included in the mappedSubs map.\n   *\n   * @param {unknown} sub - The subscription to be checked.\n   * @returns {boolean} - Returns true if the subscription is not mapped, false otherwise.\n   * @example\n   *  subscriptionWorker.UnmappedSubscription(sub);\n   *  // => Returns true if the subscription is not mapped.\n   */\n  UnmappedSubscription = (sub: unknown): boolean => {\n    return (\n      this.OfSubscriptionLikeType(sub) &&\n      Array.from(this.mappedSubs.values()).every(\n        (mappedSub: SubscriptionLike): boolean => {\n          return mappedSub !== sub;\n        }\n      )\n    );\n  };\n\n  /**\n   * Unsubscribe from a subscription.\n   *\n   * @param {SubscriptionLike} sub - The subscription to be unsubscribed.\n   * @returns {void}\n   * @example\n   *  subscriptionWorkerUnsubscribe(sub);\n   *  // => Unsubscribes from the subscription.\n   */\n  private Unsubscribe = (sub: SubscriptionLike): void => {\n    try {\n      sub.unsubscribe();\n    } catch (error: unknown) {\n      console.error(`Failed to unsubscribe: ${String(error)}`);\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeoutBackoffConfigs.html":{"url":"interfaces/TimeoutBackoffConfigs.html","title":"interface - TimeoutBackoffConfigs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimeoutBackoffConfigs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/helpers/timeout-backoff/timeout-backoff.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Timeout backoff configurations\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            initialDelay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxDelay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxRetries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initialDelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxRetries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxRetries:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TimeoutBackoffConfigs {\n  maxRetries?: number;\n  initialDelay?: number;\n  maxDelay?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WebsocketExponentialBackoffOptions.html":{"url":"interfaces/WebsocketExponentialBackoffOptions.html","title":"interface - WebsocketExponentialBackoffOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WebsocketExponentialBackoffOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/workers/websocket/websocket.type.ts\n        \n\n\n            \n                Description\n            \n            \n                WebsocketExponentialBackoffOptions is an interface that defines the configuration options for\nan exponential backoff strategy in a WebSocket connection.\nExponential backoff is a strategy used in network communication for retrying failed requests,\nwhere the delay between retry attempts exponentially increases with each failed attempt, up to a maximum delay.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disableAndUseConstantDelayOf\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            initialDelay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxDelay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxRetryAttempts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableAndUseConstantDelayOf\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableAndUseConstantDelayOf:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialDelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxDelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxRetryAttempts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxRetryAttempts:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type WebsocketEventObserver = (event: Event | CloseEvent) => void;\n\n/**\n * `WebsocketExponentialBackoffOptions` is an interface that defines the configuration options for\n * an exponential backoff strategy in a WebSocket connection.\n *\n * Exponential backoff is a strategy used in network communication for retrying failed requests,\n * where the delay between retry attempts exponentially increases with each failed attempt, up to a maximum delay.\n *\n * @property {number} maxRetryAttempts - The maximum number of retry attempts. If not specified, the default is `Infinity`.\n * @property {number} initialDelay - The initial delay in milliseconds before the first retry attempt. If not specified, the default is `1000`.\n * @property {number} maxDelay - The maximum delay in milliseconds between retry attempts. If not specified, the default is `30000`.\n * @property {number} disableAndUseConstantDelayOf - If specified, disables the exponential backoff strategy and uses a constant delay of this value in milliseconds between retry attempts.\n */\nexport interface WebsocketExponentialBackoffOptions {\n  maxRetryAttempts?: number;\n  initialDelay?: number;\n  maxDelay?: number;\n  disableAndUseConstantDelayOf?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebsocketWorker.html":{"url":"injectables/WebsocketWorker.html","title":"injectable - WebsocketWorker","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WebsocketWorker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing a Websocket worker.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                messages$\n                            \n                            \n                                    Private\n                                messagesSubject\n                            \n                            \n                                    Private\n                                websocketConnection\n                            \n                            \n                                    Private\n                                websocketSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                disconnect\n                            \n                            \n                                listen\n                            \n                            \n                                pickAndMapMessage\n                            \n                            \n                                pickMessage\n                            \n                            \n                                reconnect\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    WebsocketConnection\n                                \n                                \n                                    WebsocketSubscription\n                                \n                                \n                                    MessagesSubject\n                                \n                                \n                                    isDisconnected\n                                \n                                \n                                    Messages$\n                                \n                                \n                                    UrlOrWebSocketSubjectConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(urlOrWebSocketSubjectConfig: string | WebSocketSubjectConfig, exponentialBackoffOptions: WebsocketExponentialBackoffOptions | null, openEventObserver: WebsocketEventObserver | null, closeEventObserver: WebsocketEventObserver | null)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:39\n                            \n                        \n\n                \n                    \n                            Create a WebsocketWorker.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        urlOrWebSocketSubjectConfig\n                                                  \n                                                        \n                                                                    string | WebSocketSubjectConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe URL or WebSocketSubjectConfig to use for the websocket connection.\n\n\n                                                        \n                                                \n                                                \n                                                        exponentialBackoffOptions\n                                                  \n                                                        \n                                                                        WebsocketExponentialBackoffOptions | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe options for exponential backoff.\n\n\n                                                        \n                                                \n                                                \n                                                        openEventObserver\n                                                  \n                                                        \n                                                                        WebsocketEventObserver | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe observer for open events.\n\n\n                                                        \n                                                \n                                                \n                                                        closeEventObserver\n                                                  \n                                                        \n                                                                        WebsocketEventObserver | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe observer for close events.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:261\n                        \n                    \n\n\n            \n                \n                        Connect to the websocket.\nExample : websocketWorker.connect();\n // => Connects to the websocket.\n // => The websocket connection is established.\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:295\n                        \n                    \n\n\n            \n                \n                        Disconnect from the websocket.\nExample : websocketWorker.disconnect();\n // => Disconnects from the websocket.\n // => The websocket connection is closed.\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten(...operators: (OperatorFunction | MonoTypeOperatorFunction | MonoTypeOperatorFunction)[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:198\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    R\n                            \n                        \n                    \n\n            \n                \n                        Listen for messages over the websocket connection.\nExample : websocketWorker.listen();\n // => An Observable of the messages.\n // => The Observable is used to listen for messages over the websocket connection.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                operators\n                                            \n                                                        (OperatorFunction | MonoTypeOperatorFunction | MonoTypeOperatorFunction)[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe operators to use when listening for messages.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable of the messages.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pickAndMapMessage\n                        \n                    \n                \n            \n            \n                \npickAndMapMessage(filterCallback: (data: M) => void, mapCallback: (data: M) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:245\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    R\n                            \n                        \n                    \n\n            \n                \n                        Pick and map a message from the websocket connection.\nExample : websocketWorker.pickAndMapMessage((data) => data.type === 'message', (data) => data.data);\n // => An Observable of the mapped message.\n // => The Observable is used to pick and map a message from the websocket connection.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filterCallback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback to use when picking a message.\n\n\n                                            \n                                        \n                                        \n                                                mapCallback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback to use when mapping the picked message.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable of the mapped message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pickMessage\n                        \n                    \n                \n            \n            \n                \npickMessage(filterCallback: (data: M) => void, ...operators: (OperatorFunction | MonoTypeOperatorFunction | MonoTypeOperatorFunction)[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:221\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    R\n                            \n                        \n                    \n\n            \n                \n                        Pick a message from the websocket connection.\nExample : websocketWorker.pickMessage((data) => data.type === 'message');\n // => An Observable of the picked message.\n // => The Observable is used to pick a message from the websocket connection.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filterCallback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback to use when picking a message.\n\n\n                                            \n                                        \n                                        \n                                                operators\n                                            \n                                                        (OperatorFunction | MonoTypeOperatorFunction | MonoTypeOperatorFunction)[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe operators to use when picking a message.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable of the picked message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reconnect\n                        \n                    \n                \n            \n            \n                \nreconnect()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:324\n                        \n                    \n\n\n            \n                \n                        Reconnect to the websocket.\nExample : websocketWorker.reconnect();\n // => Reconnects to the websocket.\n // => The websocket connection is re-established.\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(data: M)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:182\n                        \n                    \n\n\n            \n                \n                        Send a message over the websocket connection.\nExample : websocketWorker.send({ message: 'Hello, World!' });\n // => Sends the message over the websocket connection.\n // => The message is sent to the server.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        M\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message to send.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messages$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.messagesSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messagesSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        websocketConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebSocketSubject\n\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        websocketSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:37\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        WebsocketConnection\n                    \n                \n\n                \n                    \n                        getWebsocketConnection()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:75\n                                \n                            \n                    \n                        \n                                Get the WebSocketSubject for the websocket connection.\nExample : websocketWorker.WebsocketConnection;\n // => Returns the WebSocketSubject for the websocket connection.\n // => The WebSocketSubject is used to send messages over the websocket connection.\n\n                                \n                                        Example :\n                                            \n                                                 websocketWorker.WebsocketConnection;\n // =&gt; Returns the WebSocketSubject for the websocket connection.\n // =&gt; The WebSocketSubject is used to send messages over the websocket connection.\n                                            \n                                \n                                \n                                    Returns :     WebSocketSubject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        WebsocketSubscription\n                    \n                \n\n                \n                    \n                        getWebsocketSubscription()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:88\n                                \n                            \n                    \n                        \n                                Get the Subscription for the websocket connection.\nExample : websocketWorker.WebsocketSubscription;\n // => Returns the Subscription for the websocket connection.\n // => The Subscription is used to unsubscribe from the websocket connection.\n\n                                \n                                        Example :\n                                            \n                                                 websocketWorker.WebsocketSubscription;\n // =&gt; Returns the Subscription for the websocket connection.\n // =&gt; The Subscription is used to unsubscribe from the websocket connection.\n                                            \n                                \n                                \n                                    Returns :     Subscription | null\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        MessagesSubject\n                    \n                \n\n                \n                    \n                        getMessagesSubject()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:102\n                                \n                            \n                    \n                        \n                                Get the Subject for the messages.\nExample : websocketWorker.MessagesSubject;\n // => Returns the Subject for the messages.\n // => The Subject is used to send messages over the websocket connection.\n\n                                \n                                        Example :\n                                            \n                                                 websocketWorker.MessagesSubject;\n // =&gt; Returns the Subject for the messages.\n // =&gt; The Subject is used to send messages over the websocket connection.\n                                            \n                                \n                                \n                                    Returns :     Subject\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDisconnected\n                    \n                \n\n                \n                    \n                        getisDisconnected()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:114\n                                \n                            \n                    \n                        \n                                Check if the websocket connection is disconnected.\nExample : websocketWorker.isDisconnected;\n // => Returns true if the websocket connection is disconnected.\n\n                                \n                                        Example :\n                                            \n                                                 websocketWorker.isDisconnected;\n // =&gt; Returns true if the websocket connection is disconnected.\n                                            \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Messages$\n                    \n                \n\n                \n                    \n                        getMessages$()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:124\n                                \n                            \n                    \n                        \n                                Get the Observable for the messages.\n\n\n                                \n                                \n                                \n                                    Returns :     Observable\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        UrlOrWebSocketSubjectConfig\n                    \n                \n\n                \n                    \n                        getUrlOrWebSocketSubjectConfig()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts:139\n                                \n                            \n                    \n                        \n                                Get the URL or WebSocketSubjectConfig for the websocket connection.\nExample : websocketWorker.UrlOrWebSocketSubjectConfig;\n // => Returns the URL or WebSocketSubjectConfig for the websocket connection.\n // => The URL or WebSocketSubjectConfig is used to configure the websocket connection.\n\n                                \n                                        Example :\n                                            \n                                                 websocketWorker.UrlOrWebSocketSubjectConfig;\n // =&gt; Returns the URL or WebSocketSubjectConfig for the websocket connection.\n // =&gt; The URL or WebSocketSubjectConfig is used to configure the websocket connection.\n                                            \n                                \n                                \n                                    Returns :     string | WebSocketSubjectConfig\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  WebSocketSubject,\n  WebSocketSubjectConfig\n} from 'rxjs/internal/observable/dom/WebSocketSubject';\nimport {\n  WebsocketEventObserver,\n  WebsocketExponentialBackoffOptions\n} from './websocket.type';\nimport {\n  WEBSOCKET_CLOSE_HANDLER,\n  WEBSOCKET_EXPONENTIAL_BACKOFF_OPTIONS,\n  WEBSOCKET_OPEN_HANDLER,\n  WEBSOCKET_URL_OR_OPTIONS\n} from './websocket.injection-token';\nimport {\n  filter,\n  map,\n  MonoTypeOperatorFunction,\n  Observable,\n  OperatorFunction,\n  Subject,\n  Subscription\n} from 'rxjs';\nimport { webSocket } from 'rxjs/webSocket';\nimport { InstanceOfType, OfObjectType, OfStringType } from '@24vlh/ts-assert';\nimport { ExponentiallyBackoff } from '../../helpers';\n\n/**\n * Class representing a Websocket worker.\n *\n * @template M - The type of messages that the websocket will handle.\n */\n@Injectable()\nexport class WebsocketWorker {\n  private websocketConnection!: WebSocketSubject;\n  private websocketSubscription: Subscription | null = null;\n  private messagesSubject: Subject = new Subject();\n  private messages$: Observable = this.messagesSubject.asObservable();\n\n  /**\n   * Create a WebsocketWorker.\n   *\n   * @param {string | WebSocketSubjectConfig} urlOrWebSocketSubjectConfig - The URL or WebSocketSubjectConfig to use for the websocket connection.\n   * @param {WebsocketExponentialBackoffOptions | null} exponentialBackoffOptions - The options for exponential backoff.\n   * @param {WebsocketEventObserver | null} openEventObserver - The observer for open events.\n   * @param {WebsocketEventObserver | null} closeEventObserver - The observer for close events.\n   */\n  constructor(\n    @Inject(WEBSOCKET_URL_OR_OPTIONS)\n    private urlOrWebSocketSubjectConfig: string | WebSocketSubjectConfig,\n    @Inject(WEBSOCKET_EXPONENTIAL_BACKOFF_OPTIONS)\n    @Optional()\n    private exponentialBackoffOptions: WebsocketExponentialBackoffOptions | null = null,\n    @Inject(WEBSOCKET_OPEN_HANDLER)\n    @Optional()\n    private openEventObserver: WebsocketEventObserver | null = null,\n    @Inject(WEBSOCKET_CLOSE_HANDLER)\n    @Optional()\n    private closeEventObserver: WebsocketEventObserver | null = null\n  ) {\n    this.connect();\n  }\n\n  /**\n   * Get the WebSocketSubject for the websocket connection.\n   *\n   * @template M - The type of the message.\n   * @return {WebSocketSubject} The WebSocketSubject for the websocket connection.\n   * @example\n   *  websocketWorker.WebsocketConnection;\n   *  // => Returns the WebSocketSubject for the websocket connection.\n   *  // => The WebSocketSubject is used to send messages over the websocket connection.\n   */\n  get WebsocketConnection(): WebSocketSubject {\n    return this.websocketConnection;\n  }\n\n  /**\n   * Get the Subscription for the websocket connection.\n   *\n   * @return {Subscription | null} The Subscription for the websocket connection.\n   * @example\n   *  websocketWorker.WebsocketSubscription;\n   *  // => Returns the Subscription for the websocket connection.\n   *  // => The Subscription is used to unsubscribe from the websocket connection.\n   */\n  get WebsocketSubscription(): Subscription | null {\n    return this.websocketSubscription;\n  }\n\n  /**\n   * Get the Subject for the messages.\n   *\n   * @template M - The type of the message.\n   * @return {Subject} The Subject for the messages.\n   * @example\n   *  websocketWorker.MessagesSubject;\n   *  // => Returns the Subject for the messages.\n   *  // => The Subject is used to send messages over the websocket connection.\n   */\n  get MessagesSubject(): Subject {\n    return this.messagesSubject;\n  }\n\n  /**\n   * Check if the websocket connection is disconnected.\n   *\n   * @return {boolean} True if the websocket connection is disconnected, false otherwise.\n   * @example\n   *  websocketWorker.isDisconnected;\n   *  // => Returns true if the websocket connection is disconnected.\n   */\n  get isDisconnected(): boolean {\n    return this.WebsocketConnection.closed;\n  }\n\n  /**\n   * Get the Observable for the messages.\n   *\n   * @template M - The type of the message.\n   * @return {Observable} The Observable for the messages.\n   */\n  get Messages$(): Observable {\n    return this.messages$;\n  }\n\n  /**\n   * Get the URL or WebSocketSubjectConfig for the websocket connection.\n   *\n   * @template M - The type of the message.\n   * @return {string | WebSocketSubjectConfig} The URL or WebSocketSubjectConfig for the websocket connection.\n   * @throws {Error} If the WebSocketSubjectConfig is not an object.\n   * @example\n   *  websocketWorker.UrlOrWebSocketSubjectConfig;\n   *  // => Returns the URL or WebSocketSubjectConfig for the websocket connection.\n   *  // => The URL or WebSocketSubjectConfig is used to configure the websocket connection.\n   */\n  get UrlOrWebSocketSubjectConfig(): string | WebSocketSubjectConfig {\n    if (OfStringType(this.urlOrWebSocketSubjectConfig)) {\n      return this.urlOrWebSocketSubjectConfig;\n    }\n\n    if (!OfObjectType(this.urlOrWebSocketSubjectConfig)) {\n      throw new Error('Invalid WebSocketSubjectConfig. Object expected.');\n    }\n\n    const closeObserver = this.urlOrWebSocketSubjectConfig.closeObserver;\n\n    const openObserver = this.urlOrWebSocketSubjectConfig.openObserver;\n\n    this.urlOrWebSocketSubjectConfig = {\n      ...this.urlOrWebSocketSubjectConfig,\n      closeObserver: {\n        next: (event: CloseEvent): void => {\n          this.closeEventObserver?.(event);\n          closeObserver?.next?.(event);\n        }\n      },\n      openObserver: {\n        next: (event: Event): void => {\n          this.openEventObserver?.(event);\n          openObserver?.next?.(event);\n        }\n      }\n    };\n\n    return this.urlOrWebSocketSubjectConfig;\n  }\n\n  /**\n   * Send a message over the websocket connection.\n   *\n   * @template M - The type of the message.\n   * @param {M} data - The message to send.\n   * @return {void}\n   * @example\n   *  websocketWorker.send({ message: 'Hello, World!' });\n   *  // => Sends the message over the websocket connection.\n   *  // => The message is sent to the server.\n   */\n  send(data: M): void {\n    this.WebsocketConnection.next(data);\n  }\n\n  /**\n   * Listen for messages over the websocket connection.\n   *\n   * @template M - The type of the message.\n   * @template R - The type of the message to listen for.\n   * @param {...(OperatorFunction | MonoTypeOperatorFunction | MonoTypeOperatorFunction)[]} operators - The operators to use when listening for messages.\n   * @return {Observable} An Observable of the messages.\n   * @example\n   *  websocketWorker.listen();\n   *  // => An Observable of the messages.\n   *  // => The Observable is used to listen for messages over the websocket connection.\n   */\n  listen(\n    ...operators: (\n      | OperatorFunction\n      | MonoTypeOperatorFunction\n      | MonoTypeOperatorFunction\n    )[]\n  ): Observable {\n    return this.Messages$.pipe(...(operators as []));\n  }\n\n  /**\n   * Pick a message from the websocket connection.\n   *\n   * @template M - The type of the message.\n   * @template R - The type of the picked message.\n   * @param {(data: M) => boolean} filterCallback - The callback to use when picking a message.\n   * @param {...(OperatorFunction | MonoTypeOperatorFunction | MonoTypeOperatorFunction)[]} operators - The operators to use when picking a message.\n   * @return {Observable} An Observable of the picked message.\n   * @example\n   *  websocketWorker.pickMessage((data) => data.type === 'message');\n   *  // => An Observable of the picked message.\n   *  // => The Observable is used to pick a message from the websocket connection.\n   */\n  pickMessage(\n    filterCallback: (data: M) => boolean,\n    ...operators: (\n      | OperatorFunction\n      | MonoTypeOperatorFunction\n      | MonoTypeOperatorFunction\n    )[]\n  ): Observable {\n    return this.Messages$.pipe(filter(filterCallback), ...(operators as []));\n  }\n\n  /**\n   * Pick and map a message from the websocket connection.\n   *\n   * @template M - The type of the message.\n   * @template R - The type of the mapped message.\n   * @param {(data: M) => boolean} filterCallback - The callback to use when picking a message.\n   * @param {(data: M) => R} mapCallback - The callback to use when mapping the picked message.\n   * @return {Observable} An Observable of the mapped message.\n   * @example\n   *  websocketWorker.pickAndMapMessage((data) => data.type === 'message', (data) => data.data);\n   *  // => An Observable of the mapped message.\n   *  // => The Observable is used to pick and map a message from the websocket connection.\n   */\n  pickAndMapMessage(\n    filterCallback: (data: M) => boolean,\n    mapCallback: (data: M) => R\n  ): Observable {\n    return this.Messages$.pipe(filter(filterCallback), map(mapCallback));\n  }\n\n  /**\n   * Connect to the websocket.\n   *\n   * @return {void}\n   * @example\n   *  websocketWorker.connect();\n   *  // => Connects to the websocket.\n   *  // => The websocket connection is established.\n   */\n  connect(): void {\n    const {\n      maxRetryAttempts,\n      initialDelay,\n      maxDelay,\n      disableAndUseConstantDelayOf\n    } = this.exponentialBackoffOptions ?? {};\n\n    this.websocketConnection = webSocket(this.UrlOrWebSocketSubjectConfig);\n    this.websocketSubscription = this.websocketConnection\n      .pipe(\n        ExponentiallyBackoff(\n          ...[\n            maxRetryAttempts,\n            initialDelay,\n            maxDelay,\n            disableAndUseConstantDelayOf\n          ]\n        )\n      )\n      .subscribe((data: M): void => {\n        this.MessagesSubject.next(data);\n      });\n  }\n\n  /**\n   * Disconnect from the websocket.\n   *\n   * @return {void}\n   * @example\n   *  websocketWorker.disconnect();\n   *  // => Disconnects from the websocket.\n   *  // => The websocket connection is closed.\n   */\n  disconnect(): void {\n    if (InstanceOfType(this.WebsocketSubscription, Subscription)) {\n      this.WebsocketSubscription.unsubscribe();\n      this.websocketSubscription = null;\n    } else {\n      console.warn(\n        'WebSocket connection already unsubscribed or not subscribed.'\n      );\n    }\n\n    if (\n      InstanceOfType(this.WebsocketConnection, WebSocketSubject) &&\n      !this.WebsocketConnection.closed\n    ) {\n      this.WebsocketConnection.unsubscribe();\n    } else {\n      console.warn('WebSocket connection already closed.');\n    }\n  }\n\n  /**\n   * Reconnect to the websocket.\n   *\n   * @return {void}\n   * @example\n   *  websocketWorker.reconnect();\n   *  // => Reconnects to the websocket.\n   *  // => The websocket connection is re-established.\n   */\n  reconnect(): void {\n    this.disconnect();\n    this.connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/angular-tools/src/lib/directives/intersection-observer/intersection-observer.directive.ts\n            \n            directive\n            IntersectionObserverDirective\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/helpers/exponentially-backoff/exponentially-backoff.ts\n            \n            function\n            ExponentiallyBackoff\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/helpers/http/http-submit.interface.ts\n            \n            interface\n            HttpSubmitConfig\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/helpers/http/http-submit.ts\n            \n            variable\n            HttpRequestFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/helpers/http/http-submit.ts\n            \n            variable\n            HttpSubmitFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/helpers/timeout-backoff/timeout-backoff.interface.ts\n            \n            interface\n            TimeoutBackoffConfigs\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/helpers/timeout-backoff/timeout-backoff.ts\n            \n            function\n            TimeoutBackoff\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/event/custom-event.api.ts\n            \n            class\n            CustomEventApi\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/event/custom-event.helper.ts\n            \n            variable\n            DispatchCustomEvent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/event/custom-event.helper.ts\n            \n            variable\n            RegisterToCustomEvent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/event/custom-event.injection-token.ts\n            \n            variable\n            CUSTOM_EVENT_STREAM_REPLAY_SUBJECT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/event/custom-event.injection-token.ts\n            \n            variable\n            CUSTOM_EVENT_TYPE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/event/custom-event.injection-token.ts\n            \n            variable\n            CUSTOM_EVENT_WINDOW_OBJECT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/event/custom-event.interface.ts\n            \n            interface\n            CustomEventProviderFactoryConfigs\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/event/custom-event.provider.ts\n            \n            variable\n            CUSTOM_EVENT_PROVIDER_FACTORY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/event/custom-event.worker.ts\n            \n            injectable\n            CustomEventWorker\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/polling/polling.helper.ts\n            \n            variable\n            BootstrapPollingSession\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/polling/polling.helper.ts\n            \n            variable\n            PollFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/polling/polling.helper.ts\n            \n            variable\n            StartPolling\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/polling/polling.provider.ts\n            \n            variable\n            POLLING_WORKER_PROVIDER_FACTORY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/polling/polling.type.ts\n            \n            interface\n            PollingConfigs\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/polling/polling.type.ts\n            \n            interface\n            PollingHttpOptions\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/polling/polling.type.ts\n            \n            interface\n            PollingManager\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/polling/polling.worker.ts\n            \n            injectable\n            PollingWorker\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.injection-token.ts\n            \n            variable\n            SERVER_SENT_EVENT_TIMEOUT_BACKOFF_CONFIGS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.injection-token.ts\n            \n            variable\n            SERVER_SENT_EVENT_URL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.injection-token.ts\n            \n            variable\n            SERVER_SENT_EVENT_WITH_CREDENTIALS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.interface.ts\n            \n            interface\n            ServerSentEvent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.provider.ts\n            \n            variable\n            SERVER_EVENT_SENT_PROVIDER_FACTORY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.worker.ts\n            \n            injectable\n            ServerSentEventWorker\n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/store/store.helper.ts\n            \n            variable\n            Get\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/store/store.helper.ts\n            \n            variable\n            GetIn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/store/store.helper.ts\n            \n            variable\n            Select$\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/store/store.helper.ts\n            \n            variable\n            SelectIn$\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/store/store.injection-token.ts\n            \n            variable\n            STORE_WORKER_INITIAL_STATE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/store/store.provider.ts\n            \n            variable\n            STORE_PROVIDER_FACTORY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/store/store.worker.ts\n            \n            injectable\n            StoreWorker\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/subscription/subscription.provider.ts\n            \n            variable\n            SUBSCRIPTION_WORKER_PROVIDER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/subscription/subscription.worker.ts\n            \n            injectable\n            SubscriptionWorker\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/websocket/websocket.injection-token.ts\n            \n            variable\n            WEBSOCKET_CLOSE_HANDLER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/websocket/websocket.injection-token.ts\n            \n            variable\n            WEBSOCKET_EXPONENTIAL_BACKOFF_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/websocket/websocket.injection-token.ts\n            \n            variable\n            WEBSOCKET_OPEN_HANDLER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/websocket/websocket.injection-token.ts\n            \n            variable\n            WEBSOCKET_URL_OR_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/websocket/websocket.provider.ts\n            \n            variable\n            WEBSOCKET_PROVIDER_FACTORY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/websocket/websocket.type.ts\n            \n            interface\n            WebsocketExponentialBackoffOptions\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/angular-tools/src/lib/workers/websocket/websocket.worker.ts\n            \n            injectable\n            WebsocketWorker\n            \n                69 %\n                (9/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @24vlh/ts-assert : ^1.0.9\n        \n            @24vlh/ts-helpers : ^1.0.0\n        \n            @angular/animations : ^17.3.3\n        \n            @angular/common : ^17.3.3\n        \n            @angular/compiler : ^17.3.3\n        \n            @angular/core : ^17.3.3\n        \n            @angular/forms : ^17.3.3\n        \n            @angular/platform-browser : ^17.3.3\n        \n            @angular/platform-browser-dynamic : ^17.3.3\n        \n            @angular/router : ^17.3.3\n        \n            immutable : ^5.0.0-beta.5\n        \n            rxjs : ^7.8.1\n        \n            tslib : ^2.6.2\n        \n            zone.js : ^0.14.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ExponentiallyBackoff   (projects/.../exponentially-backoff.ts)\n                        \n                        \n                            TimeoutBackoff   (projects/.../timeout-backoff.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-tools/src/lib/helpers/exponentially-backoff/exponentially-backoff.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExponentiallyBackoff\n                        \n                    \n                \n            \n            \n                \nExponentiallyBackoff(maxRetryAttempts: number, initialDelay: number, maxDelay, disableAndUseConstantDelayOf?: number)\n                \n            \n\n\n\n\n            \n                \n                        Function to implement exponential backoff in observables.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                maxRetryAttempts\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3\n                                            \n\n                                            \n                                                    \nThe maximum number of retry attempts. Default is 3.\n\n\n                                            \n                                        \n                                        \n                                                initialDelay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1000\n                                            \n\n                                            \n                                                    \nThe initial delay in milliseconds before the first retry. Default is 1000.\n\n\n                                            \n                                        \n                                        \n                                                maxDelay\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2 * 60 * 1000\n                                            \n\n                                            \n                                                    \nThe maximum delay in milliseconds between retries. Default is 2 minutes.\n\n\n                                            \n                                        \n                                        \n                                                disableAndUseConstantDelayOf\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nIf provided, disables exponential backoff and uses this constant delay instead.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nA function that takes an Observable and returns an Observable with retry logic applied.\n\n\n                            \n                \n            \n        \n    \n    projects/angular-tools/src/lib/helpers/timeout-backoff/timeout-backoff.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TimeoutBackoff\n                        \n                    \n                \n            \n            \n                \nTimeoutBackoff(retryCallback, errorCallback?, maxRetries: number, initialDelay: number, maxDelay)\n                \n            \n\n\n\n\n            \n                \n                        Creates a function that will call a retry callback with an exponentially increasing delay between each call.\nIf the maximum number of retries is exceeded, an optional error callback is called.\nThe delay between retries can be reset by calling the returned function with true.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                retryCallback\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe callback to be called on each retry.\n\n\n                                            \n                                        \n                                        \n                                                errorCallback\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe callback to be called when the maximum number of retries is exceeded.\n\n\n                                            \n                                        \n                                        \n                                                maxRetries\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3\n                                            \n\n                                            \n                                                    \nThe maximum number of retries before the error callback is called.\n\n\n                                            \n                                        \n                                        \n                                                initialDelay\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1000\n                                            \n\n                                            \n                                                    \nThe initial delay in milliseconds before the first retry.\n\n\n                                            \n                                        \n                                        \n                                                maxDelay\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2 * 60 * 1000\n                                            \n\n                                            \n                                                    \nThe maximum delay in milliseconds between retries.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \nA function that when called, will initiate a retry or reset the retry count.\n\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular Tools\nIntersectionObserverDirective\nIntersectionObserverDirective is a directive that implements the Intersection Observer API. It emits an event each\ntime the host element intersects with the viewport.\nUsage\nTo use the IntersectionObserverDirective, add the vlhIntersectionObserver attribute to an element in your template.\nBind a method to the (intersection) output event to handle the intersection event.\nHere's an example:\nExample :\nExponentiallyBackoff Function\nExponentiallyBackoff is a function that implements exponential backoff in observables.\nUsage\nThis function takes four parameters:\n\nmaxRetryAttempts: The maximum number of retry attempts. Default is 3.\ninitialDelay: The initial delay in milliseconds before the first retry. Default is 1000.\nmaxDelay: The maximum delay in milliseconds between retries. Default is 2 minutes.\ndisableAndUseConstantDelayOf: If provided, disables exponential backoff and uses this constant delay instead.\n\nIt returns a function that takes an Observable and returns an Observable with retry logic applied.\nHere's an example:\nExample :ExponentiallyBackoff(10, 1000, 2 * 60 * 1000, 5000);TimeoutBackoff Function\nTimeoutBackoff is a function that implements timeout backoff in observables.\nUsage\nThis function takes three parameters:\n\nmaxRetryAttempts: The maximum number of retry attempts. Default is 3.\ninitialDelay: The initial delay in milliseconds before the first retry. Default is 1000.\nmaxDelay: The maximum delay in milliseconds between retries. Default is 2 minutes.\n\nIt returns a function that takes an Observable and returns an Observable with retry logic applied.\nHere's an example:\nExample :TimeoutBackoff(10, 1000, 2 * 60 * 1000);Service worker classes\n\nCustomEventWorker A class that helps create and listen to custom events.\nPollingWorker A class that helps create and manage polling tasks.\nServerSentEventWorker A class that helps listen to server-sent events.\nStoreWorker A class that helps manage data flow using the Redux pattern.\nSubscriptionWorker A class that helps manage subscriptions to observables.\nWebsocketWorker A class that helps send/read messages to/from a websocket connections.\n\nUsage\nWhen bootstrapping each class, it is best to use the provided PROVIDER_FACTORY helpers.\nCustomEventWorker\nExample :const workerInjectionToken = new InjectionToken>('worker');\nproviders: [\n  CUSTOM_EVENT_PROVIDER_FACTORY(workerInjectionToken)\n]Example :const workerInjectionToken = new InjectionToken>('worker');\nproviders: [\n  CUSTOM_EVENT_PROVIDER_FACTORY(workerInjectionToken, {\n    replySubjectBufferSize: 1,\n    windowObjectInjectionToken: CUSTOM_EVENT_WINDOW_OBJECT,\n    windowObject: window\n  }),\n]Example\nExample :customEventWorker.DispatchCustomEvent(window, 'type', data);Example :customEventWorker.DispatchCustomEvent(window, 'type', data);Example :customEventWorker.dispatch(data);Example :customEventWorker.dispatch(data, eventInitDict);Example :customEventWorker.listen$();Example :customEventWorker.listen$((data: T) => data.key === 'value');Example :customEventWorker.listen$(\n  (data: T) => data.key === 'value',\n  (prev: T, curr: T) => prev.key === curr.key\n);Example :customEventWorker.listen$().pipe(\n  filter((data: T) => data.key === 'value')\n);PollingWorker\nExample :const workerInjectionToken = new InjectionToken>('worker');\nproviders: [\n  POLLING_PROVIDER_FACTORY(workerInjectionToken)\n]Example :const workerInjectionToken = new InjectionToken>('worker');\nproviders: [\n  POLLING_PROVIDER_FACTORY(workerInjectionToken, {\n    windowObjectInjectionToken: POLLING_WINDOW_OBJECT,\n    windowObject: window\n  }),\n]Example\nExample :pollingWorker.startPolling(url);Example :pollingWorker.startPolling(url, 1000);Example :pollingWorker.startPolling(url, 1000, (data: T) => data.key === 'value');Example :pollingWorker.startPolling(\n  url,\n  1000,\n  (data: T) => data.key === 'value',\n  (prev: T, curr: T) => prev.key === curr.key\n);Example :pollingWorker.startPolling(url, 1000).pipe(\n  filter((data: T) => data.key === 'value')\n);ServerSentEventWorker\nExample :const workerInjectionToken = new InjectionToken>('worker');\nproviders: [\n  SERVER_SENT_EVENT_PROVIDER_FACTORY(workerInjectionToken)\n]Example :const workerInjectionToken = new InjectionToken>('worker');\nproviders: [\n  SERVER_SENT_EVENT_PROVIDER_FACTORY(workerInjectionToken, {\n    windowObjectInjectionToken: SERVER_SENT_EVENT_WINDOW_OBJECT,\n    windowObject: window\n  }),\n]Example\nExample :serverSentEventWorker.connect();Example :serverSentEventWorker.listen$();Example :serverSentEventWorker.listen$((data: T) => data.key === 'value');Example :serverSentEventWorker.listen$(\n  (data: T) => data.key === 'value',\n  (prev: T, curr: T) => prev.key === curr.key\n);Example :serverSentEventWorker.listen$().pipe(\n  filter((data: T) => data.key === 'value')\n);StoreWorker\nExample :const workerInjectionToken = new InjectionToken>('worker');\nproviders: [\n  STORE_PROVIDER_FACTORY(workerInjectionToken)\n]Example :const workerInjectionToken = new InjectionToken>('worker');\nproviders: [\n  STORE_PROVIDER_FACTORY(workerInjectionToken, {\n    windowObjectInjectionToken: STORE_WINDOW_OBJECT,\n    windowObject: window\n  }),\n]SubscriptionWorker\nExample :const workerInjectionToken = new InjectionToken>('worker');\nproviders: [\n  SUBSCRIPTION_PROVIDER_FACTORY(workerInjectionToken)\n]Example :const workerInjectionToken = new InjectionToken>('worker');\nproviders: [\n  SUBSCRIPTION_PROVIDER_FACTORY(workerInjectionToken, {\n    windowObjectInjectionToken: SUBSCRIPTION_WINDOW_OBJECT,\n    windowObject: window\n  }),\n]Example\nExample :subscriptionWorker.add(subscriptionLike);Example :subscriptionWorker.unsubscribe();Example :subscriptionWorker.map('key', subscriptionLike);Example :subscriptionWorker.unsubscribeMapped('key');Example :subscriptionWorker.unsubscribeAllMapped();WebsocketWorker\nExample :const workerInjectionToken = new InjectionToken>('worker');\nproviders: [\n  WEBSOCKET_PROVIDER_FACTORY(workerInjectionToken)\n]Example :const workerInjectionToken = new InjectionToken>('worker');\nproviders: [\n  WEBSOCKET_PROVIDER_FACTORY(workerInjectionToken, {\n    windowObjectInjectionToken: WEBSOCKET_WINDOW_OBJECT,\n    windowObject: window\n  }),\n]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\nExample :  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\nExample :   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.3\n        \n            Description : Small footprint library for Angular projects.\n        \n            Keywords : angular library, angular redux store, angular websockets, angular server sent events\n        \n            License : Apache-2.0\n        \n            Author : @vlah.io\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PollingComparer   (projects/.../polling.type.ts)\n                        \n                        \n                            PollingFilter   (projects/.../polling.type.ts)\n                        \n                        \n                            WebsocketEventObserver   (projects/.../websocket.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-tools/src/lib/workers/polling/polling.type.ts\n    \n    \n        \n            \n                \n                    \n                    PollingComparer\n                \n            \n            \n                \n                    The PollingComparer type is used to compare the current and previous responses.\nThe PollingComparer type is a function that takes two arguments: the previous response and the current response.\nThe function returns a boolean value indicating whether the current response is equal to the previous response.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PollingFilter\n                \n            \n            \n                \n                    The PollingFilter type is used to filter the response of the HTTP GET request.\nThe PollingFilter type is a function that takes the response of the HTTP GET request as an argument and returns a boolean value.\nIf the function returns true, the Observable will emit the response.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/angular-tools/src/lib/workers/websocket/websocket.type.ts\n    \n    \n        \n            \n                \n                    \n                    WebsocketEventObserver\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BootstrapPollingSession   (projects/.../polling.helper.ts)\n                        \n                        \n                            CUSTOM_EVENT_PROVIDER_FACTORY   (projects/.../custom-event.provider.ts)\n                        \n                        \n                            CUSTOM_EVENT_STREAM_REPLAY_SUBJECT   (projects/.../custom-event.injection-token.ts)\n                        \n                        \n                            CUSTOM_EVENT_TYPE   (projects/.../custom-event.injection-token.ts)\n                        \n                        \n                            CUSTOM_EVENT_WINDOW_OBJECT   (projects/.../custom-event.injection-token.ts)\n                        \n                        \n                            DispatchCustomEvent   (projects/.../custom-event.helper.ts)\n                        \n                        \n                            Get   (projects/.../store.helper.ts)\n                        \n                        \n                            GetIn   (projects/.../store.helper.ts)\n                        \n                        \n                            HttpRequestFactory   (projects/.../http-submit.ts)\n                        \n                        \n                            HttpSubmitFactory   (projects/.../http-submit.ts)\n                        \n                        \n                            PollFactory   (projects/.../polling.helper.ts)\n                        \n                        \n                            POLLING_WORKER_PROVIDER_FACTORY   (projects/.../polling.provider.ts)\n                        \n                        \n                            RegisterToCustomEvent   (projects/.../custom-event.helper.ts)\n                        \n                        \n                            Select$   (projects/.../store.helper.ts)\n                        \n                        \n                            SelectIn$   (projects/.../store.helper.ts)\n                        \n                        \n                            SERVER_EVENT_SENT_PROVIDER_FACTORY   (projects/.../server-sent-event.provider.ts)\n                        \n                        \n                            SERVER_SENT_EVENT_TIMEOUT_BACKOFF_CONFIGS   (projects/.../server-sent-event.injection-token.ts)\n                        \n                        \n                            SERVER_SENT_EVENT_URL   (projects/.../server-sent-event.injection-token.ts)\n                        \n                        \n                            SERVER_SENT_EVENT_WITH_CREDENTIALS   (projects/.../server-sent-event.injection-token.ts)\n                        \n                        \n                            StartPolling   (projects/.../polling.helper.ts)\n                        \n                        \n                            STORE_PROVIDER_FACTORY   (projects/.../store.provider.ts)\n                        \n                        \n                            STORE_WORKER_INITIAL_STATE   (projects/.../store.injection-token.ts)\n                        \n                        \n                            SUBSCRIPTION_WORKER_PROVIDER   (projects/.../subscription.provider.ts)\n                        \n                        \n                            WEBSOCKET_CLOSE_HANDLER   (projects/.../websocket.injection-token.ts)\n                        \n                        \n                            WEBSOCKET_EXPONENTIAL_BACKOFF_OPTIONS   (projects/.../websocket.injection-token.ts)\n                        \n                        \n                            WEBSOCKET_OPEN_HANDLER   (projects/.../websocket.injection-token.ts)\n                        \n                        \n                            WEBSOCKET_PROVIDER_FACTORY   (projects/.../websocket.provider.ts)\n                        \n                        \n                            WEBSOCKET_URL_OR_OPTIONS   (projects/.../websocket.injection-token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-tools/src/lib/workers/polling/polling.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BootstrapPollingSession\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  httpGetCall: Observable,\n  interval: number,\n  configs?: Omit, 'httpOptions'>\n): PollingManager => {\n  const observable: Observable = StartPolling(\n    httpGetCall,\n    interval,\n    configs\n  );\n  let subscription: Subscription = observable.subscribe();\n\n  return {\n    get pollingObservable$(): Observable {\n      return observable;\n    },\n    get pollingSubscription(): Subscription {\n      return subscription;\n    },\n    stop(): void {\n      if (!subscription.closed) {\n        subscription.unsubscribe();\n      }\n    },\n    resume(): void {\n      if (subscription.closed) {\n        subscription = observable.subscribe();\n      }\n    },\n    restart(): void {\n      this.stop();\n      this.resume();\n    }\n  };\n}\n                    \n                \n\n            \n                \n                    The BootstrapPollingSession function is used to create a polling manager with a specific time interval and configuration.\nThe polling manager controls the polling operation and provides methods to stop and resume the polling operation.\nThe polling manager also provides an Observable that emits the response of each HTTP GET request.\nThe polling manager is created with the httpGetCall function, which returns an Observable of the HTTP GET request, the time interval, and the configuration object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PollFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  interval: number,\n  configs?: Omit, 'httpOptions'>\n): ((httpGetCall: Observable) => Observable) => {\n  return (httpGetCall: Observable) =>\n    StartPolling(httpGetCall, interval, configs);\n}\n                    \n                \n\n            \n                \n                    The pollFactory function is used to create a polling function with a specific time interval and configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StartPolling\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  httpGetCall: Observable,\n  interval: number,\n  configs?: Omit, 'httpOptions'>\n): Observable => {\n  return timer(0, interval).pipe(\n    switchMap(() => httpGetCall),\n    filter(\n      ((filterCallback: PollingFilter | undefined) => {\n        return (data: T): boolean => {\n          if (OfFunctionType>(filterCallback)) {\n            return filterCallback(data);\n          } else {\n            return true;\n          }\n        };\n      })(configs?.filterCallback)\n    ),\n    distinctUntilChanged(\n      OfFunctionType(configs?.comparerCallback)\n        ? configs?.comparerCallback\n        : (prev: T, curr: T): boolean =>\n            JSON.stringify(prev) === JSON.stringify(curr)\n    ),\n    tap(configs?.callback)\n  );\n}\n                    \n                \n\n            \n                \n                    The startPolling function is used to perform HTTP GET requests at regular intervals.\n\n                \n            \n\n        \n    \n\n    projects/angular-tools/src/lib/workers/event/custom-event.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CUSTOM_EVENT_PROVIDER_FACTORY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  workerInjectionToken: InjectionToken>,\n  configs?: CustomEventProviderFactoryConfigs\n): Provider[] => {\n  configs = {\n    ...{\n      replySubjectBufferSize: 1,\n      windowObjectInjectionToken: CUSTOM_EVENT_WINDOW_OBJECT,\n      windowObject: window\n    },\n    ...(OfObjectType(configs) ? configs : {})\n  };\n  return [\n    {\n      provide: workerInjectionToken,\n      useFactory: (windowObject: Window & typeof globalThis) =>\n        new CustomEventWorker(\n          workerInjectionToken.toString(),\n          new ReplaySubject(configs.replySubjectBufferSize),\n          windowObject\n        ),\n      deps: [configs.windowObjectInjectionToken]\n    },\n    {\n      provide: configs.windowObjectInjectionToken,\n      useValue: configs.windowObject\n    }\n  ];\n}\n                    \n                \n\n            \n                \n                    CUSTOM_EVENT_PROVIDER_FACTORY is a function that provides a custom event worker and a custom event stream.\nIt is used to provide a custom event worker instance and a custom event stream.\nThe localized injection tokens should be defined locally and for them to pass\nand not fail, they should be identical in type/value with the type/value expected.\n\n                \n            \n\n        \n    \n\n    projects/angular-tools/src/lib/workers/event/custom-event.injection-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CUSTOM_EVENT_STREAM_REPLAY_SUBJECT\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InjectionToken>\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken>(\n  'CUSTOM_EVENT_STREAM_REPLAY_SUBJECT'\n)\n                    \n                \n\n            \n                \n                    InjectionToken for a ReplaySubject that streams custom events.\nThis InjectionToken is used to provide a ReplaySubject that can be used to stream custom events in the application.\nThe ReplaySubject is typed as unknown, meaning it can emit values of any type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CUSTOM_EVENT_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InjectionToken\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken('CUSTOM_EVENT_TYPE')\n                    \n                \n\n            \n                \n                    InjectionToken for the type of custom event.\nThis InjectionToken is used to provide the type of custom event in the application.\nThe type of the custom event is a string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CUSTOM_EVENT_WINDOW_OBJECT\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InjectionToken<>\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken(\n  'CUSTOM_EVENT_WINDOW_OBJECT'\n)\n                    \n                \n\n            \n                \n                    InjectionToken for a Window object.\nThis InjectionToken is used to provide a Window object that can be used to dispatch custom events in the application.\nThe Window object is typed as Window & typeof globalThis, meaning it can be used to dispatch custom events in the application.\n\n                \n            \n\n        \n    \n\n    projects/angular-tools/src/lib/workers/event/custom-event.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DispatchCustomEvent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  windowObject: Window,\n  type: string,\n  data: T,\n  eventInitDict?: CustomEventInit\n): void => {\n  windowObject.dispatchEvent(new CustomEventApi(type, data, eventInitDict));\n}\n                    \n                \n\n            \n                \n                    Dispatches a custom event with the provided data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RegisterToCustomEvent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  windowObject: Window,\n  type: string,\n  callback: (data: T) => void\n): void => {\n  windowObject.addEventListener(type, (event: Event): void => {\n    callback((event as CustomEventApi).data);\n  });\n}\n                    \n                \n\n            \n                \n                    Registers a callback function to be executed when a custom event of the provided type is dispatched.\n\n                \n            \n\n        \n    \n\n    projects/angular-tools/src/lib/workers/store/store.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Get\n                        \n                    \n                \n            \n                \n                    \n                        Default value : , R, K extends keyof T>(\n    storeInstance: StoreWorker\n  ): ((key: K) => R | undefined) =>\n  (key: K): R | undefined =>\n    storeInstance.get(key)\n                    \n                \n\n            \n                \n                    A generic function that retrieves a value from the store instance.\nThe value is retrieved based on the provided key.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GetIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : , R>(\n    storeInstance: StoreWorker\n  ): ((\n    searchKeyPath: string | (keyof T)[],\n    notSetValue?: R | undefined\n  ) => R | undefined) =>\n  (\n    searchKeyPath: string | (keyof T)[],\n    notSetValue: R | undefined = undefined\n  ): R | undefined => {\n    return storeInstance.getIn(searchKeyPath, notSetValue);\n  }\n                    \n                \n\n            \n                \n                    A generic function that retrieves a value from the store instance.\nThe value is retrieved based on the provided key path.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Select$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : , R, K extends keyof T>(\n    storeInstance: StoreWorker\n  ): ((\n    key: K,\n    filterCallback?: (data: R) => boolean,\n    comparerCallback?: (prev: R, curr: R) => boolean,\n    notSetValue?: R | undefined\n  ) => Observable) =>\n  (\n    key: K,\n    filterCallback?: (data: R) => boolean,\n    comparerCallback?: (prev: R, curr: R) => boolean,\n    notSetValue: R | undefined = undefined\n  ): Observable =>\n    storeInstance.select$(key, filterCallback, comparerCallback, notSetValue)\n                    \n                \n\n            \n                \n                    A generic function that retrieves a value from the store instance.\nThe value is retrieved based on the provided key.\nThe value is returned as an observable.\nThe observable emits the value associated with the key whenever the value changes.\nIf the value does not exist, the observable emits undefined.\nIf a filter callback is provided, the observable emits the value only if the filter callback returns true.\nIf a comparer callback is provided, the observable emits the value only if the comparer callback returns true.\nIf a notSetValue is provided, the observable emits the notSetValue if the value does not exist.\nIf a notSetValue is not provided, the observable emits undefined if the value does not exist.\nIf a notSetValue is provided, the observable emits the notSetValue if the filter callback returns false.\nIf a notSetValue is not provided, the observable emits undefined if the filter callback returns false.\nIf a notSetValue is provided, the observable emits the notSetValue if the comparer callback returns false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SelectIn$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : , R>(\n    storeInstance: StoreWorker\n  ): ((\n    searchKeyPath: string | (keyof T)[],\n    filterCallback?: (data: R) => boolean,\n    comparerCallback?: (prev: R, curr: R) => boolean,\n    notSetValue?: R | undefined\n  ) => Observable) =>\n  (\n    searchKeyPath: string | (keyof T)[],\n    filterCallback?: (data: R) => boolean,\n    comparerCallback?: (prev: R, curr: R) => boolean,\n    notSetValue: R | undefined = undefined\n  ): Observable =>\n    storeInstance.selectIn$(\n      searchKeyPath,\n      filterCallback,\n      comparerCallback,\n      notSetValue\n    )\n                    \n                \n\n            \n                \n                    A generic function that retrieves a value from the store instance.\nThe value is retrieved based on the provided key path.\nThe value is returned as an observable.\nThe observable emits the value associated with the key path whenever the value changes.\nIf the value does not exist, the observable emits undefined.\nIf a filter callback is provided, the observable emits the value only if the filter callback returns true.\nIf a comparer callback is provided, the observable emits the value only if the comparer callback returns true.\nIf a notSetValue is provided, the observable emits the notSetValue if the value does not exist.\nIf a notSetValue is not provided, the observable emits undefined if the value does not exist.\nIf a notSetValue is provided, the observable emits the notSetValue if the filter callback returns false.\nIf a notSetValue is not provided, the observable emits undefined if the filter callback returns false.\nIf a notSetValue is provided, the observable emits the notSetValue if the comparer callback returns false.\n\n                \n            \n\n        \n    \n\n    projects/angular-tools/src/lib/helpers/http/http-submit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpRequestFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  http: HttpClient,\n  url: string,\n  type: 'POST' | 'PUT' | 'PATCH',\n  options?: HttpRequest,\n  retryCount = 3,\n  onlyHttpResponses?: boolean\n) => {\n  if (EmptyString(url)) {\n    throw new Error('URL is required');\n  }\n\n  const subject: Subject = new Subject();\n  const observable: Observable = subject.asObservable();\n\n  const filterCallback =\n    OfUndefinedType(onlyHttpResponses) || OfTrueType(onlyHttpResponses)\n      ? (event: HttpEvent): boolean => event instanceof HttpResponse\n      : (): boolean => true;\n\n  return {\n    submit: (data: T) => subject.next(data),\n    request$: observable.pipe(\n      distinctUntilChanged(),\n      switchMap((data: T) => {\n        const req: HttpRequest = new HttpRequest(\n          type,\n          url,\n          data,\n          options\n        );\n        return http.request(req).pipe(retry(retryCount));\n      }),\n      filter(filterCallback)\n    )\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HttpSubmitFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  http: HttpClient,\n  configs: HttpSubmitConfig\n) => {\n  if (EmptyString(configs.url)) {\n    throw new Error('URL is required');\n  }\n\n  configs.filterCallback =\n    OfUndefinedType(configs.onlyHttpResponses) ||\n    OfTrueType(configs.onlyHttpResponses)\n      ? (event: HttpEvent): boolean => event instanceof HttpResponse\n      : (): boolean => true;\n\n  const postSubject: Subject = new Subject();\n  const putSubject: Subject = new Subject();\n  const patchSubject: Subject = new Subject();\n\n  const postObservable: Observable = postSubject.asObservable();\n  const putObservable: Observable = putSubject.asObservable();\n  const patchObservable: Observable = patchSubject.asObservable();\n\n  return {\n    post: (data: T) => postSubject.next(data),\n    put: (data: T) => putSubject.next(data),\n    patch: (data: T) => patchSubject.next(data),\n    request$: merge(\n      postObservable.pipe(\n        distinctUntilChanged(),\n        switchMap((data: T) => {\n          const req: HttpRequest = new HttpRequest(\n            'POST',\n            configs.postUrl ?? configs.url,\n            data,\n            configs.postOptions ?? configs.options ?? {}\n          );\n          return http.request(req).pipe(retry(configs.retryCount ?? 3));\n        })\n      ),\n      putObservable.pipe(\n        distinctUntilChanged(),\n        switchMap((data: T) => {\n          const req: HttpRequest = new HttpRequest(\n            'PUT',\n            configs.putUrl ?? configs.url,\n            data,\n            configs.putOptions ?? configs.options ?? {}\n          );\n          return http.request(req).pipe(retry(configs.retryCount ?? 3));\n        })\n      ),\n      patchObservable.pipe(\n        distinctUntilChanged(),\n        switchMap((data: T) => {\n          const req: HttpRequest = new HttpRequest(\n            'PATCH',\n            configs.patchUrl ?? configs.url,\n            data,\n            configs.patchOptions ?? configs.options ?? {}\n          );\n          return http.request(req).pipe(retry(configs.retryCount ?? 3));\n        })\n      )\n    ).pipe(filter(configs.filterCallback))\n  };\n}\n                    \n                \n\n\n        \n    \n\n    projects/angular-tools/src/lib/workers/polling/polling.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        POLLING_WORKER_PROVIDER_FACTORY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  workerInjectionToken:\n    | typeof PollingWorker\n    | InjectionToken = PollingWorker\n): FactoryProvider => {\n  return {\n    provide: workerInjectionToken,\n    useFactory: (http: HttpClient) => {\n      return new PollingWorker(http);\n    },\n    deps: [HttpClient]\n  };\n}\n                    \n                \n\n            \n                \n                    Factory function to create a provider for the polling worker\n\n                \n            \n\n        \n    \n\n    projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SERVER_EVENT_SENT_PROVIDER_FACTORY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  url: string,\n  timeoutBackoffConfigs?: TimeoutBackoffConfigs,\n  workerInjectionToken:\n    | typeof ServerSentEventWorker\n    | InjectionToken> = ServerSentEventWorker,\n  withCredentials?: boolean\n): FactoryProvider => {\n  return {\n    provide: workerInjectionToken,\n    useFactory: (ngZone: NgZone) =>\n      new ServerSentEventWorker(\n        url,\n        withCredentials,\n        timeoutBackoffConfigs,\n        ngZone\n      ),\n    deps: [NgZone]\n  };\n}\n                    \n                \n\n            \n                \n                    Factory function to create a provider for the server-sent event worker\n\n                \n            \n\n        \n    \n\n    projects/angular-tools/src/lib/workers/server-sent-event/server-sent-event.injection-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SERVER_SENT_EVENT_TIMEOUT_BACKOFF_CONFIGS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InjectionToken\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken(\n    'SERVER_SENT_EVENT_TIMEOUT_BACKOFF_CONFIGS'\n  )\n                    \n                \n\n            \n                \n                    InjectionToken for the server-sent event timeout backoff configs.\nThis InjectionToken is used to provide the server-sent event timeout backoff configs in the application.\nThe server-sent event timeout backoff configs are of type TimeoutBackoffConfigs.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERVER_SENT_EVENT_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InjectionToken\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken('SERVER_SENT_EVENT_URL')\n                    \n                \n\n            \n                \n                    InjectionToken for the server-sent event URL.\nThis InjectionToken is used to provide the server-sent event URL in the application.\nThe server-sent event URL is a string.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERVER_SENT_EVENT_WITH_CREDENTIALS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InjectionToken\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken('SERVER_SENT_EVENT_WITH_CREDENTIALS')\n                    \n                \n\n            \n                \n                    InjectionToken for the server-sent event with credentials.\nThis InjectionToken is used to provide the server-sent event with credentials in the application.\nThe server-sent event with credentials is a boolean.\n\n                \n            \n\n        \n    \n\n    projects/angular-tools/src/lib/workers/store/store.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        STORE_PROVIDER_FACTORY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(\n  initialState: T,\n  workerInjectionToken: typeof StoreWorker | InjectionToken>\n): FactoryProvider => {\n  return {\n    provide: workerInjectionToken,\n    useFactory: (): StoreWorker => new StoreWorker(initialState)\n  };\n}\n                    \n                \n\n            \n                \n                    Factory function for creating a StoreWorker provider.\n\n                \n            \n\n        \n    \n\n    projects/angular-tools/src/lib/workers/store/store.injection-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        STORE_WORKER_INITIAL_STATE\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InjectionToken<>\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken('STORE_WORKER_INITIAL_STATE')\n                    \n                \n\n            \n                \n                    STORE_WORKER_INITIAL_STATE is an injection token for the initial state of the store worker.\nIt is used to provide the initial state of the store worker.\n\n                \n            \n\n        \n    \n\n    projects/angular-tools/src/lib/workers/subscription/subscription.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SUBSCRIPTION_WORKER_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: SubscriptionWorker,\n  useFactory: () => {\n    return new SubscriptionWorker();\n  }\n}\n                    \n                \n\n            \n                \n                    Factory function to create a provider for the subscription worker\n\n                \n            \n\n        \n    \n\n    projects/angular-tools/src/lib/workers/websocket/websocket.injection-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WEBSOCKET_CLOSE_HANDLER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InjectionToken\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken('WEBSOCKET_CLOSE_HANDLER')\n                    \n                \n\n            \n                \n                    The WEBSOCKET_CLOSE_HANDLER injection token is used to provide a callback function that is executed when the WebSocket connection is closed.\nThis can be used to perform cleanup operations or to notify other parts of the application that the connection has been closed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WEBSOCKET_EXPONENTIAL_BACKOFF_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InjectionToken\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken(\n    'WEBSOCKET_EXPONENTIAL_BACKOFF_OPTIONS'\n  )\n                    \n                \n\n            \n                \n                    The WEBSOCKET_EXPONENTIAL_BACKOFF_OPTIONS injection token is used to provide the configuration options for\nan exponential backoff strategy in a WebSocket connection.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WEBSOCKET_OPEN_HANDLER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InjectionToken\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken('WEBSOCKET_OPEN_HANDLER')\n                    \n                \n\n            \n                \n                    The WEBSOCKET_OPEN_HANDLER injection token is used to provide a callback function that is executed when the WebSocket connection is opened.\nThis can be used to perform initialization operations or to notify other parts of the application that the connection has been opened.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WEBSOCKET_URL_OR_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InjectionToken\n\n                    \n                \n                \n                    \n                        Default value : new InjectionToken>(\n  'WEBSOCKET_URL_OR_OPTIONS'\n)\n                    \n                \n\n            \n                \n                    The WEBSOCKET_URL_OR_OPTIONS injection token is used to provide the WebSocket server URL or configuration options.\nThis can either be a string representing the URL of the WebSocket server,\nor a WebSocketSubjectConfig object that configures the WebSocket connection.\n\n                \n            \n\n        \n    \n\n    projects/angular-tools/src/lib/workers/websocket/websocket.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        WEBSOCKET_PROVIDER_FACTORY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  urlOrWebSocketSubjectConfig: string | WebSocketSubjectConfig,\n  workerInjectionToken:\n    | typeof WebsocketWorker\n    | InjectionToken> = WebsocketWorker,\n  exponentialBackoffOptions: WebsocketExponentialBackoffOptions | null = null,\n  openEventObserver: WebsocketEventObserver | null = null,\n  closeEventObserver: WebsocketEventObserver | null = null\n): FactoryProvider => {\n  return {\n    provide: workerInjectionToken,\n    useFactory: () =>\n      new WebsocketWorker(\n        urlOrWebSocketSubjectConfig,\n        exponentialBackoffOptions,\n        openEventObserver,\n        closeEventObserver\n      )\n  };\n}\n                    \n                \n\n            \n                \n                    Factory function to create a provider for the websocket worker\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
